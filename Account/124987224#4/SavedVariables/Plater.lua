
PlaterDB = {
	["captured_spells"] = {
		[49034] = {
			["encounterName"] = "Novos the Summoner",
			["source"] = "Novos the Summoner",
			["npcID"] = 26631,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 371,
		},
		[61575] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Iron Thane Furyhammer",
			["npcID"] = 26405,
		},
		[66060] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Plainstrider",
			["npcID"] = 2955,
		},
		[16587] = {
			["isChanneled"] = false,
			["source"] = "Vile Tutor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8548,
		},
		[16843] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Eldreth Seether",
			["npcID"] = 11469,
		},
		[79881] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hearthglen Trainee",
			["npcID"] = 45162,
		},
		[58504] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Portal Guardian",
			["npcID"] = 30660,
		},
		[88839] = {
			["encounterName"] = "Admiral Ripsnarl",
			["source"] = "Admiral Ripsnarl",
			["npcID"] = 47626,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1062,
		},
		[10887] = {
			["isChanneled"] = false,
			["source"] = "Magistrate Barthilas",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10435,
		},
		[48267] = {
			["encounterName"] = "Svala Sorrowgrave",
			["type"] = "DEBUFF",
			["source"] = "Svala Sorrowgrave",
			["npcID"] = 26668,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 577,
		},
		[36238] = {
			["isChanneled"] = false,
			["source"] = "Fel Cannon MKI",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 22461,
		},
		[56969] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Azure Scale-Binder",
			["npcID"] = 26735,
		},
		[61576] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Iron Thane Furyhammer",
			["npcID"] = 26405,
		},
		[18763] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ras Frostwhisper",
			["npcID"] = 10508,
		},
		[79883] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hearthglen Trainee",
			["npcID"] = 45162,
		},
		[15654] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Protector",
			["npcID"] = 10487,
		},
		[34447] = {
			["isChanneled"] = false,
			["source"] = "Spitelash Enchantress",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7886,
		},
		[73485] = {
			["isChanneled"] = false,
			["source"] = "Gnomeregan Stealth Fighter Machine Gun",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40785,
		},
		[16006] = {
			["isChanneled"] = false,
			["source"] = "Antu'sul",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8127,
		},
		[55946] = {
			["isChanneled"] = false,
			["source"] = "Orinoko Tuskbreaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30020,
		},
		[11975] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Skeletal Guardian",
			["npcID"] = 10390,
		},
		[32264] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Shirrak the Dead Watcher",
			["npcID"] = 18371,
		},
		[52491] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Crypt Fiend",
			["npcID"] = 27734,
		},
		[12167] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Grimlok",
			["npcID"] = 4854,
		},
		[8148] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lady Anacondra",
			["npcID"] = 3671,
		},
		[81420] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gnome Engineer",
			["npcID"] = 35334,
		},
		[61577] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "The Anvil",
			["npcID"] = 26406,
		},
		[8264] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Stonevault Oracle",
			["npcID"] = 4852,
		},
		[49548] = {
			["encounterName"] = "The Prophet Tharon'ja",
			["source"] = "The Prophet Tharon'ja",
			["npcID"] = 26632,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 375,
		},
		[33424] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mag'har Pitfighter",
			["npcID"] = 19140,
		},
		[12551] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Weapon Technician",
			["npcID"] = 8920,
		},
		[58506] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Deathstalker Commander Belmont",
			["npcID"] = 47293,
		},
		[17228] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Marduk Blackpool",
			["npcID"] = 10433,
		},
		[59146] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Willey Hopebreaker",
			["npcID"] = 10997,
		},
		[55563] = {
			["isChanneled"] = false,
			["source"] = "Drakkari Earthshaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29829,
		},
		[21707] = {
			["isChanneled"] = false,
			["source"] = "Noxxion",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13282,
		},
		[76047] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["isChanneled"] = false,
			["encounterID"] = 1044,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40765,
		},
		[56715] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Plundering Geist",
			["npcID"] = 30287,
		},
		[76815] = {
			["isChanneled"] = false,
			["source"] = "Naz'jar Spiritmender",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41096,
		},
		[9128] = {
			["isChanneled"] = false,
			["source"] = "Wildspawn Satyr",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11451,
		},
		[93707] = {
			["encounterName"] = "Lord Godfrey",
			["source"] = "Lord Godfrey",
			["npcID"] = 46964,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1072,
		},
		[49037] = {
			["encounterName"] = "Novos the Summoner",
			["source"] = "Novos the Summoner",
			["npcID"] = 26631,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 371,
		},
		[49165] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Ymirjar Berserker",
			["npcID"] = 26696,
		},
		[9256] = {
			["isChanneled"] = false,
			["source"] = "High Inquisitor Whitemane",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3977,
		},
		[49805] = {
			["encounterName"] = "Trollgore",
			["source"] = "Scourge Reanimator",
			["npcID"] = 26626,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 369,
		},
		[54028] = {
			["source"] = "Silver Covenant Guardian Mage",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 29254,
		},
		[76560] = {
			["isChanneled"] = false,
			["source"] = "Gilgoblin Aquamage",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40943,
		},
		[9672] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Skeletal Guardian",
			["npcID"] = 10390,
		},
		[13895] = {
			["isChanneled"] = false,
			["source"] = "Bael'Gar",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 9016,
		},
		[32009] = {
			["isChanneled"] = false,
			["source"] = "Fel Soldier",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18944,
		},
		[55948] = {
			["isChanneled"] = false,
			["source"] = "Korrak the Bloodrager",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30023,
		},
		[52237] = {
			["encounterName"] = "Volkhan",
			["source"] = "Volkhan",
			["encounterID"] = 557,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28587,
		},
		[32329] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Underbog Shambler",
			["npcID"] = 17871,
		},
		[52493] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Watcher Silthik",
			["npcID"] = 28731,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 216,
		},
		[56716] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Frostbringer",
			["npcID"] = 30286,
		},
		[81680] = {
			["source"] = "Wiry Swoop",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 2969,
		},
		[32914] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodspore Moth",
			["npcID"] = 25464,
		},
		[49678] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ghoul Tormentor",
			["npcID"] = 26621,
		},
		[49806] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Anub'ar Warrior",
			["npcID"] = 28732,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 216,
		},
		[33554] = {
			["isChanneled"] = false,
			["source"] = "Justinius the Harbinger",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18966,
		},
		[21068] = {
			["isChanneled"] = false,
			["source"] = "Corruptor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12217,
		},
		[34322] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nexus Terror",
			["npcID"] = 19307,
		},
		[50830] = {
			["encounterName"] = "Sjonnir the Ironshaper",
			["source"] = "Sjonnir The Ironshaper",
			["npcID"] = 27978,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 569,
		},
		[17293] = {
			["isChanneled"] = false,
			["source"] = "Instructor Galford",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10811,
		},
		[74003] = {
			["isChanneled"] = false,
			["source"] = "Trade Prince Gallywix",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39582,
		},
		[5413] = {
			["isChanneled"] = false,
			["source"] = "Corruptor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12217,
		},
		[17613] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scholomance Acolyte",
			["npcID"] = 10471,
		},
		[17741] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Azure Warder",
			["npcID"] = 26716,
		},
		[75539] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Rom'ogg Bonecrusher",
			["isChanneled"] = false,
			["encounterID"] = 1040,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39665,
		},
		[52238] = {
			["encounterName"] = "Volkhan",
			["source"] = "Volkhan",
			["encounterID"] = 557,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28587,
		},
		[84497] = {
			["isChanneled"] = false,
			["source"] = "Tainted Black Bear",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42336,
		},
		[5605] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Stonevault Oracle",
			["npcID"] = 4852,
		},
		[74004] = {
			["isChanneled"] = false,
			["source"] = "Trade Prince Gallywix",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39582,
		},
		[53646] = {
			["source"] = "Rivinshok",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[49807] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dragonflayer Huscarl",
			["npcID"] = 27260,
		},
		[22924] = {
			["isChanneled"] = false,
			["source"] = "Tendris Warpwood",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11489,
		},
		[50319] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Kel'Thuzad",
			["npcID"] = 25465,
		},
		[84498] = {
			["source"] = "Tainted Black Bear",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 42336,
		},
		[50831] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sjonnir The Ironshaper",
			["npcID"] = 27978,
		},
		[81683] = {
			["isChanneled"] = false,
			["source"] = "Flatland Prowler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3566,
		},
		[74005] = {
			["isChanneled"] = false,
			["source"] = "Trade Prince Gallywix",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39582,
		},
		[31946] = {
			["encounterName"] = "Swamplord Musel'ek",
			["source"] = "Swamplord Musel'ek",
			["npcID"] = 17826,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1947,
		},
		[745] = {
			["isChanneled"] = false,
			["source"] = "Tomb Reaver",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7351,
		},
		[43665] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dragonflayer Heartsplitter",
			["npcID"] = 24071,
		},
		[11976] = {
			["isChanneled"] = false,
			["source"] = "Ragefire Trogg",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11318,
		},
		[48016] = {
			["encounterName"] = "Ormorok the Tree-Shaper",
			["source"] = "Ormorok the Tree-Shaper",
			["npcID"] = 26794,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 524,
		},
		[12040] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Marduk Blackpool",
			["npcID"] = 10433,
		},
		[32330] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lykul Wasp",
			["npcID"] = 17732,
		},
		[48400] = {
			["encounterName"] = "Prince Keleseth",
			["type"] = "DEBUFF",
			["source"] = "Frost Tomb",
			["npcID"] = 23965,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 571,
		},
		[52879] = {
			["isChanneled"] = false,
			["source"] = "Titanium Thunderer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28965,
		},
		[32714] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Vladek",
			["npcID"] = 27547,
		},
		[32916] = {
			["isChanneled"] = false,
			["source"] = "Shadowsworn Enforcer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6007,
		},
		[16590] = {
			["isChanneled"] = false,
			["source"] = "Dark Summoner",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8551,
		},
		[8361] = {
			["isChanneled"] = false,
			["source"] = "Charlga Razorflank",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4421,
		},
		[21069] = {
			["isChanneled"] = false,
			["source"] = "Vile Larva",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12218,
		},
		[25228] = {
			["source"] = "Rivinshok",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17252,
		},
		[81173] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Frenzied Plaguehound",
			["npcID"] = 8598,
		},
		[17294] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ezra Grimm",
			["npcID"] = 11058,
		},
		[86292] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Ertan's Vortex",
			["npcID"] = 46007,
		},
		[43410] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Silverbrook Villager",
			["npcID"] = 26708,
		},
		[8873] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Child of Volcanoth",
			["npcID"] = 38845,
		},
		[48017] = {
			["encounterName"] = "Ormorok the Tree-Shaper",
			["source"] = "Ormorok the Tree-Shaper",
			["npcID"] = 26794,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 524,
		},
		[6533] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Warden",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4437,
		},
		[52496] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Crypt Fiend",
			["npcID"] = 27734,
		},
		[48529] = {
			["encounterName"] = "King Ymiron",
			["source"] = "King Ymiron",
			["npcID"] = 26861,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 583,
		},
		[9257] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Commander Mograine",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3976,
		},
		[53520] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'arak",
			["npcID"] = 29120,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 218,
		},
		[18702] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Darkmaster Gandling",
			["npcID"] = 1853,
		},
		[58127] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Marshal Paltrow",
			["npcID"] = 41937,
		},
		[9481] = {
			["isChanneled"] = false,
			["source"] = "High Inquisitor Whitemane",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3977,
		},
		[42131] = {
			["isChanneled"] = false,
			["source"] = "Twilight Nightblade",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42707,
		},
		[13704] = {
			["isChanneled"] = false,
			["source"] = "High Interrogator Gerstahn",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 9018,
		},
		[101650] = {
			["source"] = "Dragonmaw Shaman",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 43628,
		},
		[42771] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Dragonflayer Ironhelm",
			["npcID"] = 23961,
		},
		[6917] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wildthorn Venomspitter",
			["npcID"] = 3820,
		},
		[13864] = {
			["isChanneled"] = false,
			["source"] = "Death's Head Priest",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4517,
		},
		[32011] = {
			["isChanneled"] = false,
			["source"] = "Bloodwash Idolater",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41405,
		},
		[43667] = {
			["encounterName"] = "Prince Keleseth",
			["source"] = "Prince Keleseth",
			["npcID"] = 23953,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 571,
		},
		[48530] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "7th Legion Sentinel",
			["npcID"] = 27162,
		},
		[32587] = {
			["isChanneled"] = false,
			["source"] = "Argent Shieldman",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28028,
		},
		[77593] = {
			["source"] = "Revitalized Basilisk",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 35409,
		},
		[45587] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nerub'ar Sky Darkener",
			["npcID"] = 25451,
		},
		[21070] = {
			["isChanneled"] = false,
			["source"] = "Noxious Slime",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12221,
		},
		[54801] = {
			["encounterName"] = "Drakkari Colossus",
			["source"] = "Drakkari Elemental",
			["encounterID"] = 385,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29573,
		},
		[14792] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Venomhide Ravasaur",
			["npcID"] = 6508,
		},
		[52754] = {
			["isChanneled"] = false,
			["source"] = "Hardened Steel Skycaller",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28580,
		},
		[22414] = {
			["isChanneled"] = false,
			["source"] = "Warpwood Tangler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11464,
		},
		[22478] = {
			["isChanneled"] = false,
			["source"] = "Zevrim Thornhoof",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11490,
		},
		[32919] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sinewy Wolf",
			["npcID"] = 31233,
		},
		[49555] = {
			["encounterName"] = "Trollgore",
			["source"] = "Trollgore",
			["npcID"] = 26630,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 369,
		},
		[15496] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Thornguard",
			["npcID"] = 43599,
		},
		[7765] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "D'ore",
			["npcID"] = 19412,
		},
		[54290] = {
			["encounterName"] = "Hadronox",
			["source"] = "Anub'ar Webspinner",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29335,
		},
		[50323] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "En'kilah Necrolord",
			["npcID"] = 25609,
		},
		[76572] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Twilight Sadist",
			["isChanneled"] = false,
			["encounterID"] = 1040,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39980,
		},
		[85786] = {
			["isChanneled"] = false,
			["source"] = "Haunting Vision",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4472,
		},
		[86042] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Redpine Shaman",
			["npcID"] = 44479,
		},
		[51475] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dark Rune Elementalist",
			["npcID"] = 27962,
		},
		[15976] = {
			["source"] = "Razorlash",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 12258,
		},
		[11977] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bristleback Invader",
			["npcID"] = 36943,
		},
		[48276] = {
			["encounterName"] = "Svala Sorrowgrave",
			["source"] = "Svala Sorrowgrave",
			["npcID"] = 26668,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 577,
		},
		[84507] = {
			["type"] = "DEBUFF",
			["source"] = "Naz'jar Invader",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 39616,
		},
		[36247] = {
			["isChanneled"] = false,
			["source"] = "Jarroc Torn-Wing",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41164,
		},
		[12169] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Northwatch Guard",
			["npcID"] = 51825,
		},
		[52883] = {
			["source"] = "Titanium Thunderer",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 28965,
		},
		[36631] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nexus Watcher",
			["npcID"] = 24770,
		},
		[53395] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dark Rune Warrior",
			["npcID"] = 27960,
		},
		[16592] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scholomance Acolyte",
			["npcID"] = 10471,
		},
		[20815] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Diviner",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4291,
		},
		[33688] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Raging Colossus",
			["npcID"] = 19188,
		},
		[50324] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "En'kilah Necrolord",
			["npcID"] = 25609,
		},
		[81181] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Windfury Wind Witch",
			["npcID"] = 2963,
		},
		[85788] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Hungering Wraith",
			["npcID"] = 1802,
		},
		[43414] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Skadir Raider",
			["npcID"] = 25522,
		},
		[91419] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spitebone Skeleton",
			["npcID"] = 47143,
		},
		[30285] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Windroc",
			["npcID"] = 17128,
		},
		[9034] = {
			["source"] = "Interrogator Vishas",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 3983,
		},
		[76575] = {
			["type"] = "BUFF",
			["source"] = "Evolved Twilight Zealot",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 39987,
		},
		[22415] = {
			["isChanneled"] = false,
			["source"] = "Warpwood Tangler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11464,
		},
		[13321] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Felhound Manastalker",
			["npcID"] = 17401,
		},
		[30925] = {
			["encounterName"] = "The Maker",
			["source"] = "The Maker",
			["npcID"] = 17381,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1922,
		},
		[9482] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Galgann Firehammer",
			["npcID"] = 7291,
		},
		[38168] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Auchenai Monk",
			["npcID"] = 18497,
		},
		[13737] = {
			["isChanneled"] = false,
			["source"] = "Gordok Reaver",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11450,
		},
		[85790] = {
			["source"] = "Hungering Wraith",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 1802,
		},
		[34969] = {
			["isChanneled"] = false,
			["source"] = "Laughing Skull Rogue",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17491,
		},
		[55700] = {
			["isChanneled"] = false,
			["source"] = "Spitting Cobra",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29774,
		},
		[91677] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Pustulant Monstrosity",
			["npcID"] = 47138,
		},
		[48278] = {
			["encounterName"] = "Svala Sorrowgrave",
			["source"] = "Ritual Channeler",
			["npcID"] = 27281,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 577,
		},
		[52629] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Rune Reaver",
			["npcID"] = 26268,
		},
		[85279] = {
			["isChanneled"] = false,
			["source"] = "Umboda Three-Heads",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42724,
		},
		[32717] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Redfang Elder",
			["npcID"] = 26436,
		},
		[90398] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defias Squallshaper",
			["npcID"] = 48521,
		},
		[50198] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mage Hunter Initiate",
			["npcID"] = 26728,
		},
		[17105] = {
			["isChanneled"] = false,
			["source"] = "Wailing Banshee",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10464,
		},
		[17169] = {
			["isChanneled"] = false,
			["source"] = "Crypt Horror",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8557,
		},
		[10666] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Earthen Custodian",
			["npcID"] = 7309,
		},
		[34970] = {
			["encounterName"] = "Rokmar the Crackler",
			["source"] = "Rokmar the Crackler",
			["npcID"] = 17991,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1941,
		},
		[52630] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Runic Battle Golem",
			["npcID"] = 26284,
		},
		[15241] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Conjuror",
			["npcID"] = 10419,
		},
		[15305] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Golem Lord Argelmach",
			["npcID"] = 8983,
		},
		[30926] = {
			["encounterName"] = "Vazruden the Herald",
			["source"] = "Vazruden the Herald",
			["encounterID"] = 1892,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17307,
		},
		[15497] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sorcerous Skeleton",
			["npcID"] = 47140,
		},
		[15529] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ironhand Guardian",
			["npcID"] = 8982,
		},
		[15593] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Magmus",
			["npcID"] = 9938,
		},
		[58517] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Portal Guardian",
			["npcID"] = 30892,
		},
		[31566] = {
			["encounterName"] = "Swamplord Musel'ek",
			["source"] = "Swamplord Musel'ek",
			["npcID"] = 17826,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1947,
		},
		[38682] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Alliance Berserker",
			["npcID"] = 26800,
		},
		[34971] = {
			["encounterName"] = "Swamplord Musel'ek",
			["source"] = "Claw",
			["npcID"] = 17827,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1947,
		},
		[90913] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Monstrous Parrot",
			["npcID"] = 48447,
		},
		[11978] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Fineous Darkvire",
			["npcID"] = 9056,
		},
		[75813] = {
			["isChanneled"] = false,
			["source"] = "Naz'jar Tempest Witch",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40634,
		},
		[16169] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Construct",
			["npcID"] = 10488,
		},
		[76325] = {
			["isChanneled"] = false,
			["source"] = "Twilight Flame Caller",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39708,
		},
		[12170] = {
			["isChanneled"] = false,
			["source"] = "Sergeant Bly",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7604,
		},
		[48920] = {
			["encounterName"] = "King Dred",
			["source"] = "King Dred",
			["npcID"] = 27483,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 373,
		},
		[8267] = {
			["isChanneled"] = false,
			["source"] = "Rotting Agam'ar",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4512,
		},
		[49816] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Kvaldir Mistweaver",
			["npcID"] = 25479,
		},
		[33564] = {
			["isChanneled"] = false,
			["source"] = "Justinius the Harbinger",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18966,
		},
		[34076] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Worg Master Kruush",
			["npcID"] = 19442,
		},
		[76582] = {
			["isChanneled"] = false,
			["source"] = "Twilight Zealot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39990,
		},
		[17234] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lady Illucia Barov",
			["npcID"] = 10502,
		},
		[12746] = {
			["isChanneled"] = false,
			["source"] = "Searing Blade Warlock",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11324,
		},
		[55703] = {
			["isChanneled"] = false,
			["source"] = "Spitting Cobra",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29774,
		},
		[55959] = {
			["encounterName"] = "Prince Taldaram",
			["source"] = "Prince Taldaram",
			["npcID"] = 29308,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 213,
		},
		[60182] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Azure Sorcerer",
			["npcID"] = 30667,
		},
		[43930] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Dragonflayer Forge Master",
			["npcID"] = 24079,
		},
		[76583] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Monk",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4540,
		},
		[56855] = {
			["encounterName"] = "Jedoga Shadowseeker",
			["source"] = "Jedoga Shadowseeker",
			["npcID"] = 29310,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 214,
		},
		[22417] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wildspawn Felsworn",
			["npcID"] = 11455,
		},
		[93987] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Hand of Gul'dan",
			["npcID"] = 46157,
		},
		[53400] = {
			["encounterName"] = "Hadronox",
			["source"] = "Hadronox",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28921,
		},
		[6726] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadowforge Relic Hunter",
			["npcID"] = 4847,
		},
		[6742] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Grimlok",
			["npcID"] = 4854,
		},
		[58519] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Orgrimmar Grunt",
			["npcID"] = 3296,
		},
		[76584] = {
			["isChanneled"] = false,
			["source"] = "Twilight Zealot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39990,
		},
		[31567] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Amberpine Scout",
			["npcID"] = 27117,
		},
		[9739] = {
			["isChanneled"] = false,
			["source"] = "Marl Wormthorn",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42334,
		},
		[79400] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Brinescale Serpent",
			["npcID"] = 39948,
		},
		[43931] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Enslaved Proto-Drake",
			["npcID"] = 24083,
		},
		[75817] = {
			["isChanneled"] = false,
			["source"] = "Corla, Herald of Twilight",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39679,
		},
		[56728] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Eye of Taldaram",
			["npcID"] = 30285,
		},
		[24337] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sentinel Ambusher",
			["npcID"] = 41854,
		},
		[24529] = {
			["source"] = "Wolf",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17280,
		},
		[10251] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Biletoad",
			["npcID"] = 3835,
		},
		[16467] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Kirtonos the Herald",
			["npcID"] = 10506,
		},
		[79913] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Grimtotem Ruffian",
			["npcID"] = 11910,
		},
		[17171] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mossflayer Shadowhunter",
			["npcID"] = 8561,
		},
		[81193] = {
			["isChanneled"] = false,
			["source"] = "Haunting Vision",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4472,
		},
		[42780] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dragonflayer Ironhelm",
			["npcID"] = 23961,
		},
		[35230] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Sporelok",
			["npcID"] = 18912,
		},
		[11019] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hakkari Sapper",
			["npcID"] = 8336,
		},
		[35998] = {
			["isChanneled"] = false,
			["source"] = "Forward Commander To'arch",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 19273,
		},
		[52634] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Infinite Adversary",
			["npcID"] = 28340,
		},
		[15242] = {
			["isChanneled"] = false,
			["source"] = "Pusillin",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14354,
		},
		[52890] = {
			["isChanneled"] = false,
			["source"] = "Titanium Siegebreaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28961,
		},
		[22418] = {
			["isChanneled"] = false,
			["source"] = "Wildspawn Felsworn",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11455,
		},
		[90920] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Monstrous Parrot",
			["npcID"] = 48447,
		},
		[15498] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadowforge Senator",
			["npcID"] = 8904,
		},
		[15530] = {
			["isChanneled"] = false,
			["source"] = "Amnennar the Coldbringer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7358,
		},
		[79403] = {
			["isChanneled"] = false,
			["source"] = "Orgrimmar Thief",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42594,
		},
		[22994] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Tendris Warpwood",
			["npcID"] = 11489,
		},
		[33951] = {
			["source"] = "Bonechewer Mutant",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 16876,
		},
		[76588] = {
			["isChanneled"] = false,
			["source"] = "Twilight Zealot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39990,
		},
		[38558] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gerenzo Wrenchwhistle",
			["npcID"] = 4202,
		},
		[81707] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Windfury Wind Witch",
			["npcID"] = 2963,
		},
		[16170] = {
			["isChanneled"] = false,
			["source"] = "Gordok Mage-Lord",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11444,
		},
		[56730] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Eye of Taldaram",
			["npcID"] = 30285,
		},
		[56858] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight Worshipper",
			["npcID"] = 30111,
		},
		[8150] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mutanus the Devourer",
			["npcID"] = 3654,
		},
		[8268] = {
			["isChanneled"] = false,
			["source"] = "Rotting Agam'ar",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4512,
		},
		[8364] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Sorcerer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4294,
		},
		[12491] = {
			["isChanneled"] = false,
			["source"] = "Antu'sul",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8127,
		},
		[12555] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Skeletal Berserker",
			["npcID"] = 10391,
		},
		[76590] = {
			["isChanneled"] = false,
			["source"] = "Faceless Watcher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40936,
		},
		[21331] = {
			["isChanneled"] = false,
			["source"] = "Deeprot Tangler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13142,
		},
		[51484] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dark Rune Theurgist",
			["npcID"] = 27963,
		},
		[17620] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Bonewarder",
			["npcID"] = 10491,
		},
		[47773] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["npcID"] = 26731,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 520,
		},
		[80174] = {
			["isChanneled"] = false,
			["source"] = "Burning Blade Fanatic",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3197,
		},
		[52636] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Infinite Hunter",
			["npcID"] = 27743,
		},
		[22419] = {
			["isChanneled"] = false,
			["source"] = "Hydrospawn",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13280,
		},
		[13323] = {
			["isChanneled"] = false,
			["source"] = "Arcanist Doan",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6487,
		},
		[49309] = {
			["isChanneled"] = false,
			["source"] = "Wildhammer Shaman",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42554,
		},
		[53788] = {
			["isChanneled"] = false,
			["source"] = "Unbound Firestorm",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28584,
		},
		[22995] = {
			["isChanneled"] = false,
			["source"] = "Prince Tortheldrin",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11486,
		},
		[76592] = {
			["type"] = "BUFF",
			["source"] = "Twilight Zealot",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 39990,
		},
		[38560] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Smart Mining Monkey",
			["npcID"] = 35812,
		},
		[55196] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Runed Giant",
			["npcID"] = 26417,
		},
		[13899] = {
			["isChanneled"] = false,
			["source"] = "Lord Incendius",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 9017,
		},
		[90925] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defias Enforcer",
			["npcID"] = 48502,
		},
		[35361] = {
			["isChanneled"] = false,
			["source"] = "Grove Walker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 31228,
		},
		[55964] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Randolph Moloch",
			["npcID"] = 46383,
		},
		[43935] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dragonflayer Bonecrusher",
			["npcID"] = 24069,
		},
		[10092] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sand Storm",
			["npcID"] = 7226,
		},
		[36513] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nexus Drake Hatchling",
			["npcID"] = 26127,
		},
		[10252] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Archaedas",
			["npcID"] = 2748,
		},
		[14443] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Weapon Technician",
			["npcID"] = 8920,
		},
		[20820] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Adept",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4296,
		},
		[14539] = {
			["isChanneled"] = false,
			["source"] = "Borer Beetle",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8932,
		},
		[76594] = {
			["isChanneled"] = false,
			["source"] = "Twilight Zealot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39990,
		},
		[34338] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Skra'gath",
			["npcID"] = 18401,
		},
		[47007] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Iron Rune-Shaper",
			["npcID"] = 26270,
		},
		[43936] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Dragonflayer Bonecrusher",
			["npcID"] = 24069,
		},
		[11020] = {
			["isChanneled"] = false,
			["source"] = "Sul'lithuz Sandcrawler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8095,
		},
		[48287] = {
			["encounterName"] = "Slad'ran",
			["source"] = "Slad'ran",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29304,
		},
		[76339] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Mindbender Ghur'sha",
			["isChanneled"] = false,
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40788,
		},
		[56733] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Eye of Taldaram",
			["npcID"] = 30285,
		},
		[15243] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Fireguard Destroyer",
			["npcID"] = 8911,
		},
		[22420] = {
			["isChanneled"] = false,
			["source"] = "Hydrospawn",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13280,
		},
		[61596] = {
			["isChanneled"] = false,
			["source"] = "Stormforged Construct",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28835,
		},
		[90928] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defias Enforcer",
			["npcID"] = 48502,
		},
		[15499] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scholomance Adept",
			["npcID"] = 10469,
		},
		[11436] = {
			["isChanneled"] = false,
			["source"] = "Death's Head Geomancer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7335,
		},
		[15691] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "SI:7 Infiltrator",
			["npcID"] = 35891,
		},
		[55582] = {
			["isChanneled"] = false,
			["source"] = "Drakkari Medicine Man",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29826,
		},
		[90929] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defias Enforcer",
			["npcID"] = 48502,
		},
		[32018] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Iron Rune Overseer",
			["npcID"] = 27177,
		},
		[11980] = {
			["isChanneled"] = false,
			["source"] = "Jergosh the Invoker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11518,
		},
		[52383] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lightning Construct",
			["npcID"] = 27972,
		},
		[56862] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bound Water Elemental",
			["npcID"] = 30419,
		},
		[32722] = {
			["isChanneled"] = false,
			["source"] = "Blistering Rot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 16901,
		},
		[8269] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Construct",
			["npcID"] = 10488,
		},
		[53791] = {
			["encounterName"] = "General Bjarngrim",
			["source"] = "General Bjarngrim",
			["encounterID"] = 555,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28586,
		},
		[8365] = {
			["isChanneled"] = false,
			["source"] = "Twilight Loreseeker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4812,
		},
		[12492] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Jammal'an the Prophet",
			["npcID"] = 5710,
		},
		[45985] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodspore Firestarter",
			["npcID"] = 25470,
		},
		[58526] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Portal Guardian",
			["npcID"] = 30892,
		},
		[42402] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Daakara",
			["npcID"] = 23863,
		},
		[17366] = {
			["isChanneled"] = false,
			["source"] = "Instructor Galford",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10811,
		},
		[34980] = {
			["encounterName"] = "Mennu the Betrayer",
			["source"] = "Mennu the Betrayer",
			["npcID"] = 17941,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1939,
		},
		[21909] = {
			["isChanneled"] = false,
			["source"] = "Princess Theradras",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12201,
		},
		[80182] = {
			["isChanneled"] = false,
			["source"] = "Dreadmaul Ambusher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41136,
		},
		[18070] = {
			["isChanneled"] = false,
			["source"] = "Earthborer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11320,
		},
		[52896] = {
			["source"] = "Titanium Siegebreaker",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 28961,
		},
		[89652] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ogre Henchman",
			["npcID"] = 48230,
		},
		[30931] = {
			["isChanneled"] = false,
			["source"] = "Aggem Thorncurse",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4424,
		},
		[87861] = {
			["encounterName"] = "Glubtok",
			["source"] = "Glubtok",
			["npcID"] = 47162,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1064,
		},
		[9613] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Scryer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4293,
		},
		[23381] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lady Anacondra",
			["npcID"] = 3671,
		},
		[86070] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadril",
			["npcID"] = 45156,
		},
		[13900] = {
			["isChanneled"] = false,
			["source"] = "Lord Incendius",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 9017,
		},
		[78904] = {
			["isChanneled"] = false,
			["source"] = "Shadowsworn Spellblade",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42296,
		},
		[55968] = {
			["encounterName"] = "Prince Taldaram",
			["source"] = "Prince Taldaram",
			["npcID"] = 29308,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 213,
		},
		[10061] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Obsidian Sentinel",
			["npcID"] = 7023,
		},
		[10093] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Sand Storm",
			["npcID"] = 7226,
		},
		[36645] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Raging Earth Elemental",
			["npcID"] = 41993,
		},
		[32723] = {
			["isChanneled"] = false,
			["source"] = "Bonechewer Raider",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 16925,
		},
		[86071] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadril",
			["npcID"] = 45156,
		},
		[3604] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Deviate Crocolisk",
			["npcID"] = 5053,
		},
		[3612] = {
			["isChanneled"] = false,
			["source"] = "Bloodscalp Beastmaster",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 699,
		},
		[20822] = {
			["isChanneled"] = false,
			["source"] = "Death's Head Adept",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4516,
		},
		[3636] = {
			["isChanneled"] = false,
			["source"] = "Greystone Basilisk",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 35245,
		},
		[45987] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodspore Harvester",
			["npcID"] = 25467,
		},
		[34086] = {
			["isChanneled"] = false,
			["source"] = "Maiden of Pain",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 19408,
		},
		[7399] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Deviate Dreadfang",
			["npcID"] = 5056,
		},
		[86072] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadril",
			["npcID"] = 45156,
		},
		[47779] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Steward",
			["npcID"] = 26729,
		},
		[75323] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Temple Guardian Anhuur",
			["npcID"] = 39425,
		},
		[48291] = {
			["encounterName"] = "King Ymiron",
			["source"] = "King Ymiron",
			["npcID"] = 26861,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 583,
		},
		[60960] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Garginox",
			["npcID"] = 45681,
		},
		[77371] = {
			["source"] = "Loramus Thalipedes",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 41279,
		},
		[22678] = {
			["isChanneled"] = false,
			["source"] = "Ras Frostwhisper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10508,
		},
		[15500] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight's Hammer Ambassador",
			["npcID"] = 8915,
		},
		[15532] = {
			["isChanneled"] = false,
			["source"] = "Freezing Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7353,
		},
		[76604] = {
			["isChanneled"] = false,
			["source"] = "Faceless Watcher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40936,
		},
		[51491] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Unrelenting Construct",
			["npcID"] = 27971,
		},
		[31956] = {
			["encounterName"] = "Rokmar the Crackler",
			["source"] = "Rokmar the Crackler",
			["npcID"] = 17991,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1941,
		},
		[32020] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Talbuk Thorngrazer",
			["npcID"] = 17131,
		},
		[51875] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Tundra Scavenger",
			["npcID"] = 27294,
		},
		[11981] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spectral Teacher",
			["npcID"] = 10500,
		},
		[48292] = {
			["encounterName"] = "King Ymiron",
			["source"] = "King Ymiron",
			["npcID"] = 26861,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 583,
		},
		[60833] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Forgotten One",
			["npcID"] = 30414,
		},
		[52771] = {
			["encounterName"] = "Chrono-Lord Epoch",
			["source"] = "Chrono-Lord Epoch",
			["npcID"] = 26532,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 295,
		},
		[61601] = {
			["source"] = "Hex Lord Malacrass",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 24239,
		},
		[8270] = {
			["isChanneled"] = false,
			["source"] = "Roogug",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6168,
		},
		[90938] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defias Blood Wizard",
			["npcID"] = 48417,
		},
		[12461] = {
			["isChanneled"] = false,
			["source"] = "Splinterbone Captain",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7345,
		},
		[12493] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Blood Steward of Kirtonos",
			["npcID"] = 14861,
		},
		[16856] = {
			["isChanneled"] = false,
			["source"] = "King Gordok",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11501,
		},
		[12557] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Skeletal Guardian",
			["npcID"] = 10390,
		},
		[76094] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["isChanneled"] = false,
			["encounterID"] = 1044,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40765,
		},
		[54819] = {
			["encounterName"] = "Drakkari Colossus",
			["type"] = "DEBUFF",
			["source"] = "Drakkari Elemental",
			["encounterID"] = 385,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 29573,
		},
		[77374] = {
			["isChanneled"] = false,
			["source"] = "Razelikh the Defiler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41280,
		},
		[34984] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Fen Ray",
			["npcID"] = 17731,
		},
		[21655] = {
			["isChanneled"] = false,
			["source"] = "Lord Vyletongue",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12236,
		},
		[8814] = {
			["isChanneled"] = false,
			["source"] = "Bloodmage Thalnos",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4543,
		},
		[47781] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Steward",
			["npcID"] = 26729,
		},
		[79934] = {
			["source"] = "Shadowsworn Dreadweaver",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 6009,
		},
		[18072] = {
			["isChanneled"] = false,
			["source"] = "Taragaman the Hungerer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11520,
		},
		[56867] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Savage Cave Beast",
			["npcID"] = 30329,
		},
		[18328] = {
			["isChanneled"] = false,
			["source"] = "Fallen Hero",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10996,
		},
		[49317] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Azure Drake",
			["npcID"] = 27682,
		},
		[57635] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30624,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 215,
		},
		[30933] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Illyanna Ravenoak",
			["npcID"] = 11488,
		},
		[49701] = {
			["encounterName"] = "Trollgore",
			["source"] = "Risen Drakkari Soulmage",
			["npcID"] = 26636,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 369,
		},
		[33833] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dread Scryer",
			["npcID"] = 47141,
		},
		[58531] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Portal Keeper",
			["npcID"] = 30695,
		},
		[23511] = {
			["isChanneled"] = false,
			["source"] = "Stormwind Soldier",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18948,
		},
		[38952] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Syreian the Bonecarver",
			["npcID"] = 32438,
		},
		[51493] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dark Rune Giant",
			["npcID"] = 27969,
		},
		[23767] = {
			["source"] = "Sayge",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 14822,
		},
		[75073] = {
			["isChanneled"] = false,
			["source"] = "Shadowsworn Adept",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6006,
		},
		[60195] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Grimtotem Mercenary",
			["npcID"] = 11911,
		},
		[10094] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ancient Stone Keeper",
			["npcID"] = 7206,
		},
		[52773] = {
			["encounterName"] = "General Bjarngrim",
			["source"] = "Stormforged Mender",
			["encounterID"] = 555,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28582,
		},
		[20824] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Geomancer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4520,
		},
		[16793] = {
			["isChanneled"] = false,
			["source"] = "Magistrate Barthilas",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10435,
		},
		[79937] = {
			["isChanneled"] = false,
			["source"] = "Dreadmaul Warlock",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5978,
		},
		[33962] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Steam Pump Overseer",
			["npcID"] = 18340,
		},
		[5320] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Sergra Darkthorn",
			["npcID"] = 3338,
		},
		[89663] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Kobold Digger",
			["npcID"] = 48229,
		},
		[5416] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Carrion Swarmer",
			["npcID"] = 13160,
		},
		[51750] = {
			["encounterName"] = "King Ymiron",
			["source"] = "King Ymiron",
			["npcID"] = 26861,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 583,
		},
		[55973] = {
			["isChanneled"] = false,
			["source"] = "Vladof the Butcher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30022,
		},
		[79938] = {
			["isChanneled"] = false,
			["source"] = "Dreadmaul Warlock",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5978,
		},
		[11086] = {
			["isChanneled"] = false,
			["source"] = "Witch Doctor Zum'rah",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7271,
		},
		[52774] = {
			["isChanneled"] = false,
			["source"] = "Stormforged Mender",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28582,
		},
		[53030] = {
			["encounterName"] = "Hadronox",
			["source"] = "Hadronox",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28921,
		},
		[22744] = {
			["isChanneled"] = false,
			["source"] = "Eldreth Apparition",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11471,
		},
		[49703] = {
			["encounterName"] = "Trollgore",
			["source"] = "Wretched Belcher",
			["npcID"] = 26624,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 369,
		},
		[76100] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["isChanneled"] = false,
			["encounterID"] = 1044,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40765,
		},
		[76612] = {
			["isChanneled"] = false,
			["source"] = "Twilight Zealot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39990,
		},
		[81219] = {
			["isChanneled"] = false,
			["source"] = "Bonechewer Beastmaster",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17455,
		},
		[23768] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sayge",
			["npcID"] = 14822,
		},
		[32022] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gutripper",
			["npcID"] = 18257,
		},
		[55974] = {
			["isChanneled"] = false,
			["source"] = "Vladof the Butcher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30022,
		},
		[48168] = {
			["source"] = "Matron Alesso",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 50163,
		},
		[93505] = {
			["encounterName"] = "Lord Walden",
			["source"] = "Lord Walden",
			["npcID"] = 46963,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1073,
		},
		[16333] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spectral Citizen",
			["npcID"] = 10384,
		},
		[6136] = {
			["source"] = "Amnennar the Coldbringer",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 7358,
		},
		[8271] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Dustweaver",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4522,
		},
		[83012] = {
			["isChanneled"] = false,
			["source"] = "Vale Howler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 43050,
		},
		[20825] = {
			["isChanneled"] = false,
			["source"] = "Bloodmage Thalnos",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4543,
		},
		[8399] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "High Inquisitor Fairbanks",
			["npcID"] = 4542,
		},
		[75590] = {
			["isChanneled"] = false,
			["source"] = "Twilight Sadist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39980,
		},
		[75846] = {
			["encounterName"] = "Karsh Steelbender",
			["type"] = "BUFF",
			["source"] = "Karsh Steelbender",
			["encounterID"] = 1039,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 39698,
		},
		[58534] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Portal Keeper",
			["npcID"] = 30695,
		},
		[21337] = {
			["isChanneled"] = false,
			["source"] = "Deeprot Tangler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13142,
		},
		[51240] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Drakkari Death Knight",
			["npcID"] = 26830,
		},
		[51496] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dark Rune Shaper",
			["npcID"] = 27965,
		},
		[55847] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Drakkari Soulmage",
			["npcID"] = 26636,
		},
		[52904] = {
			["isChanneled"] = false,
			["source"] = "Titanium Thunderer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28965,
		},
		[30615] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Stone Sleeper",
			["npcID"] = 3870,
		},
		[30935] = {
			["source"] = "Keli'dan the Breaker",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17377,
		},
		[33325] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Auchenai Necromancer",
			["npcID"] = 18702,
		},
		[79175] = {
			["isChanneled"] = false,
			["source"] = "Agitated Green Sand Crab",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40238,
		},
		[33581] = {
			["isChanneled"] = false,
			["source"] = "Justinius the Harbinger",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18966,
		},
		[50089] = {
			["encounterName"] = "Novos the Summoner",
			["source"] = "Novos the Summoner",
			["npcID"] = 26631,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 371,
		},
		[58535] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Portal Keeper",
			["npcID"] = 30893,
		},
		[13902] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight Bodyguard",
			["npcID"] = 8914,
		},
		[23769] = {
			["source"] = "Sayge",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 14822,
		},
		[83015] = {
			["isChanneled"] = false,
			["source"] = "Dreadmaul Brute",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5976,
		},
		[79176] = {
			["isChanneled"] = false,
			["source"] = "Agitated Green Sand Crab",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40238,
		},
		[14030] = {
			["isChanneled"] = false,
			["source"] = "Anvilrage Warden",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8890,
		},
		[32343] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mogor",
			["npcID"] = 18069,
		},
		[76617] = {
			["isChanneled"] = false,
			["source"] = "Conflagration",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39994,
		},
		[77129] = {
			["isChanneled"] = false,
			["source"] = "Shadowsworn Obstructor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41191,
		},
		[53801] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anub'ar Crusher",
			["npcID"] = 28922,
		},
		[58536] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Portal Keeper",
			["npcID"] = 30893,
		},
		[34094] = {
			["isChanneled"] = false,
			["source"] = "Arazzius the Cruel",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 19191,
		},
		[76618] = {
			["isChanneled"] = false,
			["source"] = "Conflagration",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39994,
		},
		[17307] = {
			["isChanneled"] = false,
			["source"] = "Ramstein the Gorger",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10439,
		},
		[17435] = {
			["isChanneled"] = false,
			["source"] = "Lord Aurius Rivendare",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45412,
		},
		[90951] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defias Shadowguard",
			["npcID"] = 48505,
		},
		[17883] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Coilfang Observer",
			["npcID"] = 17938,
		},
		[52522] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Tomb Stalker",
			["npcID"] = 28199,
		},
		[52778] = {
			["isChanneled"] = false,
			["source"] = "Stormforged Tactician",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28581,
		},
		[18267] = {
			["isChanneled"] = false,
			["source"] = "Unseen Servant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8538,
		},
		[22426] = {
			["isChanneled"] = false,
			["source"] = "Warpwood Crusher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13021,
		},
		[53418] = {
			["encounterName"] = "Hadronox",
			["source"] = "Hadronox",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28921,
		},
		[57769] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["encounterID"] = 215,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30623,
		},
		[22938] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mana Burst",
			["npcID"] = 14397,
		},
		[54314] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anub'ar Prime Guard",
			["npcID"] = 29128,
		},
		[54954] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ticking Bomb",
			["npcID"] = 29684,
		},
		[31704] = {
			["encounterName"] = "The Black Stalker",
			["source"] = "The Black Stalker",
			["npcID"] = 17882,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1948,
		},
		[51499] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dark Rune Worker",
			["npcID"] = 27961,
		},
		[15982] = {
			["isChanneled"] = false,
			["source"] = "Spirestone Mystic",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 9198,
		},
		[83019] = {
			["isChanneled"] = false,
			["source"] = "Death's Step Miscreation",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45444,
		},
		[16046] = {
			["isChanneled"] = false,
			["source"] = "Vectus",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10432,
		},
		[8040] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lord Pythas",
			["npcID"] = 3670,
		},
		[85835] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Diseased Wolf",
			["npcID"] = 1817,
		},
		[8272] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Razorfen Earthbreaker",
			["npcID"] = 4525,
		},
		[90954] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defias Shadowguard",
			["npcID"] = 48505,
		},
		[49708] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Darkweb Recluse",
			["npcID"] = 26625,
		},
		[50092] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Syreian the Bonecarver",
			["npcID"] = 32438,
		},
		[76622] = {
			["isChanneled"] = false,
			["source"] = "Bellows Slave",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40084,
		},
		[17244] = {
			["source"] = "Baroness Anastari",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 10436,
		},
		[86604] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hogger",
			["npcID"] = 46254,
		},
		[21787] = {
			["source"] = "Thessala Hydra",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 12207,
		},
		[47789] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mage Hunter Ascendant",
			["npcID"] = 26727,
		},
		[17820] = {
			["isChanneled"] = false,
			["source"] = "Lord Alexei Barov",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10504,
		},
		[35760] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Greater Bogstrok",
			["npcID"] = 17817,
		},
		[52524] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Watcher Narjil",
			["npcID"] = 28729,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 216,
		},
		[60842] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Grimtotem Mercenary",
			["npcID"] = 11911,
		},
		[52780] = {
			["encounterName"] = "Ionar",
			["source"] = "Ionar",
			["encounterID"] = 559,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28546,
		},
		[22427] = {
			["isChanneled"] = false,
			["source"] = "Nascent Fel Orc",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17398,
		},
		[9232] = {
			["isChanneled"] = false,
			["source"] = "High Inquisitor Whitemane",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3977,
		},
		[90956] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defias Shadowguard",
			["npcID"] = 48505,
		},
		[22939] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Residual Monstrosity",
			["npcID"] = 11484,
		},
		[13903] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight Bodyguard",
			["npcID"] = 8914,
		},
		[91213] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mindless Horror",
			["npcID"] = 47137,
		},
		[55980] = {
			["isChanneled"] = false,
			["source"] = "Enormos",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30021,
		},
		[52525] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Patchwork Construct",
			["npcID"] = 27736,
		},
		[52909] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Librarian Garren",
			["npcID"] = 25291,
		},
		[49198] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Novos the Summoner",
			["npcID"] = 26631,
		},
		[57644] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30621,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 215,
		},
		[90958] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defias Shadowguard",
			["npcID"] = 48505,
		},
		[49710] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Drakkari Gutripper",
			["npcID"] = 26641,
		},
		[20828] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Acolyte",
			["npcID"] = 27731,
		},
		[5337] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spectral Betrayer",
			["npcID"] = 11288,
		},
		[5401] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Cliff Stormer",
			["npcID"] = 4008,
		},
		[47791] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Mage Hunter Ascendant",
			["npcID"] = 26727,
		},
		[15087] = {
			["isChanneled"] = false,
			["source"] = "Putridus Shadowstalker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11792,
		},
		[84305] = {
			["isChanneled"] = false,
			["source"] = "Drowned Gilnean Sailor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42248,
		},
		[57645] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30621,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 215,
		},
		[90960] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defias Shadowguard",
			["npcID"] = 48505,
		},
		[49711] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Drakkari Handler",
			["npcID"] = 26637,
		},
		[22876] = {
			["isChanneled"] = false,
			["source"] = "Wandering Eye of Kilrogg",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14386,
		},
		[22940] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Residual Monstrosity",
			["npcID"] = 11484,
		},
		[45] = {
			["isChanneled"] = false,
			["source"] = "Terrorfiend",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 16951,
		},
		[96847] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Toy Cart",
			["npcID"] = 52359,
		},
		[76628] = {
			["encounterName"] = "Beauty",
			["source"] = "Spot",
			["isChanneled"] = false,
			["encounterID"] = 1037,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40011,
		},
		[93520] = {
			["encounterName"] = "Lord Godfrey",
			["source"] = "Lord Godfrey",
			["npcID"] = 46964,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1072,
		},
		[85842] = {
			["isChanneled"] = false,
			["source"] = "Hulking Plaguebear",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44482,
		},
		[11824] = {
			["isChanneled"] = false,
			["source"] = "Twilight Elementalist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4814,
		},
		[51503] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dark Rune Controller",
			["npcID"] = 27966,
		},
		[32026] = {
			["isChanneled"] = false,
			["source"] = "Subjugator Shi'aziv",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 19282,
		},
		[55982] = {
			["isChanneled"] = false,
			["source"] = "Enormos",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30021,
		},
		[79444] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Southsea Treasure Hunter",
			["npcID"] = 40449,
		},
		[16143] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Mangled Cadaver",
			["npcID"] = 10382,
		},
		[52527] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bile Golem",
			["npcID"] = 28201,
		},
		[60845] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Forgotten One",
			["npcID"] = 30414,
		},
		[81236] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Plagued Hatchling",
			["npcID"] = 10678,
		},
		[53167] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dark Rune Theurgist",
			["npcID"] = 27963,
		},
		[24604] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 24076,
		},
		[57774] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["encounterID"] = 215,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30621,
		},
		[49712] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Drakkari Handler",
			["npcID"] = 26637,
		},
		[20829] = {
			["isChanneled"] = false,
			["source"] = "Dark Summoner",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8551,
		},
		[12528] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spectral Tutor",
			["npcID"] = 10498,
		},
		[33844] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Earthbinder Galandria Nightbreeze",
			["npcID"] = 19294,
		},
		[84308] = {
			["isChanneled"] = false,
			["source"] = "Drowned Gilnean Settler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42249,
		},
		[55599] = {
			["isChanneled"] = false,
			["source"] = "Drakkari Medicine Man",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29826,
		},
		[95826] = {
			["isChanneled"] = false,
			["source"] = "Mor'shan Defender",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 33201,
		},
		[17950] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Darkmaster Gandling",
			["npcID"] = 1853,
		},
		[84309] = {
			["isChanneled"] = false,
			["source"] = "Drowned Gilnean Merchant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42244,
		},
		[18270] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Reanimated Corpse",
			["npcID"] = 10481,
		},
		[57647] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["encounterID"] = 215,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30622,
		},
		[6713] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadowforge Archaeologist",
			["npcID"] = 4849,
		},
		[75608] = {
			["type"] = "BUFF",
			["source"] = "Twilight Zealot",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 50284,
		},
		[13584] = {
			["isChanneled"] = false,
			["source"] = "Theradrim Shardling",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11783,
		},
		[84310] = {
			["isChanneled"] = false,
			["source"] = "Spirit of Grol",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41267,
		},
		[80983] = {
			["source"] = "Honor's Stand Officer",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 37216,
		},
		[47922] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Iron Thane Furyhammer",
			["npcID"] = 26405,
		},
		[52657] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Infinite Agent",
			["npcID"] = 27744,
		},
		[32731] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spitebone Flayer",
			["npcID"] = 47146,
		},
		[65628] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Captured Razormane",
			["npcID"] = 34523,
		},
		[57648] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["encounterID"] = 215,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30622,
		},
		[37685] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Cutpurse",
			["npcID"] = 94,
		},
		[75610] = {
			["isChanneled"] = false,
			["source"] = "Corla, Herald of Twilight",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39679,
		},
		[76634] = {
			["isChanneled"] = false,
			["source"] = "Tainted Sentry",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40925,
		},
		[50994] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Crystalline Tender",
			["npcID"] = 28231,
		},
		[81753] = {
			["isChanneled"] = false,
			["source"] = "Venture Co. Supervisor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 2979,
		},
		[65629] = {
			["source"] = "Captured Razormane",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 34523,
		},
		[10833] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scholomance Handler",
			["npcID"] = 11257,
		},
		[17631] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spectral Researcher",
			["npcID"] = 10499,
		},
		[21790] = {
			["isChanneled"] = false,
			["source"] = "Thessala Hydra",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12207,
		},
		[79962] = {
			["isChanneled"] = false,
			["source"] = "Rulen Lightsreap",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 50160,
		},
		[52658] = {
			["encounterName"] = "Ionar",
			["source"] = "Ionar",
			["encounterID"] = 559,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28546,
		},
		[15248] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Riverpaw Looter",
			["npcID"] = 46251,
		},
		[93527] = {
			["encounterName"] = "Lord Walden",
			["source"] = "Lord Walden",
			["npcID"] = 46963,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1073,
		},
		[18399] = {
			["isChanneled"] = false,
			["source"] = "Vectus",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10432,
		},
		[22686] = {
			["encounterName"] = "King Dred",
			["source"] = "King Dred",
			["npcID"] = 27483,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 373,
		},
		[57777] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30624,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 215,
		},
		[22878] = {
			["isChanneled"] = false,
			["source"] = "Netherwalker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14389,
		},
		[79963] = {
			["source"] = "Rulen Lightsreap",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 50160,
		},
		[33975] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Instructor Galford",
			["npcID"] = 10811,
		},
		[76892] = {
			["isChanneled"] = false,
			["source"] = "Zin'jatar Raider",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39313,
		},
		[54962] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gerenzo Wrenchwhistle",
			["npcID"] = 4202,
		},
		[85850] = {
			["source"] = "Instructor Malicia",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 44442,
		},
		[34871] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Umbrafen Witchdoctor",
			["npcID"] = 20115,
		},
		[55602] = {
			["isChanneled"] = false,
			["source"] = "Unyielding Constrictor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29768,
		},
		[47668] = {
			["encounterName"] = "Trollgore",
			["source"] = "Risen Drakkari Warrior",
			["npcID"] = 26635,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 369,
		},
		[91737] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defias Watcher",
			["npcID"] = 47404,
		},
		[52531] = {
			["encounterName"] = "Volkhan",
			["source"] = "Blistering Steamrager",
			["encounterID"] = 557,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28583,
		},
		[81500] = {
			["source"] = "Fledgling Brave",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 36942,
		},
		[8242] = {
			["isChanneled"] = false,
			["source"] = "Searing Blade Enforcer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11323,
		},
		[8274] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Handler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4530,
		},
		[20831] = {
			["isChanneled"] = false,
			["source"] = "Mana Remnant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11483,
		},
		[25054] = {
			["isChanneled"] = false,
			["source"] = "High Inquisitor Whitemane",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3977,
		},
		[50228] = {
			["encounterName"] = "Skadi the Ruthless",
			["source"] = "Skadi the Ruthless",
			["npcID"] = 26693,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 581,
		},
		[86620] = {
			["isChanneled"] = false,
			["source"] = "Hogger",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46254,
		},
		[55859] = {
			["isChanneled"] = false,
			["source"] = "Yggdras",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30014,
		},
		[13009] = {
			["isChanneled"] = false,
			["source"] = "Amnennar the Coldbringer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7358,
		},
		[48053] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Crystalline Frayer",
			["npcID"] = 26793,
		},
		[52532] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Anub'ar Warrior",
			["npcID"] = 28732,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 216,
		},
		[60850] = {
			["isChanneled"] = false,
			["source"] = "Darkblade Cyn",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39142,
		},
		[30493] = {
			["isChanneled"] = false,
			["source"] = "Talrendis Raider",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 35177,
		},
		[53044] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Erekem",
			["npcID"] = 29315,
		},
		[49717] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Runed Giant",
			["npcID"] = 26417,
		},
		[58291] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Azure Saboteur",
			["npcID"] = 31079,
		},
		[13585] = {
			["isChanneled"] = false,
			["source"] = "Smolderthorn Seer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 9269,
		},
		[31389] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Rokdar the Sundered Lord",
			["npcID"] = 18400,
		},
		[13745] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Doomforge Arcanasmith",
			["npcID"] = 8900,
		},
		[50997] = {
			["encounterName"] = "Keristrasza",
			["source"] = "Keristrasza",
			["npcID"] = 26723,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 526,
		},
		[55348] = {
			["isChanneled"] = false,
			["source"] = "Drakkari Battle Rider",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29836,
		},
		[31901] = {
			["encounterName"] = "Omor the Unscarred",
			["source"] = "Omor the Unscarred",
			["encounterID"] = 1891,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17308,
		},
		[9874] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Stone Keeper",
			["npcID"] = 4857,
		},
		[9906] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Jadespine Basilisk",
			["npcID"] = 4863,
		},
		[14033] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Eldreth Darter",
			["npcID"] = 14398,
		},
		[48054] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Crazed Mana-Surge",
			["npcID"] = 26737,
		},
		[40504] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "The Ravenian",
			["npcID"] = 10507,
		},
		[53045] = {
			["isChanneled"] = false,
			["source"] = "Stormforged Sentinel",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28837,
		},
		[10258] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Archaedas",
			["npcID"] = 2748,
		},
		[57780] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Malmo",
			["npcID"] = 38809,
		},
		[49718] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Runed Giant",
			["npcID"] = 26417,
		},
		[20832] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Acolyte",
			["npcID"] = 27731,
		},
		[25055] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Enchanter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 9452,
		},
		[54965] = {
			["encounterName"] = "Prince Keleseth",
			["source"] = "Dragonflayer Runecaster",
			["npcID"] = 23960,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 571,
		},
		[34874] = {
			["encounterName"] = "Hungarfen",
			["source"] = "Hungarfen",
			["npcID"] = 17770,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1946,
		},
		[55605] = {
			["source"] = "Unyielding Constrictor",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 29768,
		},
		[17633] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spectral Teacher",
			["npcID"] = 10500,
		},
		[17697] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Marduk Blackpool",
			["npcID"] = 10433,
		},
		[15089] = {
			["isChanneled"] = false,
			["source"] = "Ghost of the Past",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10940,
		},
		[52534] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Anub'ar Shadowcaster",
			["npcID"] = 28733,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 216,
		},
		[40505] = {
			["isChanneled"] = false,
			["source"] = "Oggleflint",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11517,
		},
		[30686] = {
			["encounterName"] = "Omor the Unscarred",
			["source"] = "Omor the Unscarred",
			["encounterID"] = 1891,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17308,
		},
		[22688] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Alzzin the Wildshaper",
			["npcID"] = 11492,
		},
		[57781] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30624,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 215,
		},
		[15537] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Master Necromancer",
			["npcID"] = 27732,
		},
		[18977] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Ice Totem",
			["npcID"] = 12141,
		},
		[89697] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defias Cannon",
			["npcID"] = 48266,
		},
		[82531] = {
			["isChanneled"] = false,
			["source"] = "Sauranok the Mystic",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44120,
		},
		[11922] = {
			["isChanneled"] = false,
			["source"] = "Constrictor Vine",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12220,
		},
		[11986] = {
			["isChanneled"] = false,
			["source"] = "Ragefire Shaman",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11319,
		},
		[92001] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Defias Envoker",
			["npcID"] = 48418,
		},
		[16145] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Coilfang Champion",
			["npcID"] = 17957,
		},
		[52535] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Anub'ar Shadowcaster",
			["npcID"] = 28733,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 216,
		},
		[53047] = {
			["isChanneled"] = false,
			["source"] = "Stormforged Sentinel",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28837,
		},
		[32828] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Phasing Soldier",
			["npcID"] = 18556,
		},
		[90978] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defias Reaper",
			["npcID"] = 47403,
		},
		[12466] = {
			["isChanneled"] = false,
			["source"] = "Cho'Rush the Observer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14324,
		},
		[16866] = {
			["isChanneled"] = false,
			["source"] = "Venom Belcher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10417,
		},
		[12882] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Kirtonos the Herald",
			["npcID"] = 10506,
		},
		[44090] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Daakara",
			["npcID"] = 23863,
		},
		[84325] = {
			["source"] = "Enthralled Cultist",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 41254,
		},
		[84837] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Oostan Headhunter",
			["npcID"] = 38811,
		},
		[48697] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scourge Hulk",
			["npcID"] = 26555,
		},
		[53048] = {
			["isChanneled"] = false,
			["source"] = "Stormforged Runeshaper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28836,
		},
		[13298] = {
			["source"] = "Wildspawn Rogue",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 11452,
		},
		[32829] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Unliving Stalker",
			["npcID"] = 18501,
		},
		[22689] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Alzzin the Wildshaper",
			["npcID"] = 11492,
		},
		[90980] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defias Watcher",
			["npcID"] = 47404,
		},
		[49721] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Drakkari Death Knight",
			["npcID"] = 26830,
		},
		[22945] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Arcane Torrent",
			["npcID"] = 14399,
		},
		[9459] = {
			["isChanneled"] = false,
			["source"] = "Green Sludge",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 2655,
		},
		[76136] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Villa Mook",
			["npcID"] = 35609,
		},
		[34237] = {
			["isChanneled"] = false,
			["source"] = "Mistress of Doom",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 19192,
		},
		[51001] = {
			["encounterName"] = "Tribunal of Ages",
			["source"] = "Dark Matter",
			["npcID"] = 28235,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 567,
		},
		[6922] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Shadowhorn Stag",
			["npcID"] = 3817,
		},
		[13874] = {
			["isChanneled"] = false,
			["source"] = "Anvilrage Officer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8895,
		},
		[95332] = {
			["source"] = "Horde Spirit Guide",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 45075,
		},
		[14034] = {
			["isChanneled"] = false,
			["source"] = "Pimgib",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14349,
		},
		[48058] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Crystalline Frayer",
			["npcID"] = 26793,
		},
		[79976] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Tarenar Sunstrike",
			["npcID"] = 45678,
		},
		[76137] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Villa Mook",
			["npcID"] = 35609,
		},
		[56632] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ahn'kahar Web Winder",
			["npcID"] = 30276,
		},
		[81000] = {
			["isChanneled"] = false,
			["source"] = "Trade Prince Gallywix",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39582,
		},
		[53049] = {
			["isChanneled"] = false,
			["source"] = "Stormforged Runeshaper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28836,
		},
		[32735] = {
			["isChanneled"] = false,
			["source"] = "Mo'arg Forgefiend",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 16946,
		},
		[57784] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30621,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 215,
		},
		[49722] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Enslaved Proto-Drake",
			["npcID"] = 24083,
		},
		[14514] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mana Remnant",
			["npcID"] = 11483,
		},
		[49978] = {
			["isChanneled"] = false,
			["source"] = "Splitclaw Skitterer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40685,
		},
		[79721] = {
			["isChanneled"] = false,
			["source"] = "Nethergarde Engineer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5997,
		},
		[50234] = {
			["encounterName"] = "Skadi the Ruthless",
			["source"] = "Skadi the Ruthless",
			["npcID"] = 26693,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 581,
		},
		[15090] = {
			["isChanneled"] = false,
			["source"] = "High Inquisitor Fairbanks",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4542,
		},
		[15122] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scholomance Occultist",
			["npcID"] = 10472,
		},
		[52666] = {
			["encounterName"] = "Meathook",
			["source"] = "Meathook",
			["npcID"] = 26529,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 293,
		},
		[48699] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dragonflayer Seer",
			["npcID"] = 26554,
		},
		[15346] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Fineous Darkvire",
			["npcID"] = 9056,
		},
		[86633] = {
			["isChanneled"] = false,
			["source"] = "Lord Overheat",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46264,
		},
		[15474] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Necrofiend",
			["npcID"] = 11551,
		},
		[49723] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Drakkari Death Knight",
			["npcID"] = 26830,
		},
		[11443] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scholomance Acolyte",
			["npcID"] = 10471,
		},
		[15570] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Molten War Golem",
			["npcID"] = 8908,
		},
		[50363] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Rock Shield Trigger (Borean Tundra)",
			["npcID"] = 27999,
		},
		[54970] = {
			["encounterName"] = "Slad'ran",
			["source"] = "Slad'ran",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29304,
		},
		[55098] = {
			["encounterName"] = "Moorabi",
			["source"] = "Moorabi",
			["encounterID"] = 387,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29305,
		},
		[7978] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Venture Co. Holdout",
			["npcID"] = 3992,
		},
		[55866] = {
			["isChanneled"] = false,
			["source"] = "Stinkbeard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30017,
		},
		[52027] = {
			["encounterName"] = "General Bjarngrim",
			["source"] = "General Bjarngrim",
			["encounterID"] = 555,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28586,
		},
		[84331] = {
			["isChanneled"] = false,
			["source"] = "Ashmane Boar",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5992,
		},
		[68207] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Poison Spitter",
			["npcID"] = 35896,
		},
		[48700] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dragonflayer Seer",
			["npcID"] = 26554,
		},
		[61369] = {
			["encounterName"] = "General Bjarngrim",
			["source"] = "Hardened Steel Berserker",
			["encounterID"] = 555,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28579,
		},
		[8276] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Beastmaster",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4532,
		},
		[16868] = {
			["isChanneled"] = false,
			["source"] = "Baroness Anastari",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10436,
		},
		[50364] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nerub'ar Tunneler",
			["npcID"] = 25622,
		},
		[68208] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Poison Spitter",
			["npcID"] = 35896,
		},
		[34368] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bleeding Hollow Tormentor",
			["npcID"] = 19424,
		},
		[81773] = {
			["source"] = "Venture Co. Laborer",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 2976,
		},
		[35008] = {
			["encounterName"] = "Rokmar the Crackler",
			["source"] = "Rokmar the Crackler",
			["npcID"] = 17991,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1941,
		},
		[86636] = {
			["isChanneled"] = false,
			["source"] = "Lord Overheat",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46264,
		},
		[82797] = {
			["isChanneled"] = false,
			["source"] = "Snickerfang Hyena",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5985,
		},
		[55867] = {
			["isChanneled"] = false,
			["source"] = "Stinkbeard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30017,
		},
		[52028] = {
			["encounterName"] = "General Bjarngrim",
			["source"] = "General Bjarngrim",
			["encounterID"] = 555,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28586,
		},
		[79726] = {
			["isChanneled"] = false,
			["source"] = "Nethergarde Engineer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5997,
		},
		[84333] = {
			["isChanneled"] = false,
			["source"] = "Dreadmaul Mauler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5977,
		},
		[68209] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Freezya",
			["npcID"] = 35897,
		},
		[80750] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Balnazzar",
			["npcID"] = 10813,
		},
		[56891] = {
			["encounterName"] = "Jedoga Shadowseeker",
			["source"] = "Jedoga Shadowseeker",
			["npcID"] = 29310,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 214,
		},
		[22371] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Blood Steward of Kirtonos",
			["npcID"] = 14861,
		},
		[22691] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Alzzin the Wildshaper",
			["npcID"] = 11492,
		},
		[13459] = {
			["isChanneled"] = false,
			["source"] = "Razelikh the Defiler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41280,
		},
		[13619] = {
			["source"] = "Twilight's Hammer Torturer",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 8912,
		},
		[54716] = {
			["encounterName"] = "Drakkari Colossus",
			["type"] = "DEBUFF",
			["source"] = "Drakkari Colossus",
			["encounterID"] = 385,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 29307,
		},
		[13747] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Instructor Malicia",
			["npcID"] = 10505,
		},
		[31713] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Protector",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4292,
		},
		[73841] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "The Wolf",
			["npcID"] = 39364,
		},
		[4971] = {
			["isChanneled"] = false,
			["source"] = "Death's Head Sage",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4518,
		},
		[14099] = {
			["isChanneled"] = false,
			["source"] = "Magistrate Barthilas",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10435,
		},
		[48702] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dragonflayer Fanatic",
			["npcID"] = 26553,
		},
		[32609] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Alliance Field Scout",
			["npcID"] = 18581,
		},
		[5115] = {
			["isChanneled"] = false,
			["source"] = "Nethergarde Foreman",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5998,
		},
		[10452] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Earthen Sculptor",
			["npcID"] = 7012,
		},
		[16869] = {
			["isChanneled"] = false,
			["source"] = "Maleki the Pallid",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10438,
		},
		[50366] = {
			["isChanneled"] = false,
			["source"] = "Drakuru Prophet",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29697,
		},
		[38209] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Cho'Rush the Observer",
			["npcID"] = 14324,
		},
		[17445] = {
			["isChanneled"] = false,
			["source"] = "Risen Hammersmith",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11120,
		},
		[35010] = {
			["encounterName"] = "Mennu the Betrayer",
			["source"] = "Mennu the Betrayer",
			["npcID"] = 17941,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1939,
		},
		[172] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Evol Fingers",
			["npcID"] = 38513,
		},
		[48191] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Alliance Ranger",
			["npcID"] = 26802,
		},
		[18149] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lorekeeper Polkelt",
			["npcID"] = 10901,
		},
		[48703] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Dragonflayer Fanatic",
			["npcID"] = 26553,
		},
		[85873] = {
			["isChanneled"] = false,
			["source"] = "Plague Ravager",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8520,
		},
		[57661] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30623,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 215,
		},
		[15507] = {
			["isChanneled"] = false,
			["source"] = "Golem Lord Argelmach",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8983,
		},
		[22884] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Cho'Rush the Observer",
			["npcID"] = 14324,
		},
		[54462] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Erekem Guard",
			["npcID"] = 29395,
		},
		[15795] = {
			["isChanneled"] = false,
			["source"] = "Sister of Celebras",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11794,
		},
		[19365] = {
			["source"] = "Core Hound",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 11673,
		},
		[114539] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Professor Thaddeus Paleo",
			["npcID"] = 14847,
		},
		[47168] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Silverbrook Hunter",
			["npcID"] = 27546,
		},
		[74613] = {
			["isChanneled"] = false,
			["source"] = "Vilebranch Shadow Hunter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 2645,
		},
		[12020] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scholomance Necromancer",
			["npcID"] = 10477,
		},
		[52671] = {
			["encounterName"] = "Ionar",
			["source"] = "Spark of Ionar",
			["encounterID"] = 559,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28926,
		},
		[8245] = {
			["isChanneled"] = false,
			["source"] = "Lorekeeper Polkelt",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10901,
		},
		[82548] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sauranok the Mystic",
			["npcID"] = 44120,
		},
		[90994] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defias Miner",
			["npcID"] = 48419,
		},
		[12468] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Jammal'an the Prophet",
			["npcID"] = 5710,
		},
		[79733] = {
			["isChanneled"] = false,
			["source"] = "Supervisor Fizsprocket",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3051,
		},
		[33860] = {
			["isChanneled"] = false,
			["source"] = "Cho'Rush the Observer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14324,
		},
		[72055] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Faceless of the Deep",
			["npcID"] = 38448,
		},
		[54719] = {
			["encounterName"] = "Drakkari Colossus",
			["source"] = "Drakkari Colossus",
			["encounterID"] = 385,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29307,
		},
		[50752] = {
			["encounterName"] = "Maiden of Grief",
			["source"] = "Maiden of Grief",
			["npcID"] = 27975,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 565,
		},
		[12884] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dreamscythe",
			["npcID"] = 5721,
		},
		[51776] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dark Rune Elementalist",
			["npcID"] = 27962,
		},
		[22373] = {
			["isChanneled"] = false,
			["source"] = "Warpwood Guardian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11461,
		},
		[30691] = {
			["encounterName"] = "Vazruden the Herald",
			["source"] = "Vazruden the Herald",
			["encounterID"] = 1892,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17307,
		},
		[53824] = {
			["isChanneled"] = false,
			["source"] = "Venture Co. Worker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 2978,
		},
		[13748] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Residual Monstrosity",
			["npcID"] = 11484,
		},
		[55104] = {
			["encounterName"] = "Moorabi",
			["source"] = "Moorabi",
			["encounterID"] = 387,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29305,
		},
		[6907] = {
			["isChanneled"] = false,
			["source"] = "Jade Ooze",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 2656,
		},
		[9941] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Obsidian Sentinel",
			["npcID"] = 7023,
		},
		[14100] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "High Overlord Saurfang",
			["npcID"] = 25730,
		},
		[56640] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ahn'kahar Web Winder",
			["npcID"] = 30276,
		},
		[10101] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Rattlegore",
			["npcID"] = 11622,
		},
		[14516] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Warrior",
			["npcID"] = 10486,
		},
		[50370] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Westfall Brigade Marine",
			["npcID"] = 27501,
		},
		[58688] = {
			["encounterName"] = "Cyanigosa",
			["source"] = "Cyanigosa",
			["npcID"] = 31134,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 545,
		},
		[14868] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Guzzling Patron",
			["npcID"] = 9547,
		},
		[14900] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Aggem Thorncurse",
			["npcID"] = 4424,
		},
		[39621] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Acolyte",
			["npcID"] = 27731,
		},
		[15092] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Doom'rel",
			["npcID"] = 9039,
		},
		[18151] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lorekeeper Polkelt",
			["npcID"] = 10901,
		},
		[15284] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Marduk Blackpool",
			["npcID"] = 10433,
		},
		[49091] = {
			["encounterName"] = "Skadi the Ruthless",
			["source"] = "Ymirjar Harpooner",
			["npcID"] = 26692,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 581,
		},
		[53314] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dark Rune Elementalist",
			["npcID"] = 27962,
		},
		[7739] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Stonevault Flameweaver",
			["npcID"] = 7321,
		},
		[22886] = {
			["isChanneled"] = false,
			["source"] = "King Gordok",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11501,
		},
		[22950] = {
			["isChanneled"] = false,
			["source"] = "Immol'thar",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11496,
		},
		[15636] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Emperor Dagran Thaurissan",
			["npcID"] = 9019,
		},
		[15668] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Magmus",
			["npcID"] = 9938,
		},
		[15732] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Lord Alexei Barov",
			["npcID"] = 10504,
		},
		[54850] = {
			["encounterName"] = "Drakkari Colossus",
			["source"] = "Drakkari Colossus",
			["encounterID"] = 385,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29307,
		},
		[19367] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Core Hound",
			["npcID"] = 11673,
		},
		[7947] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Deviate Viper",
			["npcID"] = 5755,
		},
		[11829] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Unyielding Sorcerer",
			["npcID"] = 16905,
		},
		[7979] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Venture Co. Machine Smith",
			["npcID"] = 3993,
		},
		[56130] = {
			["encounterName"] = "Elder Nadox",
			["source"] = "Elder Nadox",
			["npcID"] = 29309,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 212,
		},
		[75645] = {
			["isChanneled"] = false,
			["source"] = "Corla, Herald of Twilight",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39679,
		},
		[36295] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Generic Bunny - GJC",
			["npcID"] = 54638,
		},
		[56898] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight Darkcaster",
			["npcID"] = 30319,
		},
		[8374] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ironaya",
			["npcID"] = 7228,
		},
		[58690] = {
			["encounterName"] = "Cyanigosa",
			["source"] = "Cyanigosa",
			["npcID"] = 31134,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 545,
		},
		[51012] = {
			["encounterName"] = "Tribunal of Ages",
			["source"] = "Dark Matter",
			["npcID"] = 28235,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 567,
		},
		[36040] = {
			["isChanneled"] = false,
			["source"] = "Shahandana",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41165,
		},
		[56643] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ahn'kahar Slasher",
			["npcID"] = 30277,
		},
		[89212] = {
			["source"] = "Sharptalon Eagle",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 44261,
		},
		[36808] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mage Hunter Ascendant",
			["npcID"] = 26727,
		},
		[91004] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defias Envoker",
			["npcID"] = 48418,
		},
		[22823] = {
			["isChanneled"] = false,
			["source"] = "Eldreth Sorcerer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11470,
		},
		[22887] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Murkblood Spearman",
			["npcID"] = 17729,
		},
		[13589] = {
			["isChanneled"] = false,
			["source"] = "Anvilrage Overseer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8889,
		},
		[34249] = {
			["isChanneled"] = false,
			["source"] = "Arazzius the Cruel",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 19191,
		},
		[31717] = {
			["encounterName"] = "The Black Stalker",
			["source"] = "The Black Stalker",
			["npcID"] = 17882,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1948,
		},
		[53317] = {
			["encounterName"] = "Hadronox",
			["source"] = "Anub'ar Champion",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29096,
		},
		[16553] = {
			["isChanneled"] = false,
			["source"] = "Ghoul Ravener",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10406,
		},
		[37321] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Auchenai Monk",
			["npcID"] = 18497,
		},
		[14517] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Marshal Paltrow",
			["npcID"] = 41937,
		},
		[34250] = {
			["source"] = "Sister of Grief",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 16960,
		},
		[81281] = {
			["source"] = "Fungal Growth II",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 43484,
		},
		[15061] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "General Angerforge",
			["npcID"] = 9033,
		},
		[71812] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Strange Tentacle",
			["npcID"] = 33420,
		},
		[22120] = {
			["isChanneled"] = false,
			["source"] = "Weakened Mosshoof Stag",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 35096,
		},
		[48583] = {
			["encounterName"] = "Skarvold & Dalronn",
			["source"] = "Skarvald the Constructor",
			["npcID"] = 24200,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 573,
		},
		[81026] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gnash",
			["npcID"] = 40987,
		},
		[15285] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Phase Lasher",
			["npcID"] = 13196,
		},
		[53318] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anub'ar Crusher",
			["npcID"] = 28922,
		},
		[32971] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Captain Peake",
			["npcID"] = 37157,
		},
		[22696] = {
			["source"] = "Petrified Guardian",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 14303,
		},
		[5708] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hakkari Frostwing",
			["npcID"] = 5291,
		},
		[22888] = {
			["source"] = "Major Mattingly",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 173754,
		},
		[15605] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Golem Lord Argelmach",
			["npcID"] = 8983,
		},
		[5884] = {
			["isChanneled"] = false,
			["source"] = "Hate Shrieker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8541,
		},
		[11894] = {
			["isChanneled"] = false,
			["source"] = "Antu'sul",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8127,
		},
		[47688] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Chaotic Rift",
			["npcID"] = 26918,
		},
		[11990] = {
			["isChanneled"] = false,
			["source"] = "Oro Eyegouge",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7606,
		},
		[12054] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Silverbrook Defender",
			["npcID"] = 27676,
		},
		[76165] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["isChanneled"] = false,
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40825,
		},
		[56646] = {
			["isChanneled"] = false,
			["source"] = "Enraged Fire Elemental",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46261,
		},
		[76677] = {
			["isChanneled"] = false,
			["source"] = "Twilight Element Warden",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40017,
		},
		[61509] = {
			["isChanneled"] = false,
			["source"] = "Slag",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28585,
		},
		[16554] = {
			["isChanneled"] = false,
			["source"] = "Blighted Surge",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8519,
		},
		[57798] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30622,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 215,
		},
		[91522] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dark Creeper",
			["npcID"] = 47132,
		},
		[6268] = {
			["isChanneled"] = false,
			["source"] = "Tamed Battleboar",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4535,
		},
		[58438] = {
			["isChanneled"] = false,
			["source"] = "Unbound Trickster",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30856,
		},
		[50504] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Arcane Serpent",
			["npcID"] = 25721,
		},
		[8599] = {
			["isChanneled"] = false,
			["source"] = "Wildspawn Satyr",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11451,
		},
		[54983] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Proto-Drake Handler",
			["npcID"] = 24082,
		},
		[6524] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Stone Steward",
			["npcID"] = 4860,
		},
		[35916] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodspore Firestarter",
			["npcID"] = 25470,
		},
		[9143] = {
			["isChanneled"] = false,
			["source"] = "Tinkerer Gizlock",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13601,
		},
		[30695] = {
			["encounterName"] = "Omor the Unscarred",
			["source"] = "Omor the Unscarred",
			["encounterID"] = 1891,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17308,
		},
		[86405] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Warden Azjakir",
			["npcID"] = 41530,
		},
		[13398] = {
			["isChanneled"] = false,
			["source"] = "Bonechewer Scavenger",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18952,
		},
		[57799] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30624,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 215,
		},
		[58567] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Warrior-Matic NX-01",
			["npcID"] = 38518,
		},
		[76680] = {
			["isChanneled"] = false,
			["source"] = "Twilight Element Warden",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40017,
		},
		[23337] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Warsong Battleguard",
			["npcID"] = 25242,
		},
		[73097] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Volcanoth",
			["npcID"] = 38855,
		},
		[55624] = {
			["isChanneled"] = false,
			["source"] = "Drakkari God Hunter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29820,
		},
		[31975] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Unliving Stalker",
			["npcID"] = 18501,
		},
		[52425] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Drakkari Protector",
			["npcID"] = 26797,
		},
		[40652] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Darnassian Scout",
			["npcID"] = 41865,
		},
		[89734] = {
			["encounterName"] = "\"Captain\" Cookie",
			["source"] = "Rotten Corn",
			["npcID"] = 48276,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1060,
		},
		[7164] = {
			["isChanneled"] = false,
			["source"] = "Quilguard Champion",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4623,
		},
		[32846] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Auchenai Monk",
			["npcID"] = 18497,
		},
		[86407] = {
			["isChanneled"] = false,
			["source"] = "Zin'jatar Fathom-Stalker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40372,
		},
		[16555] = {
			["source"] = "Plague Ravager",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 8520,
		},
		[14518] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Commander Mograine",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3976,
		},
		[50378] = {
			["encounterName"] = "Trollgore",
			["source"] = "Scourge Reanimator",
			["npcID"] = 26626,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 369,
		},
		[76682] = {
			["isChanneled"] = false,
			["source"] = "Twilight Element Warden",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40017,
		},
		[17195] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bound Fire Elemental",
			["npcID"] = 30416,
		},
		[29544] = {
			["source"] = "Captain Kromcrush",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 14325,
		},
		[14870] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Hammered Patron",
			["npcID"] = 9554,
		},
		[55625] = {
			["isChanneled"] = false,
			["source"] = "Drakkari God Hunter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29820,
		},
		[55881] = {
			["isChanneled"] = false,
			["source"] = "Fiend of Air",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30045,
		},
		[15062] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anger'rel",
			["npcID"] = 9035,
		},
		[17963] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "The Ravenian",
			["npcID"] = 10507,
		},
		[80266] = {
			["isChanneled"] = false,
			["source"] = "Talrendis Scout",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 35095,
		},
		[80522] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shimmerspine Harvester",
			["npcID"] = 46474,
		},
		[15254] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["source"] = "Ethereal Beacon",
			["npcID"] = 18431,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1899,
		},
		[53322] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anub'ar Crypt Fiend",
			["npcID"] = 29097,
		},
		[37838] = {
			["isChanneled"] = false,
			["source"] = "Drakuru Blood Drinker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29654,
		},
		[33871] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ethereal Scavenger",
			["npcID"] = 18309,
		},
		[50379] = {
			["encounterName"] = "Trollgore",
			["source"] = "Scourge Reanimator",
			["npcID"] = 26626,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 369,
		},
		[11639] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ogom the Wretched",
			["npcID"] = 5711,
		},
		[7948] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Alzzin the Wildshaper",
			["npcID"] = 11492,
		},
		[11831] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Highborne Summoner",
			["npcID"] = 11466,
		},
		[55626] = {
			["encounterName"] = "Drakkari Colossus",
			["source"] = "Living Mojo",
			["encounterID"] = 385,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29830,
		},
		[11895] = {
			["isChanneled"] = false,
			["source"] = "Antu'sul",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8127,
		},
		[55882] = {
			["isChanneled"] = false,
			["source"] = "Fiend of Air",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30045,
		},
		[12151] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Atal'ai High Priest",
			["npcID"] = 5273,
		},
		[48972] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Emberwyrm",
			["npcID"] = 26286,
		},
		[12279] = {
			["isChanneled"] = false,
			["source"] = "Scholomance Dark Summoner",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11582,
		},
		[49356] = {
			["encounterName"] = "The Prophet Tharon'ja",
			["source"] = "The Prophet Tharon'ja",
			["npcID"] = 26632,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 375,
		},
		[57802] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30621,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 215,
		},
		[8376] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Totemic",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4440,
		},
		[50380] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodspore Harvester",
			["npcID"] = 25467,
		},
		[21163] = {
			["source"] = "Smith Regzar",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 13176,
		},
		[76686] = {
			["isChanneled"] = false,
			["source"] = "Twilight Obsidian Borer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40019,
		},
		[8600] = {
			["isChanneled"] = false,
			["source"] = "Theka the Martyr",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7272,
		},
		[42702] = {
			["encounterName"] = "Prince Keleseth",
			["source"] = "Vrykul Skeleton",
			["npcID"] = 23970,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 571,
		},
		[89739] = {
			["encounterName"] = "\"Captain\" Cookie",
			["source"] = "\"Captain\" Cookie",
			["npcID"] = 47739,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1060,
		},
		[55627] = {
			["encounterName"] = "Drakkari Colossus",
			["source"] = "Living Mojo",
			["encounterID"] = 385,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29830,
		},
		[22187] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Chaplain",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4299,
		},
		[9080] = {
			["isChanneled"] = false,
			["source"] = "Wildspawn Satyr",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11451,
		},
		[30633] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Crystalline Protector",
			["npcID"] = 26792,
		},
		[32849] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Auchenai Monk",
			["npcID"] = 18497,
		},
		[58187] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Unbound Corrupter",
			["npcID"] = 30868,
		},
		[31401] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Earthbinder Galandria Nightbreeze",
			["npcID"] = 19294,
		},
		[76688] = {
			["isChanneled"] = false,
			["source"] = "Twilight Obsidian Borer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40019,
		},
		[19372] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Core Hound",
			["npcID"] = 11673,
		},
		[13847] = {
			["isChanneled"] = false,
			["source"] = "Anvilrage Soldier",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8893,
		},
		[51917] = {
			["encounterName"] = "Trollgore",
			["source"] = "Ghoul Tormentor",
			["npcID"] = 26621,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 369,
		},
		[10072] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Obsidian Sentinel",
			["npcID"] = 7023,
		},
		[88974] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sticky Bomb",
			["npcID"] = 47314,
		},
		[93581] = {
			["encounterName"] = "Baron Ashbury",
			["source"] = "Baron Ashbury",
			["npcID"] = 46962,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1069,
		},
		[16429] = {
			["isChanneled"] = false,
			["source"] = "Thuzadin Shadowcaster",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10398,
		},
		[42320] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spiny Raptor",
			["npcID"] = 38187,
		},
		[17197] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Carrion Devourer",
			["npcID"] = 8605,
		},
		[17773] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Jandice Barov",
			["npcID"] = 10503,
		},
		[15063] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Conjuror",
			["npcID"] = 10419,
		},
		[52430] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Drakkari Oracle",
			["npcID"] = 26795,
		},
		[22572] = {
			["isChanneled"] = false,
			["source"] = "Gordok Brute",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11441,
		},
		[53454] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'arak",
			["npcID"] = 29120,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 218,
		},
		[87185] = {
			["isChanneled"] = false,
			["source"] = "Gordok Captain",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11445,
		},
		[66966] = {
			["isChanneled"] = false,
			["source"] = "Talrendis Ancient",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 35198,
		},
		[15575] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wrath Hammer Construct",
			["npcID"] = 8907,
		},
		[50255] = {
			["encounterName"] = "Skadi the Ruthless",
			["source"] = "Skadi the Ruthless",
			["npcID"] = 26693,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 581,
		},
		[34259] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Atal'ai Deathwalker",
			["npcID"] = 5271,
		},
		[50895] = {
			["encounterName"] = "Sjonnir the Ironshaper",
			["source"] = "Forged Iron Dwarf",
			["npcID"] = 27982,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 569,
		},
		[90769] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Borelgore",
			["npcID"] = 11896,
		},
		[744] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Deviate Adder",
			["npcID"] = 5048,
		},
		[47696] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Crazed Mana-Surge",
			["npcID"] = 26737,
		},
		[11960] = {
			["source"] = "Dreadmaul Ambusher",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 41136,
		},
		[12024] = {
			["isChanneled"] = false,
			["source"] = "Booty Bay Bruiser",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4624,
		},
		[52431] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Drakkari Oracle",
			["npcID"] = 26795,
		},
		[16247] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lethtendris",
			["npcID"] = 14327,
		},
		[12248] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Murkblood Oracle",
			["npcID"] = 17771,
		},
		[16430] = {
			["isChanneled"] = false,
			["source"] = "Thuzadin Necromancer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10400,
		},
		[8281] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shrike Bat",
			["npcID"] = 4861,
		},
		[8377] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Earthgrab Totem",
			["npcID"] = 6066,
		},
		[6253] = {
			["isChanneled"] = false,
			["source"] = "Gordok Brute",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11441,
		},
		[54479] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Erekem",
			["npcID"] = 29315,
		},
		[50512] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Thane Torvald Eriksson",
			["npcID"] = 27377,
		},
		[12888] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Avatar of Hakkar",
			["npcID"] = 8440,
		},
		[47697] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Alliance Cleric",
			["npcID"] = 26805,
		},
		[21869] = {
			["isChanneled"] = false,
			["source"] = "Princess Theradras",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12201,
		},
		[8985] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Conjuror",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4297,
		},
		[9081] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadowforge Darkcaster",
			["npcID"] = 4848,
		},
		[6605] = {
			["isChanneled"] = false,
			["source"] = "Plaguebat",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8600,
		},
		[48849] = {
			["encounterName"] = "King Dred",
			["source"] = "King Dred",
			["npcID"] = 27483,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 373,
		},
		[53072] = {
			["isChanneled"] = false,
			["source"] = "Stormforged Giant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28920,
		},
		[32853] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Auchenai Vindicator",
			["npcID"] = 18495,
		},
		[6685] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadowforge Sharpshooter",
			["npcID"] = 7290,
		},
		[18670] = {
			["isChanneled"] = false,
			["source"] = "Landslide",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12203,
		},
		[3391] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Construct",
			["npcID"] = 10488,
		},
		[31403] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Centurion",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4301,
		},
		[34517] = {
			["isChanneled"] = false,
			["source"] = "Arcanist Doan",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6487,
		},
		[34645] = {
			["encounterName"] = "Watchkeeper Gargolmar",
			["source"] = "Watchkeeper Gargolmar",
			["encounterID"] = 1893,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17306,
		},
		[77720] = {
			["isChanneled"] = false,
			["source"] = "Riverpaw Slayer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46249,
		},
		[13880] = {
			["source"] = "Golemagg the Incinerator",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 11988,
		},
		[47698] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Crystalline Protector",
			["npcID"] = 26792,
		},
		[48082] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Crystalline Frayer",
			["npcID"] = 26793,
		},
		[32363] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["source"] = "Nexus-Prince Shaffar",
			["npcID"] = 18344,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1899,
		},
		[3551] = {
			["isChanneled"] = false,
			["source"] = "Brute Overseer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39193,
		},
		[7165] = {
			["isChanneled"] = false,
			["source"] = "Overlord Ramtusk",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4420,
		},
		[32854] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Auchenai Soulpriest",
			["npcID"] = 18493,
		},
		[3639] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Soldier",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4286,
		},
		[83864] = {
			["source"] = "Zanzil Mindslave",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 43223,
		},
		[75930] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Jungle Panther",
			["npcID"] = 40064,
		},
		[81305] = {
			["isChanneled"] = false,
			["source"] = "Agitated Earth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 36845,
		},
		[55249] = {
			["encounterName"] = "Gal'darah",
			["type"] = "DEBUFF",
			["source"] = "Gal'darah",
			["encounterID"] = 390,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 29306,
		},
		[14872] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hurley Blackbreath",
			["npcID"] = 9537,
		},
		[55633] = {
			["encounterName"] = "Drakkari Colossus",
			["source"] = "Drakkari Golem",
			["encounterID"] = 385,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29832,
		},
		[47699] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Crystalline Keeper",
			["npcID"] = 26782,
		},
		[15096] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight's Hammer Ambassador",
			["npcID"] = 8915,
		},
		[3815] = {
			["isChanneled"] = false,
			["source"] = "Aku'mai",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4829,
		},
		[15288] = {
			["isChanneled"] = false,
			["source"] = "Twilight Emissary",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8913,
		},
		[30636] = {
			["isChanneled"] = false,
			["source"] = "Shattered Hand Warhound",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17280,
		},
		[32855] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Auchenai Vindicator",
			["npcID"] = 18495,
		},
		[33111] = {
			["isChanneled"] = false,
			["source"] = "Shadowmoon Warlock",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17371,
		},
		[18671] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lady Illucia Barov",
			["npcID"] = 10502,
		},
		[15576] = {
			["isChanneled"] = false,
			["source"] = "Ashenvale Skirmisher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 33193,
		},
		[50131] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mage Slayer",
			["npcID"] = 26730,
		},
		[76188] = {
			["encounterName"] = "Ascendant Lord Obsidius",
			["source"] = "Ascendant Lord Obsidius",
			["isChanneled"] = false,
			["encounterID"] = 1036,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39705,
		},
		[11641] = {
			["isChanneled"] = false,
			["source"] = "Sandfury Shadowhunter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7246,
		},
		[38742] = {
			["isChanneled"] = false,
			["source"] = "Doomguard Destroyer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41470,
		},
		[55250] = {
			["encounterName"] = "Gal'darah",
			["source"] = "Gal'darah",
			["encounterID"] = 390,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29306,
		},
		[7965] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lord Cobrahn",
			["npcID"] = 3669,
		},
		[47700] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Crystalline Keeper",
			["npcID"] = 26782,
		},
		[83867] = {
			["isChanneled"] = false,
			["source"] = "Zanzil Zombie",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1488,
		},
		[12057] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Earthen Rocksmasher",
			["npcID"] = 7011,
		},
		[32364] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["source"] = "Nexus-Prince Shaffar",
			["npcID"] = 18344,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1899,
		},
		[32856] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Auchenai Vindicator",
			["npcID"] = 18495,
		},
		[8282] = {
			["isChanneled"] = false,
			["source"] = "High Inquisitor Fairbanks",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4542,
		},
		[91034] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Goblin Overseer",
			["npcID"] = 48279,
		},
		[33624] = {
			["isChanneled"] = false,
			["source"] = "Stormwind Mage",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18949,
		},
		[50132] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Mage Slayer",
			["npcID"] = 26730,
		},
		[34392] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lykul Stinger",
			["npcID"] = 19632,
		},
		[81309] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Boulderslide Geomancer",
			["npcID"] = 11917,
		},
		[73887] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Grandmatron Tekla",
			["npcID"] = 39325,
		},
		[55635] = {
			["encounterName"] = "Drakkari Colossus",
			["source"] = "Drakkari Golem",
			["encounterID"] = 385,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29832,
		},
		[21807] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Earthbinder Galandria Nightbreeze",
			["npcID"] = 19294,
		},
		[8986] = {
			["isChanneled"] = false,
			["source"] = "Haunting Phantasm",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6427,
		},
		[77471] = {
			["isChanneled"] = false,
			["source"] = "Shadowsworn Adept",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6006,
		},
		[22575] = {
			["isChanneled"] = false,
			["source"] = "Gordok Captain",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11445,
		},
		[22703] = {
			["source"] = "Infernal Defender",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 20160,
		},
		[91036] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Goblin Overseer",
			["npcID"] = 48279,
		},
		[49749] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nerub'ar Skitterer",
			["npcID"] = 24566,
		},
		[50517] = {
			["source"] = "Dread Captain DeMeza",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 28048,
		},
		[89757] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defias Cannon",
			["npcID"] = 48266,
		},
		[55636] = {
			["encounterName"] = "Drakkari Colossus",
			["source"] = "Drakkari Golem",
			["encounterID"] = 385,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29832,
		},
		[31981] = {
			["encounterName"] = "Mennu the Betrayer",
			["source"] = "Mennu the Betrayer",
			["npcID"] = 17941,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1939,
		},
		[4974] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Unliving Mossflayer",
			["npcID"] = 11291,
		},
		[48854] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ymirjar Flesh Hunter",
			["npcID"] = 26670,
		},
		[49110] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wyrmrest Guardian",
			["npcID"] = 26933,
		},
		[53333] = {
			["encounterName"] = "Hadronox",
			["source"] = "Anub'ar Necromancer",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29098,
		},
		[91038] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mining Monkey",
			["npcID"] = 48278,
		},
		[33626] = {
			["isChanneled"] = false,
			["source"] = "Stormwind Soldier",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18948,
		},
		[83872] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Zen'Kiki",
			["npcID"] = 44904,
		},
		[5262] = {
			["isChanneled"] = false,
			["source"] = "Burning Blade Fanatic",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3197,
		},
		[38233] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Northwatch Encroacher",
			["npcID"] = 41935,
		},
		[17201] = {
			["isChanneled"] = false,
			["source"] = "Celebrian Dryad",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11793,
		},
		[17393] = {
			["isChanneled"] = false,
			["source"] = "Lord Aurius Rivendare",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45412,
		},
		[14873] = {
			["isChanneled"] = false,
			["source"] = "Bazzalan",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11519,
		},
		[21808] = {
			["isChanneled"] = false,
			["source"] = "Landslide",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12203,
		},
		[56149] = {
			["encounterName"] = "Elder Nadox",
			["type"] = "DEBUFF",
			["source"] = "Ahn'kahar Guardian",
			["npcID"] = 30176,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 212,
		},
		[75683] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["isChanneled"] = false,
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40586,
		},
		[22128] = {
			["isChanneled"] = false,
			["source"] = "Alzzin the Wildshaper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11492,
		},
		[88736] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Admiral Ripsnarl",
			["npcID"] = 47626,
		},
		[49111] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Azure Dragon",
			["npcID"] = 27608,
		},
		[53334] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anub'ar Necromancer",
			["npcID"] = 29064,
		},
		[18545] = {
			["source"] = "Ashenvale Outrunner",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 12856,
		},
		[45528] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Wind Tamer Oril",
			["npcID"] = 26725,
		},
		[57941] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Herald Volazj",
			["npcID"] = 29311,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 215,
		},
		[88481] = {
			["encounterName"] = "Foe Reaper 5000",
			["source"] = "Foe Reaper 5000",
			["npcID"] = 43778,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1063,
		},
		[88737] = {
			["encounterName"] = "Admiral Ripsnarl",
			["type"] = "BUFF",
			["source"] = "Admiral Ripsnarl",
			["npcID"] = 47626,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1062,
		},
		[11642] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Adept",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4296,
		},
		[15801] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Revelosh",
			["npcID"] = 6910,
		},
		[23600] = {
			["isChanneled"] = false,
			["source"] = "Titanium Siegebreaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28961,
		},
		[11898] = {
			["isChanneled"] = false,
			["source"] = "Sandfury Blood Drinker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5649,
		},
		[103582] = {
			["source"] = "Darkmoon Faire Mystic Mage",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 55382,
		},
		[12058] = {
			["isChanneled"] = false,
			["source"] = "Wildhammer Shaman",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42554,
		},
		[16345] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wretched Belcher",
			["npcID"] = 26624,
		},
		[32860] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Auchenai Soulpriest",
			["npcID"] = 18493,
		},
		[53463] = {
			["encounterName"] = "The Prophet Tharon'ja",
			["source"] = "The Prophet Tharon'ja",
			["npcID"] = 26632,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 375,
		},
		[57942] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Herald Volazj",
			["npcID"] = 29311,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 215,
		},
		[8379] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Kirtonos the Herald",
			["npcID"] = 10506,
		},
		[6254] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Skum",
			["npcID"] = 3674,
		},
		[12538] = {
			["isChanneled"] = false,
			["source"] = "Thorn Eater Ghoul",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7348,
		},
		[75942] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Yngwie",
			["npcID"] = 38696,
		},
		[34268] = {
			["encounterName"] = "Ghaz'an",
			["source"] = "Ghaz'an",
			["npcID"] = 18105,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1945,
		},
		[38619] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Horgrenn Hellcleave",
			["npcID"] = 27718,
		},
		[34780] = {
			["encounterName"] = "Quagmirran",
			["source"] = "Quagmirran",
			["npcID"] = 17942,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1940,
		},
		[1604] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Scholomance Acolyte",
			["npcID"] = 10471,
		},
		[12890] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shade of Eranikus",
			["npcID"] = 5709,
		},
		[52696] = {
			["encounterName"] = "Meathook",
			["source"] = "Meathook",
			["npcID"] = 26529,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 293,
		},
		[89252] = {
			["encounterName"] = "\"Captain\" Cookie",
			["source"] = "\"Captain\" Cookie",
			["npcID"] = 47739,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1060,
		},
		[30639] = {
			["isChanneled"] = false,
			["source"] = "Shattered Hand Warhound",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17280,
		},
		[49113] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wyrmrest Temple Drake",
			["npcID"] = 26925,
		},
		[13338] = {
			["isChanneled"] = false,
			["source"] = "Gordok Warlock",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11448,
		},
		[9275] = {
			["source"] = "Scarlet Torturer",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 4306,
		},
		[45658] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Kvaldir Mistweaver",
			["npcID"] = 25479,
		},
		[9435] = {
			["isChanneled"] = false,
			["source"] = "Arcanist Doan",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6487,
		},
		[31279] = {
			["isChanneled"] = false,
			["source"] = "Plaguehound Runt",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8596,
		},
		[76200] = {
			["encounterName"] = "Ascendant Lord Obsidius",
			["type"] = "BUFF",
			["source"] = "Ascendant Lord Obsidius",
			["encounterID"] = 1036,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 39705,
		},
		[31407] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Murkblood Spearman",
			["npcID"] = 17729,
		},
		[91045] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ogre Henchman",
			["npcID"] = 48230,
		},
		[7054] = {
			["encounterName"] = "Commander Springvale",
			["source"] = "Tormented Officer",
			["npcID"] = 3873,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1071,
		},
		[84391] = {
			["isChanneled"] = false,
			["source"] = "Oath-Chained Infernal",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41253,
		},
		[75946] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Teloch",
			["npcID"] = 38810,
		},
		[84392] = {
			["isChanneled"] = false,
			["source"] = "Oath-Chained Infernal",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41253,
		},
		[7342] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Deviate Lasher",
			["npcID"] = 5055,
		},
		[17139] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Eldreth Darter",
			["npcID"] = 14398,
		},
		[38621] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Proto-Drake Handler",
			["npcID"] = 24082,
		},
		[42972] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Captain Peake",
			["npcID"] = 37157,
		},
		[17651] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spectral Tutor",
			["npcID"] = 10498,
		},
		[17715] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Bonewarder",
			["npcID"] = 10491,
		},
		[56153] = {
			["encounterName"] = "Elder Nadox",
			["type"] = "BUFF",
			["source"] = "Ahn'kahar Guardian",
			["npcID"] = 30176,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 212,
		},
		[18099] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ras Frostwhisper",
			["npcID"] = 10508,
		},
		[11131] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gahz'rilla",
			["npcID"] = 7273,
		},
		[93863] = {
			["encounterName"] = "Baron Silverlaine",
			["source"] = "Rethilgore",
			["npcID"] = 50834,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1070,
		},
		[32863] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Auchenai Necromancer",
			["npcID"] = 18702,
		},
		[30832] = {
			["isChanneled"] = false,
			["source"] = "Laughing Skull Rogue",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17491,
		},
		[37470] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ethereal Spellbinder",
			["npcID"] = 18312,
		},
		[45788] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bane",
			["npcID"] = 25655,
		},
		[15610] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Grim Patron",
			["npcID"] = 9545,
		},
		[50267] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Winterfin Warrior",
			["npcID"] = 25217,
		},
		[76716] = {
			["isChanneled"] = false,
			["source"] = "Defiled Earth Rager",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40023,
		},
		[31600] = {
			["isChanneled"] = false,
			["source"] = "Crypt Stalker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8555,
		},
		[89769] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mining Powder",
			["npcID"] = 48284,
		},
		[11899] = {
			["isChanneled"] = false,
			["source"] = "Sandfury Witch Doctor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5650,
		},
		[91561] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Fetid Ghoul",
			["npcID"] = 47135,
		},
		[8078] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Grundig Darkcloud",
			["npcID"] = 11858,
		},
		[88490] = {
			["encounterName"] = "Foe Reaper 5000",
			["source"] = "Foe Reaper 5000",
			["npcID"] = 43778,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1063,
		},
		[52699] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Iron Rune-Smith",
			["npcID"] = 26408,
		},
		[8142] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Verdan the Everliving",
			["npcID"] = 5775,
		},
		[85419] = {
			["isChanneled"] = false,
			["source"] = "Hulking Plaguebear",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44482,
		},
		[12251] = {
			["source"] = "Tomb Reaver",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 7351,
		},
		[53467] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'arak",
			["npcID"] = 29120,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 218,
		},
		[91050] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ogre Bodyguard",
			["npcID"] = 48262,
		},
		[20787] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lethtendris",
			["npcID"] = 14327,
		},
		[33632] = {
			["isChanneled"] = false,
			["source"] = "Ironforge Paladin",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18986,
		},
		[76718] = {
			["isChanneled"] = false,
			["source"] = "Incendiary Spark",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40021,
		},
		[12795] = {
			["isChanneled"] = false,
			["source"] = "Glutton",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8567,
		},
		[12891] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shade of Eranikus",
			["npcID"] = 5709,
		},
		[51804] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Magister Keldonus",
			["npcID"] = 26828,
		},
		[75439] = {
			["isChanneled"] = false,
			["source"] = "Vilebranch Shadow Hunter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 2645,
		},
		[8988] = {
			["isChanneled"] = false,
			["source"] = "Arcanist Doan",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6487,
		},
		[76207] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Mindbender Ghur'sha",
			["isChanneled"] = false,
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40788,
		},
		[18100] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ras Frostwhisper",
			["npcID"] = 10508,
		},
		[76719] = {
			["isChanneled"] = false,
			["source"] = "Incendiary Spark",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40021,
		},
		[30641] = {
			["encounterName"] = "Watchkeeper Gargolmar",
			["source"] = "Watchkeeper Gargolmar",
			["encounterID"] = 1893,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17306,
		},
		[13339] = {
			["isChanneled"] = false,
			["source"] = "Highborne Summoner",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11466,
		},
		[53468] = {
			["encounterName"] = "Anub'arak",
			["type"] = "DEBUFF",
			["source"] = "Anub'arak",
			["npcID"] = 29120,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 218,
		},
		[22899] = {
			["isChanneled"] = false,
			["source"] = "Immol'thar",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11496,
		},
		[31281] = {
			["isChanneled"] = false,
			["source"] = "Bloodwash Enchantress",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41387,
		},
		[9532] = {
			["isChanneled"] = false,
			["source"] = "Ragefire Shaman",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11319,
		},
		[38240] = {
			["isChanneled"] = false,
			["source"] = "Unseen Servant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8538,
		},
		[50653] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Enslaved Proto-Drake",
			["npcID"] = 24083,
		},
		[31601] = {
			["isChanneled"] = false,
			["source"] = "Crypt Crawler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10412,
		},
		[13787] = {
			["isChanneled"] = false,
			["source"] = "Gordok Warlock",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11448,
		},
		[31985] = {
			["encounterName"] = "Mennu the Betrayer",
			["source"] = "Mennu the Betrayer",
			["npcID"] = 17941,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1939,
		},
		[75441] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Chains of Woe",
			["isChanneled"] = false,
			["encounterID"] = 1040,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40447,
		},
		[75697] = {
			["type"] = "DEBUFF",
			["source"] = "Twilight Zealot",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 50284,
		},
		[52701] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Iron Rune-Smith",
			["npcID"] = 26408,
		},
		[14331] = {
			["isChanneled"] = false,
			["source"] = "Warpwood Treant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11462,
		},
		[58460] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Azure Enforcer",
			["npcID"] = 26734,
		},
		[29426] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Gallant",
			["npcID"] = 10424,
		},
		[89263] = {
			["encounterName"] = "\"Captain\" Cookie",
			["source"] = "\"Captain\" Cookie",
			["npcID"] = 47739,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1060,
		},
		[59228] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scourge Hulk",
			["npcID"] = 26555,
		},
		[14875] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Acolyte",
			["npcID"] = 27731,
		},
		[14907] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "The Unforgiven",
			["npcID"] = 10516,
		},
		[78770] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Grimtotem Ruffian",
			["npcID"] = 11910,
		},
		[52318] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Silverbrook Defender",
			["npcID"] = 27676,
		},
		[52446] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Skittering Infector",
			["npcID"] = 28736,
		},
		[18101] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Ras Frostwhisper",
			["npcID"] = 10508,
		},
		[52702] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Runic War Golem",
			["npcID"] = 26347,
		},
		[77747] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Flametongue Totem",
			["npcID"] = 5950,
		},
		[57949] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Herald Volazj",
			["npcID"] = 29311,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 215,
		},
		[15547] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadowforge Sharpshooter",
			["npcID"] = 7290,
		},
		[31410] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wrathfin Myrmidon",
			["npcID"] = 17726,
		},
		[80819] = {
			["isChanneled"] = false,
			["source"] = "Shade of Hate",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 35503,
		},
		[54878] = {
			["encounterName"] = "Drakkari Colossus",
			["source"] = "Drakkari Elemental",
			["encounterID"] = 385,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29573,
		},
		[31602] = {
			["isChanneled"] = false,
			["source"] = "Nerub'enkan",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10437,
		},
		[34787] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Darkcrest Sorceress",
			["npcID"] = 19947,
		},
		[11836] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gahz'rilla",
			["npcID"] = 7273,
		},
		[82611] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sauranok the Mystic",
			["npcID"] = 44120,
		},
		[48096] = {
			["encounterName"] = "Keristrasza",
			["source"] = "Keristrasza",
			["npcID"] = 26723,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 526,
		},
		[80564] = {
			["type"] = "DEBUFF",
			["source"] = "Lady Naz'jar",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 40586,
		},
		[80820] = {
			["isChanneled"] = false,
			["source"] = "Talrendis Scout",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 35095,
		},
		[12252] = {
			["isChanneled"] = false,
			["source"] = "Tuten'kash",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7355,
		},
		[8285] = {
			["isChanneled"] = false,
			["source"] = "Agathelos the Raging",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4422,
		},
		[12540] = {
			["isChanneled"] = false,
			["source"] = "Putridus Satyr",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11790,
		},
		[29299] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Skra'gath",
			["npcID"] = 18401,
		},
		[29363] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Vampiric Duskbat",
			["npcID"] = 1554,
		},
		[29427] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Murkblood Healer",
			["npcID"] = 17730,
		},
		[34788] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Dreghood Drudge",
			["npcID"] = 18122,
		},
		[21749] = {
			["isChanneled"] = false,
			["source"] = "Barbed Lasher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12219,
		},
		[3248] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Defender",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4442,
		},
		[3256] = {
			["isChanneled"] = false,
			["source"] = "Scarab",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7269,
		},
		[8989] = {
			["isChanneled"] = false,
			["source"] = "Herod",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3975,
		},
		[9053] = {
			["isChanneled"] = false,
			["source"] = "Highborne Summoner",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11466,
		},
		[6607] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Avatar of Hakkar",
			["npcID"] = 8440,
		},
		[52960] = {
			["encounterName"] = "Loken",
			["source"] = "Loken",
			["encounterID"] = 561,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28923,
		},
		[30643] = {
			["encounterName"] = "Watchkeeper Gargolmar",
			["source"] = "Hellfire Watcher",
			["encounterID"] = 1893,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17309,
		},
		[49121] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ymirjar Berserker",
			["npcID"] = 26696,
		},
		[13340] = {
			["isChanneled"] = false,
			["source"] = "Wildspawn Imp",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13276,
		},
		[53472] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'arak",
			["npcID"] = 29120,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 218,
		},
		[9373] = {
			["isChanneled"] = false,
			["source"] = "Azshir the Sleepless",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6490,
		},
		[45922] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Shadowstalker Getry",
			["npcID"] = 25729,
		},
		[13692] = {
			["isChanneled"] = false,
			["source"] = "Bloodhound",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8921,
		},
		[42723] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["npcID"] = 23954,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 575,
		},
		[34789] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dreghood Drudge",
			["npcID"] = 18122,
		},
		[94644] = {
			["source"] = "Deathwing",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 44744,
		},
		[83639] = {
			["isChanneled"] = false,
			["source"] = "Bloodwash Barbarian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41386,
		},
		[76473] = {
			["isChanneled"] = false,
			["source"] = "Twilight Flame Caller",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39708,
		},
		[52705] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Charged Sentry Totem",
			["npcID"] = 28938,
		},
		[3600] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Earthbind Totem",
			["npcID"] = 2630,
		},
		[16567] = {
			["source"] = "Cursed Mage",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 8524,
		},
		[7279] = {
			["isChanneled"] = false,
			["source"] = "The Reak",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8212,
		},
		[96437] = {
			["isChanneled"] = false,
			["source"] = "Ashenvale Skirmisher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 33193,
		},
		[50402] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodspore Roaster",
			["npcID"] = 25468,
		},
		[17143] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Champion",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4302,
		},
		[46691] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nexus Drake Hatchling",
			["npcID"] = 26127,
		},
		[42724] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dragonflayer Weaponsmith",
			["npcID"] = 24080,
		},
		[34662] = {
			["encounterName"] = "Swamplord Musel'ek",
			["source"] = "Swamplord Musel'ek",
			["npcID"] = 17826,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1947,
		},
		[17399] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Balnazzar",
			["npcID"] = 10813,
		},
		[55521] = {
			["isChanneled"] = false,
			["source"] = "Drakkari Battle Rider",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29836,
		},
		[18103] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Doctor Theolen Krastinov",
			["npcID"] = 11261,
		},
		[15228] = {
			["isChanneled"] = false,
			["source"] = "Wildspawn Hellcaller",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11457,
		},
		[81082] = {
			["isChanneled"] = false,
			["source"] = "Felhound",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6010,
		},
		[57057] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Thane Torvald Eriksson",
			["npcID"] = 27377,
		},
		[82362] = {
			["isChanneled"] = false,
			["source"] = "Evolved Twilight Zealot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39987,
		},
		[22710] = {
			["isChanneled"] = false,
			["source"] = "Lethtendris",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14327,
		},
		[91064] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Frantic Geist",
			["npcID"] = 47131,
		},
		[15548] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Quilguard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4436,
		},
		[15580] = {
			["isChanneled"] = false,
			["source"] = "Wildspawn Satyr",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11451,
		},
		[75964] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Tower Warden",
			["npcID"] = 37160,
		},
		[15708] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Warmaul Champion",
			["npcID"] = 18402,
		},
		[19319] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Alzzin the Wildshaper",
			["npcID"] = 11492,
		},
		[85690] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Rabid Fox",
			["npcID"] = 44551,
		},
		[7951] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Deviate Venomwing",
			["npcID"] = 5756,
		},
		[7967] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mutanus the Devourer",
			["npcID"] = 3654,
		},
		[19703] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Lucifron",
			["npcID"] = 12118,
		},
		[52067] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Crystalline Frayer",
			["npcID"] = 26793,
		},
		[52451] = {
			["encounterName"] = "Salram the Fleshcrafter",
			["source"] = "Salramm the Fleshcrafter",
			["npcID"] = 26530,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 294,
		},
		[85691] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Rabid Fox",
			["npcID"] = 44551,
		},
		[16380] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Eye of Naxxramas",
			["npcID"] = 10411,
		},
		[49380] = {
			["encounterName"] = "Trollgore",
			["source"] = "Trollgore",
			["npcID"] = 26630,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 369,
		},
		[16568] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dread Weaver",
			["npcID"] = 8528,
		},
		[20791] = {
			["isChanneled"] = false,
			["source"] = "Searing Blade Warlock",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11324,
		},
		[8382] = {
			["isChanneled"] = false,
			["source"] = "Blindlight Muckdweller",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4819,
		},
		[12541] = {
			["source"] = "Thorn Eater Ghoul",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 7348,
		},
		[33896] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Stonescythe Whelp",
			["npcID"] = 16927,
		},
		[76478] = {
			["isChanneled"] = false,
			["source"] = "Twilight Torturer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39978,
		},
		[34920] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ethereal Scavenger",
			["npcID"] = 18309,
		},
		[90555] = {
			["encounterName"] = "\"Captain\" Cookie",
			["source"] = "\"Captain\" Cookie",
			["npcID"] = 47739,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1060,
		},
		[21687] = {
			["isChanneled"] = false,
			["source"] = "Noxxion",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13282,
		},
		[8990] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Commander Mograine",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3976,
		},
		[13341] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Sorcerous Skeleton",
			["npcID"] = 47140,
		},
		[90556] = {
			["encounterName"] = "\"Captain\" Cookie",
			["source"] = "\"Captain\" Cookie",
			["npcID"] = 47739,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1060,
		},
		[9438] = {
			["isChanneled"] = false,
			["source"] = "Arcanist Doan",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6487,
		},
		[75968] = {
			["isChanneled"] = false,
			["source"] = "Chip Endale",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39363,
		},
		[75969] = {
			["isChanneled"] = false,
			["source"] = "Chip Endale",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39363,
		},
		[80576] = {
			["isChanneled"] = false,
			["source"] = "Twilight Nightblade",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42707,
		},
		[93629] = {
			["encounterName"] = "Lord Godfrey",
			["source"] = "Lord Godfrey",
			["npcID"] = 46964,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1072,
		},
		[32693] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dark Rune Elementalist",
			["npcID"] = 27962,
		},
		[5280] = {
			["isChanneled"] = false,
			["source"] = "Razormane Battleguard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3114,
		},
		[50534] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Blue Drakonid Supplicant",
			["npcID"] = 25713,
		},
		[17145] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scholomance Handler",
			["npcID"] = 11257,
		},
		[34410] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Garrosh's Buff Bots",
			["npcID"] = 19660,
		},
		[90047] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defias Envoker",
			["npcID"] = 48418,
		},
		[34922] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nexus Terror",
			["npcID"] = 19307,
		},
		[90559] = {
			["encounterName"] = "\"Captain\" Cookie",
			["source"] = "\"Captain\" Cookie",
			["npcID"] = 47739,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1060,
		},
		[70340] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Jorn Skyseer",
			["npcID"] = 3387,
		},
		[39529] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mogor",
			["npcID"] = 18069,
		},
		[35946] = {
			["isChanneled"] = false,
			["source"] = "Drakkari God Hunter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29820,
		},
		[5568] = {
			["isChanneled"] = false,
			["source"] = "Primordial Behemoth",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12206,
		},
		[90560] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "\"Captain\" Cookie",
			["npcID"] = 47739,
		},
		[49639] = {
			["encounterName"] = "Trollgore",
			["source"] = "Trollgore",
			["npcID"] = 26630,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 369,
		},
		[15581] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Blackbreath Crony",
			["npcID"] = 9541,
		},
		[109244] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Teleportologist Fozlebub",
			["npcID"] = 57850,
		},
		[42729] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["npcID"] = 23954,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 575,
		},
		[23736] = {
			["source"] = "Sayge",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 14822,
		},
		[11902] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gahz'rilla",
			["npcID"] = 7273,
		},
		[6016] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Kirtonos the Herald",
			["npcID"] = 10506,
		},
		[84931] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["isChanneled"] = false,
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40825,
		},
		[20537] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Prince Tortheldrin",
			["npcID"] = 11486,
		},
		[8255] = {
			["isChanneled"] = false,
			["source"] = "Razelikh the Defiler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41280,
		},
		[33132] = {
			["encounterName"] = "Mennu the Betrayer",
			["source"] = "Corrupted Nova Totem",
			["npcID"] = 18179,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1939,
		},
		[20793] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Boulderslide Geomancer",
			["npcID"] = 11917,
		},
		[12542] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scholomance Neophyte",
			["npcID"] = 10470,
		},
		[58470] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Azure Stalker",
			["npcID"] = 32191,
		},
		[12734] = {
			["isChanneled"] = false,
			["source"] = "Commander Malor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11032,
		},
		[51432] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ymirjar Necromancer",
			["npcID"] = 28368,
		},
		[47721] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["npcID"] = 26928,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 520,
		},
		[67529] = {
			["isChanneled"] = false,
			["source"] = "Earthen Ring Shaman",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39411,
		},
		[76487] = {
			["isChanneled"] = false,
			["source"] = "Twilight Torturer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39978,
		},
		[48873] = {
			["encounterName"] = "King Dred",
			["source"] = "King Dred",
			["npcID"] = 27483,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 373,
		},
		[78535] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Instructor Malicia",
			["npcID"] = 10505,
		},
		[45802] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Infested Prisoner",
			["npcID"] = 25624,
		},
		[67530] = {
			["isChanneled"] = false,
			["source"] = "Earthen Ring Shaman",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39411,
		},
		[19130] = {
			["encounterName"] = "Vazruden the Herald",
			["source"] = "Vazruden",
			["encounterID"] = 1892,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17537,
		},
		[19514] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Windfury Harpy",
			["npcID"] = 2962,
		},
		[9791] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dragonflayer Bonecrusher",
			["npcID"] = 24069,
		},
		[86726] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Randolph Moloch",
			["npcID"] = 46383,
		},
		[31991] = {
			["encounterName"] = "Mennu the Betrayer",
			["source"] = "Mennu the Betrayer",
			["npcID"] = 17941,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1939,
		},
		[55912] = {
			["isChanneled"] = false,
			["source"] = "Az'Barin, Prince of the Gust",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30026,
		},
		[52457] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Drak'aguul",
			["npcID"] = 26919,
		},
		[52713] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Iron Rune-Weaver",
			["npcID"] = 26820,
		},
		[36589] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Sinewy Wolf",
			["npcID"] = 31233,
		},
		[89798] = {
			["source"] = "Lord Victor Nefarius",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 49799,
		},
		[75722] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["isChanneled"] = false,
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40586,
		},
		[50410] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Magnataur Huntress",
			["npcID"] = 24469,
		},
		[17467] = {
			["isChanneled"] = false,
			["source"] = "Lord Alexei Barov",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10504,
		},
		[47723] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["npcID"] = 26928,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 520,
		},
		[83657] = {
			["isChanneled"] = false,
			["source"] = "Redstone Basilisk",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5990,
		},
		[52586] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Krik'thir the Gatewatcher",
			["npcID"] = 28684,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 216,
		},
		[15230] = {
			["isChanneled"] = false,
			["source"] = "Fel Lash",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13197,
		},
		[102341] = {
			["source"] = "Enemy Tonk",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 54642,
		},
		[86729] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Randolph Moloch",
			["npcID"] = 46383,
		},
		[15550] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "The Ravenian",
			["npcID"] = 10507,
		},
		[50027] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Wailing Soul",
			["npcID"] = 27836,
		},
		[88009] = {
			["encounterName"] = "Glubtok",
			["source"] = "Glubtok",
			["npcID"] = 47162,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1064,
		},
		[50283] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Nerub'ar Web Lord",
			["npcID"] = 25294,
		},
		[84426] = {
			["isChanneled"] = false,
			["source"] = "Gomegaz",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41166,
		},
		[19131] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Guardsman",
			["npcID"] = 10418,
		},
		[11647] = {
			["isChanneled"] = false,
			["source"] = "High Inquisitor Fairbanks",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4542,
		},
		[50795] = {
			["source"] = "Zul'Drak Gateway Trigger",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 28181,
		},
		[55530] = {
			["isChanneled"] = false,
			["source"] = "Drakkari Rhino",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29931,
		},
		[23738] = {
			["source"] = "Sayge",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 14822,
		},
		[51819] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Raging Construct",
			["npcID"] = 27970,
		},
		[43757] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dragonflayer Forge Master",
			["npcID"] = 24079,
		},
		[88522] = {
			["encounterName"] = "Foe Reaper 5000",
			["source"] = "Foe Reaper 5000",
			["npcID"] = 43778,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1063,
		},
		[52715] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Overseer Durval",
			["npcID"] = 26920,
		},
		[48876] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ymirjar Savage",
			["npcID"] = 26669,
		},
		[12255] = {
			["isChanneled"] = false,
			["source"] = "Tuten'kash",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7355,
		},
		[77773] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Scryer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4293,
		},
		[70095] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bristleback Gun Thief",
			["npcID"] = 36708,
		},
		[45805] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Varidus the Flenser",
			["npcID"] = 25618,
		},
		[50284] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nerub'ar Web Lord",
			["npcID"] = 25294,
		},
		[52460] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Drak'aguul",
			["npcID"] = 26919,
		},
		[22651] = {
			["isChanneled"] = false,
			["source"] = "Zevrim Thornhoof",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11490,
		},
		[78799] = {
			["isChanneled"] = false,
			["source"] = "Naias",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17207,
		},
		[37488] = {
			["isChanneled"] = false,
			["source"] = "Terrorfiend",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 16951,
		},
		[22907] = {
			["encounterName"] = "Swamplord Musel'ek",
			["source"] = "Swamplord Musel'ek",
			["npcID"] = 17826,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1947,
		},
		[31289] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Jungle Cat",
			["npcID"] = 35904,
		},
		[34161] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Underbog Lurker",
			["npcID"] = 17725,
		},
		[85710] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Alliance Fox Hunter",
			["npcID"] = 44432,
		},
		[55276] = {
			["encounterName"] = "Gal'darah",
			["source"] = "Gal'darah",
			["encounterID"] = 390,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29306,
		},
		[52461] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Enraging Ghoul",
			["npcID"] = 27729,
		},
		[76497] = {
			["isChanneled"] = false,
			["source"] = "Twilight Sadist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39980,
		},
		[52717] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Overseer Lochli",
			["npcID"] = 26922,
		},
		[48878] = {
			["encounterName"] = "King Dred",
			["source"] = "King Dred",
			["npcID"] = 27483,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 373,
		},
		[5137] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Undead Postman",
			["npcID"] = 11142,
		},
		[16509] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Warrior",
			["npcID"] = 10486,
		},
		[28858] = {
			["isChanneled"] = false,
			["source"] = "Ironbark Protector",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11459,
		},
		[78801] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hydromancer Velratha",
			["npcID"] = 7795,
		},
		[2601] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadowforge Senator",
			["npcID"] = 8904,
		},
		[79825] = {
			["isChanneled"] = false,
			["source"] = "Felspore Bog Lord",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45125,
		},
		[76242] = {
			["encounterName"] = "Ascendant Lord Obsidius",
			["type"] = "BUFF",
			["source"] = "Ascendant Lord Obsidius",
			["encounterID"] = 1036,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 39705,
		},
		[34290] = {
			["encounterName"] = "Ghaz'an",
			["source"] = "Ghaz'an",
			["npcID"] = 18105,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1945,
		},
		[89551] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Temple Runecaster",
			["npcID"] = 48140,
		},
		[34802] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Noxious Assassin",
			["npcID"] = 45692,
		},
		[86736] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hogger",
			["npcID"] = 46254,
		},
		[78802] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hydromancer Velratha",
			["npcID"] = 7795,
		},
		[79058] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Fizz Lighter",
			["npcID"] = 38514,
		},
		[35570] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dragonflayer Overseer",
			["npcID"] = 24085,
		},
		[79826] = {
			["isChanneled"] = false,
			["source"] = "Unstable Shroom",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42835,
		},
		[80850] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Bonewarder",
			["npcID"] = 10491,
		},
		[85713] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Plague Lurker",
			["npcID"] = 1824,
		},
		[91088] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Corpse Eater",
			["npcID"] = 47134,
		},
		[33395] = {
			["source"] = "Unknown",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 510,
		},
		[18813] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Patchwork Horror",
			["npcID"] = 10414,
		},
		[15583] = {
			["isChanneled"] = false,
			["source"] = "Wildspawn Rogue",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11452,
		},
		[15615] = {
			["isChanneled"] = false,
			["source"] = "Warpwood Guardian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11461,
		},
		[33907] = {
			["source"] = "Hyjal Protector",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 52213,
		},
		[34163] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Underbog Shambler",
			["npcID"] = 17871,
		},
		[81363] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Stonetalon Ram",
			["npcID"] = 34894,
		},
		[34931] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ethereal Darkcaster",
			["npcID"] = 18331,
		},
		[86738] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Vicious Thug",
			["npcID"] = 46379,
		},
		[52207] = {
			["source"] = "Rampaging Geist",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 28026,
		},
		[52719] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Westfall Brigade Marine",
			["npcID"] = 27501,
		},
		[48880] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ymirjar Savage",
			["npcID"] = 26669,
		},
		[8257] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Venomlash Scorpid",
			["npcID"] = 7022,
		},
		[12480] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Jammal'an the Prophet",
			["npcID"] = 5710,
		},
		[6257] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hired Looter",
			["npcID"] = 35234,
		},
		[12544] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Rogue Wizard",
			["npcID"] = 474,
		},
		[50416] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Coldarra Wyrmkin",
			["npcID"] = 25728,
		},
		[76502] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Twilight Sadist",
			["isChanneled"] = false,
			["encounterID"] = 1040,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39980,
		},
		[17150] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Sorcerer",
			["npcID"] = 10422,
		},
		[65753] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Tonga's Eyes",
			["npcID"] = 34615,
		},
		[86740] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Rowdy Troublemaker",
			["npcID"] = 46375,
		},
		[47729] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["npcID"] = 26930,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 520,
		},
		[52208] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dragonflayer Flamebinder",
			["npcID"] = 27259,
		},
		[52720] = {
			["encounterName"] = "Mal'ganis",
			["source"] = "Mal'Ganis",
			["npcID"] = 26533,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 296,
		},
		[61166] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Coldarra Wyrmkin",
			["npcID"] = 25728,
		},
		[22909] = {
			["isChanneled"] = false,
			["source"] = "Eye of Immol'thar",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14396,
		},
		[3385] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Armored Battleboar",
			["npcID"] = 36696,
		},
		[33909] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hulking Helboar",
			["npcID"] = 16880,
		},
		[54512] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Vargul Runelord",
			["npcID"] = 29450,
		},
		[19134] = {
			["isChanneled"] = false,
			["source"] = "Captain Kromcrush",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14325,
		},
		[31547] = {
			["encounterName"] = "Swamplord Musel'ek",
			["source"] = "Swamplord Musel'ek",
			["npcID"] = 17826,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1947,
		},
		[90325] = {
			["isChanneled"] = false,
			["source"] = "Ongo'longo",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42815,
		},
		[47346] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Novos the Summoner",
			["npcID"] = 26631,
		},
		[13952] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Marshal Paltrow",
			["npcID"] = 41937,
		},
		[52209] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dragonflayer Flamebinder",
			["npcID"] = 27259,
		},
		[32315] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ethereal Crypt Raider",
			["npcID"] = 18311,
		},
		[36213] = {
			["isChanneled"] = false,
			["source"] = "Greater Earth Elemental",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39389,
		},
		[52721] = {
			["encounterName"] = "Mal'ganis",
			["source"] = "Mal'Ganis",
			["npcID"] = 26533,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 296,
		},
		[24573] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "High Overlord Saurfang",
			["npcID"] = 25730,
		},
		[32886] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Angered Skeleton",
			["npcID"] = 18524,
		},
		[3609] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Blood Steward of Kirtonos",
			["npcID"] = 14861,
		},
		[24829] = {
			["source"] = "Arcanist Ithanas",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 15296,
		},
		[20798] = {
			["isChanneled"] = false,
			["source"] = "Sandfury Shadowcaster",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5648,
		},
		[83672] = {
			["encounterName"] = "Ozumat",
			["source"] = "Ozumat",
			["isChanneled"] = false,
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44566,
		},
		[79833] = {
			["isChanneled"] = false,
			["source"] = "Marl Wormthorn",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42334,
		},
		[33910] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Unyielding Knight",
			["npcID"] = 16906,
		},
		[17151] = {
			["isChanneled"] = false,
			["source"] = "Risen Inquisitor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10426,
		},
		[42740] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dragonflayer Runecaster",
			["npcID"] = 23960,
		},
		[82137] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Rom'ogg Bonecrusher",
			["isChanneled"] = false,
			["encounterID"] = 1040,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39665,
		},
		[82393] = {
			["isChanneled"] = false,
			["source"] = "Ascendant Lord Obsidius",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39705,
		},
		[47731] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["npcID"] = 26929,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 520,
		},
		[52210] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Dragonflayer Flamebinder",
			["npcID"] = 27259,
		},
		[52722] = {
			["encounterName"] = "Mal'ganis",
			["source"] = "Mal'Ganis",
			["npcID"] = 26533,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 296,
		},
		[61168] = {
			["isChanneled"] = false,
			["source"] = "Glimmerdeep Tidehunter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39664,
		},
		[77787] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Gallant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4287,
		},
		[7713] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Undead Postman",
			["npcID"] = 11142,
		},
		[53618] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'ar Guardian",
			["npcID"] = 29216,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 218,
		},
		[22910] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Illyanna Ravenoak",
			["npcID"] = 11488,
		},
		[67294] = {
			["isChanneled"] = false,
			["source"] = "Explosives Stockpile",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 35296,
		},
		[23038] = {
			["isChanneled"] = false,
			["source"] = "Bloodmage Thalnos",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4543,
		},
		[33911] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Stonescythe Alpha",
			["npcID"] = 16929,
		},
		[15744] = {
			["isChanneled"] = false,
			["source"] = "Searing Destroyer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46260,
		},
		[34423] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Murkblood Healer",
			["npcID"] = 17730,
		},
		[31932] = {
			["encounterName"] = "Swamplord Musel'ek",
			["type"] = "DEBUFF",
			["source"] = "Swamplord Musel'ek",
			["npcID"] = 17826,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1947,
		},
		[16000] = {
			["isChanneled"] = false,
			["source"] = "Celebrian Dryad",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11793,
		},
		[74973] = {
			["source"] = "Sister Goldskimmer",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 34692,
		},
		[11969] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Galgann Firehammer",
			["npcID"] = 7291,
		},
		[16128] = {
			["isChanneled"] = false,
			["source"] = "Immol'thar",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11496,
		},
		[52467] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Devouring Ghoul",
			["npcID"] = 28249,
		},
		[52723] = {
			["encounterName"] = "Mal'ganis",
			["source"] = "Mal'Ganis",
			["npcID"] = 26533,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 296,
		},
		[32888] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Raging Soul",
			["npcID"] = 18506,
		},
		[8258] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Quilguard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4436,
		},
		[20735] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Illyanna Ravenoak",
			["npcID"] = 11488,
		},
		[54387] = {
			["isChanneled"] = false,
			["source"] = "Carrion Eater",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28022,
		},
		[50420] = {
			["isChanneled"] = false,
			["source"] = "Stinkbeard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30017,
		},
		[38391] = {
			["isChanneled"] = false,
			["source"] = "Searing Destroyer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46260,
		},
		[12737] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mage Hunter Ascendant",
			["npcID"] = 26727,
		},
		[30205] = {
			["source"] = "Magtheridon",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 21174,
		},
		[8994] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Jandice Barov",
			["npcID"] = 10503,
		},
		[22271] = {
			["isChanneled"] = false,
			["source"] = "Fel Lash",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13197,
		},
		[18368] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Rattlegore",
			["npcID"] = 11622,
		},
		[3827] = {
			["isChanneled"] = false,
			["source"] = "Mosh'Ogg Witch Doctor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1144,
		},
		[83914] = {
			["encounterName"] = "Ozumat",
			["source"] = "Vicious Mindlasher",
			["isChanneled"] = false,
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44715,
		},
		[76234] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Mindbender Ghur'sha",
			["isChanneled"] = false,
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40788,
		},
		[33401] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Phantasmal Possessor",
			["npcID"] = 18503,
		},
		[37624] = {
			["isChanneled"] = false,
			["source"] = "Dreadlord Defiler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41471,
		},
		[76307] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Mindbender Ghur'sha",
			["isChanneled"] = false,
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40788,
		},
		[76171] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["isChanneled"] = false,
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40825,
		},
		[76170] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["isChanneled"] = false,
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40825,
		},
		[8286] = {
			["isChanneled"] = false,
			["source"] = "Aggem Thorncurse",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4424,
		},
		[76512] = {
			["type"] = "DEBUFF",
			["source"] = "Mad Prisoner",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 39985,
		},
		[78986] = {
			["source"] = "Marl Wormthorn",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 42334,
		},
		[22865] = {
			["isChanneled"] = false,
			["source"] = "Gordok Warlock",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11448,
		},
		[50933] = {
			["encounterName"] = "Trollgore",
			["source"] = "Flesheating Ghoul",
			["npcID"] = 27871,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 369,
		},
		[8398] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ras Frostwhisper",
			["npcID"] = 10508,
		},
		[3149] = {
			["isChanneled"] = false,
			["source"] = "Snickerfang Hyena",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5985,
		},
		[17290] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight Worshipper",
			["npcID"] = 30111,
		},
		[31405] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Murkblood Oracle",
			["npcID"] = 17771,
		},
		[76516] = {
			["isChanneled"] = false,
			["source"] = "Gilgoblin Hunter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40935,
		},
		[13953] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anvilrage Marshal",
			["npcID"] = 8898,
		},
		[76363] = {
			["isChanneled"] = false,
			["source"] = "Unstable Corruption",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40923,
		},
		[4962] = {
			["isChanneled"] = false,
			["source"] = "Crypt Beast",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10413,
		},
		[79584] = {
			["isChanneled"] = false,
			["source"] = "Bristleback Interloper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3232,
		},
		[42708] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["npcID"] = 23954,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 575,
		},
		[52341] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lightning Construct",
			["npcID"] = 27972,
		},
		[52469] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Watcher Narjil",
			["npcID"] = 28729,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 216,
		},
		[42772] = {
			["encounterName"] = "Prince Keleseth",
			["source"] = "Dragonflayer Strategist",
			["npcID"] = 23956,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 571,
		},
		[47916] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Abandoned Fuel Tank",
			["npcID"] = 27064,
		},
		[32857] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Auchenai Soulpriest",
			["npcID"] = 18493,
		},
		[57076] = {
			["isChanneled"] = false,
			["source"] = "Yggdras",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30014,
		},
		[39592] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Summoned Searing Totem",
			["npcID"] = 22895,
		},
		[17716] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Risen Bonewarder",
			["npcID"] = 10491,
		},
		[16449] = {
			["isChanneled"] = false,
			["source"] = "Plagued Maggot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10536,
		},
		[75998] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Naz'jar Honor Guard",
			["isChanneled"] = false,
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40633,
		},
		[16577] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Diseased Ghoul",
			["npcID"] = 10495,
		},
		[75907] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Naz'jar Honor Guard",
			["isChanneled"] = false,
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40633,
		},
		[20800] = {
			["isChanneled"] = false,
			["source"] = "Jergosh the Invoker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11518,
		},
		[32173] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Coilfang Enchantress",
			["npcID"] = 17961,
		},
		[76001] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["isChanneled"] = false,
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40586,
		},
		[79884] = {
			["isChanneled"] = false,
			["source"] = "Windfury Sorceress",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 2964,
		},
		[33914] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Unstable Voidwalker",
			["npcID"] = 20145,
		},
		[80780] = {
			["isChanneled"] = false,
			["source"] = "Shrieking Banshee",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10463,
		},
		[75992] = {
			["isChanneled"] = false,
			["source"] = "Naz'jar Tempest Witch",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40634,
		},
		[34298] = {
			["encounterName"] = "Swamplord Musel'ek",
			["source"] = "Claw",
			["npcID"] = 17827,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1947,
		},
		[59085] = {
			["isChanneled"] = false,
			["source"] = "Stormforged Tactician",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28581,
		},
		[32749] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Wizard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4300,
		},
		[76721] = {
			["isChanneled"] = false,
			["source"] = "Naz'jar Sentinel",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40577,
		},
		[74000] = {
			["isChanneled"] = false,
			["source"] = "Trade Prince Gallywix",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39582,
		},
		[21071] = {
			["isChanneled"] = false,
			["source"] = "Primordial Behemoth",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12206,
		},
		[80781] = {
			["isChanneled"] = false,
			["source"] = "Rockwing Screecher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10409,
		},
		[6728] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Dustweaver",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4522,
		},
		[20819] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Sorcerer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4294,
		},
		[81293] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Huntress Davinia",
			["npcID"] = 41864,
		},
		[76813] = {
			["isChanneled"] = false,
			["source"] = "Naz'jar Spiritmender",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41096,
		},
		[67301] = {
			["isChanneled"] = false,
			["source"] = "Talrendis Saboteur",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 35312,
		},
		[76807] = {
			["isChanneled"] = false,
			["source"] = "Naz'jar Invader",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39616,
		},
		[88288] = {
			["encounterName"] = "Helix Gearbreaker",
			["source"] = "Lumbering Oaf",
			["encounterID"] = 1065,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 47297,
		},
		[52470] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Watcher Gashra",
			["npcID"] = 28730,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 216,
		},
		[80610] = {
			["source"] = "Catherine Leland",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 5494,
		},
		[79490] = {
			["isChanneled"] = false,
			["source"] = "Barbfin Skimmer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42341,
		},
		[58510] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Portal Guardian",
			["npcID"] = 30660,
		},
		[52433] = {
			["encounterName"] = "Volkhan",
			["source"] = "Molten Golem",
			["encounterID"] = 557,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28695,
		},
		[85729] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Corn Stalker",
			["npcID"] = 44489,
		},
		[38232] = {
			["isChanneled"] = false,
			["source"] = "Wildhammer Warrior",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42518,
		},
		[22592] = {
			["source"] = "Princess Theradras",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 12201,
		},
		[57589] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30621,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 215,
		},
		[31598] = {
			["isChanneled"] = false,
			["source"] = "Wildspawn Hellcaller",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11457,
		},
		[57984] = {
			["isChanneled"] = false,
			["source"] = "Greater Fire Elemental",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40831,
		},
		[76274] = {
			["encounterName"] = "Ascendant Lord Obsidius",
			["type"] = "BUFF",
			["source"] = "Ascendant Lord Obsidius",
			["encounterID"] = 1036,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 39705,
		},
		[53394] = {
			["encounterName"] = "Hadronox",
			["source"] = "Anub'ar Champion",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29096,
		},
		[15585] = {
			["isChanneled"] = false,
			["source"] = "Anvilrage Medic",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8894,
		},
		[33787] = {
			["encounterName"] = "Mennu the Betrayer",
			["source"] = "Coilfang Collaborator",
			["npcID"] = 17962,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1939,
		},
		[397180] = {
			["encounterName"] = "Chrono-Lord Epoch",
			["source"] = "Chrono-Lord Epoch",
			["npcID"] = 26532,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 295,
		},
		[76185] = {
			["encounterName"] = "Ascendant Lord Obsidius",
			["source"] = "Ascendant Lord Obsidius",
			["isChanneled"] = false,
			["encounterID"] = 1036,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39705,
		},
		[34171] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Underbat",
			["npcID"] = 17724,
		},
		[32859] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Auchenai Soulpriest",
			["npcID"] = 18493,
		},
		[11837] = {
			["isChanneled"] = false,
			["source"] = "Chief Ukorz Sandscalp",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7267,
		},
		[42745] = {
			["isChanneled"] = false,
			["source"] = "Korrak the Bloodrager",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30023,
		},
		[76189] = {
			["encounterName"] = "Ascendant Lord Obsidius",
			["type"] = "DEBUFF",
			["source"] = "Shadow of Obsidius",
			["encounterID"] = 1036,
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 40817,
		},
		[34811] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Darkcrest Taskmaster",
			["npcID"] = 18086,
		},
		[15979] = {
			["isChanneled"] = false,
			["source"] = "Arcane Aberration",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11480,
		},
		[45525] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Warsong Hold Mage",
			["npcID"] = 25420,
		},
		[6984] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Razorfen Beast Trainer",
			["npcID"] = 4531,
		},
		[55798] = {
			["isChanneled"] = false,
			["source"] = "Drakkari God Hunter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29820,
		},
		[32062] = {
			["isChanneled"] = false,
			["source"] = "Antu'sul",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8127,
		},
		[11970] = {
			["isChanneled"] = false,
			["source"] = "Taragaman the Hungerer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11520,
		},
		[18266] = {
			["isChanneled"] = false,
			["source"] = "Searing Blade Cultist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11322,
		},
		[10132] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ancient Stone Keeper",
			["npcID"] = 7206,
		},
		[50195] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Mage Hunter Ascendant",
			["npcID"] = 26727,
		},
		[22818] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Guard Mol'dar",
			["npcID"] = 14326,
		},
		[58511] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Orgrimmar Grunt",
			["npcID"] = 3296,
		},
		[30621] = {
			["isChanneled"] = false,
			["source"] = "Bonechewer Ravener",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17264,
		},
		[10326] = {
			["isChanneled"] = false,
			["source"] = "Argent Crusader",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28029,
		},
		[34267] = {
			["encounterName"] = "Ghaz'an",
			["source"] = "Ghaz'an",
			["npcID"] = 18105,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1945,
		},
		[12258] = {
			["isChanneled"] = false,
			["source"] = "Skeletal Summoner",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7342,
		},
		[6146] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scarlet Sorcerer",
			["npcID"] = 4294,
		},
		[76665] = {
			["encounterName"] = "Beauty",
			["source"] = "Spot",
			["isChanneled"] = false,
			["encounterID"] = 1037,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40011,
		},
		[8259] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Razorfen Spearhide",
			["npcID"] = 4438,
		},
		[66967] = {
			["isChanneled"] = false,
			["source"] = "Talrendis Ancient",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 35198,
		},
		[57846] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Northwatch Encroacher",
			["npcID"] = 41935,
		},
		[3589] = {
			["isChanneled"] = false,
			["source"] = "Shrieking Banshee",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10463,
		},
		[43415] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Skadir Raider",
			["npcID"] = 25522,
		},
		[76717] = {
			["isChanneled"] = false,
			["source"] = "Defiled Earth Rager",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40023,
		},
		[30991] = {
			["isChanneled"] = false,
			["source"] = "Laughing Skull Rogue",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17491,
		},
		[21057] = {
			["isChanneled"] = false,
			["source"] = "Theradrim Guardian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11784,
		},
		[75924] = {
			["isChanneled"] = false,
			["source"] = "Candy Cane",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39426,
		},
		[12642] = {
			["isChanneled"] = false,
			["source"] = "Amnennar the Coldbringer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7358,
		},
		[12674] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Seeth'rel",
			["npcID"] = 9038,
		},
		[72935] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gaahl",
			["npcID"] = 38808,
		},
		[42746] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ahn'kahar Slasher",
			["npcID"] = 30277,
		},
		[52755] = {
			["isChanneled"] = false,
			["source"] = "Hardened Steel Skycaller",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28580,
		},
		[34812] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Darkcrest Taskmaster",
			["npcID"] = 18086,
		},
		[34940] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nexus Stalker",
			["npcID"] = 18314,
		},
		[59638] = {
			["source"] = "Mirror Image",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 31216,
		},
		[23379] = {
			["source"] = "Bael'Gar",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 9016,
		},
		[38618] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Horgrenn Hellcleave",
			["npcID"] = 27718,
		},
		[47737] = {
			["encounterName"] = "Anomalus",
			["source"] = "Chaotic Rift",
			["npcID"] = 26918,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 522,
		},
		[32861] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Auchenai Vindicator",
			["npcID"] = 18495,
		},
		[72343] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Yngwie",
			["npcID"] = 38696,
		},
		[25810] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Venomous Snake",
			["npcID"] = 19833,
		},
		[31983] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Tainted Earthgrab Totem",
			["npcID"] = 18176,
		},
		[47958] = {
			["encounterName"] = "Ormorok the Tree-Shaper",
			["source"] = "Ormorok the Tree-Shaper",
			["npcID"] = 26794,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 524,
		},
		[79892] = {
			["isChanneled"] = false,
			["source"] = "Farseer Lopaa",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 50174,
		},
		[35493] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Boglash",
			["npcID"] = 18281,
		},
		[52628] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Rune Reaver",
			["npcID"] = 26268,
		},
		[15244] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scholomance Adept",
			["npcID"] = 10469,
		},
		[85733] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Thrashing Pumpkin",
			["npcID"] = 44487,
		},
		[76591] = {
			["isChanneled"] = false,
			["source"] = "Twilight Zealot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39990,
		},
		[75543] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Rom'ogg Bonecrusher",
			["isChanneled"] = false,
			["encounterID"] = 1040,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39665,
		},
		[76589] = {
			["isChanneled"] = false,
			["source"] = "Twilight Zealot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39990,
		},
		[16727] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Rattlegore",
			["npcID"] = 11622,
		},
		[16791] = {
			["isChanneled"] = false,
			["source"] = "Magistrate Barthilas",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10435,
		},
		[18968] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Evoker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4289,
		},
		[6754] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Coilfang Slavehandler",
			["npcID"] = 17959,
		},
		[33661] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Drakkari Warrior",
			["npcID"] = 26635,
		},
		[71657] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mechachicken",
			["npcID"] = 38224,
		},
		[46202] = {
			["isChanneled"] = false,
			["source"] = "Venture Co. Worker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 2978,
		},
		[84454] = {
			["isChanneled"] = false,
			["source"] = "Bloodwash Enchantress",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41387,
		},
		[76520] = {
			["isChanneled"] = false,
			["source"] = "Gilgoblin Hunter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40935,
		},
		[79417] = {
			["isChanneled"] = false,
			["source"] = "Spiketooth Eel",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40200,
		},
		[31551] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bogstrok",
			["npcID"] = 17816,
		},
		[31615] = {
			["encounterName"] = "Swamplord Musel'ek",
			["source"] = "Swamplord Musel'ek",
			["npcID"] = 17826,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1947,
		},
		[58514] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Orgrimmar Grunt",
			["npcID"] = 3296,
		},
		[53602] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'ar Darter",
			["npcID"] = 29213,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 218,
		},
		[17207] = {
			["isChanneled"] = false,
			["source"] = "Ashenvale Skirmisher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 33193,
		},
		[7896] = {
			["isChanneled"] = false,
			["source"] = "Wildspawn Betrayer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11454,
		},
		[35197] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Umbrafen Witchdoctor",
			["npcID"] = 20115,
		},
		[76561] = {
			["isChanneled"] = false,
			["source"] = "Evolved Twilight Zealot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39987,
		},
		[54369] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Zuramat the Obliterator",
			["npcID"] = 29314,
		},
		[75571] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Rom'ogg Bonecrusher",
			["isChanneled"] = false,
			["encounterID"] = 1040,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39665,
		},
		[32191] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Coilfang Observer",
			["npcID"] = 17938,
		},
		[13901] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Darkcrest Sorceress",
			["npcID"] = 19947,
		},
		[7992] = {
			["source"] = "Wildspawn Shadowstalker",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 11456,
		},
		[36093] = {
			["encounterName"] = "Trollgore",
			["source"] = "Risen Drakkari Warrior",
			["npcID"] = 26635,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 369,
		},
		[48277] = {
			["encounterName"] = "Svala Sorrowgrave",
			["type"] = "DEBUFF",
			["source"] = "Svala Sorrowgrave",
			["npcID"] = 26668,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 577,
		},
		[16044] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "High Overlord Saurfang",
			["npcID"] = 25730,
		},
		[51612] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dark Rune Scholar",
			["npcID"] = 27964,
		},
		[77721] = {
			["isChanneled"] = false,
			["source"] = "Shadowsworn Adept",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6006,
		},
		[7154] = {
			["isChanneled"] = false,
			["source"] = "Eldreth Spectre",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11473,
		},
		[77977] = {
			["isChanneled"] = false,
			["source"] = "Amnennar the Coldbringer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7358,
		},
		[16172] = {
			["isChanneled"] = false,
			["source"] = "Warpwood Guardian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11461,
		},
		[38557] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "High Road Scout",
			["npcID"] = 37159,
		},
		[22421] = {
			["isChanneled"] = false,
			["source"] = "Hydrospawn",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13280,
		},
		[34719] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Conqueror Krenna",
			["npcID"] = 27727,
		},
		[20802] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Grimtotem Sorcerer",
			["npcID"] = 11913,
		},
		[37629] = {
			["isChanneled"] = false,
			["source"] = "Shahandana",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41165,
		},
		[77978] = {
			["isChanneled"] = false,
			["source"] = "Glutton",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8567,
		},
		[16508] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Horgrenn Hellcleave",
			["npcID"] = 27718,
		},
		[75077] = {
			["type"] = "BUFF",
			["source"] = "Conflagration",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 39994,
		},
		[75842] = {
			["type"] = "BUFF",
			["source"] = "Karsh Steelbender",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 39698,
		},
		[76522] = {
			["isChanneled"] = false,
			["source"] = "Evolved Twilight Zealot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39987,
		},
		[34302] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Unstable Voidwalker",
			["npcID"] = 20145,
		},
		[67534] = {
			["isChanneled"] = false,
			["source"] = "Earthen Ring Shaman",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39411,
		},
		[36383] = {
			["encounterName"] = "Shirrak the Dead Watcher",
			["source"] = "Shirrak the Dead Watcher",
			["npcID"] = 18371,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1890,
		},
		[79379] = {
			["isChanneled"] = false,
			["source"] = "Gilblin Plunderer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41746,
		},
		[60236] = {
			["isChanneled"] = false,
			["source"] = "Storming Vortex",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28547,
		},
		[51322] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Webbed Rabbit",
			["npcID"] = 34866,
		},
		[30917] = {
			["encounterName"] = "Broggok",
			["source"] = "Broggok",
			["encounterID"] = 1924,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17380,
		},
		[52885] = {
			["isChanneled"] = false,
			["source"] = "Titanium Thunderer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28965,
		},
		[29938] = {
			["source"] = "Ancestral Spirit Wolf",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17077,
		},
		[32017] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dust Howler",
			["npcID"] = 17158,
		},
		[73867] = {
			["isChanneled"] = false,
			["source"] = "KTC Oil Bot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39376,
		},
		[52624] = {
			["encounterName"] = "Volkhan",
			["source"] = "Unbound Firestorm",
			["encounterID"] = 557,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28584,
		},
		[50329] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Varidus the Flenser",
			["npcID"] = 25618,
		},
		[34017] = {
			["isChanneled"] = false,
			["source"] = "Shahandana",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41165,
		},
		[36094] = {
			["encounterName"] = "Trollgore",
			["type"] = "DEBUFF",
			["source"] = "Risen Drakkari Warrior",
			["npcID"] = 26635,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 369,
		},
		[17843] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Instructor Malicia",
			["npcID"] = 10505,
		},
		[15234] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Coilfang Enchantress",
			["npcID"] = 17961,
		},
		[15245] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Commander Malor",
			["npcID"] = 11032,
		},
		[3356] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadowforge Geologist",
			["npcID"] = 7030,
		},
		[85737] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Pome Wraith",
			["npcID"] = 44488,
		},
		[22422] = {
			["isChanneled"] = false,
			["source"] = "Massive Geyser",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14122,
		},
		[78622] = {
			["source"] = "Dreadmaul Brute",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 5976,
		},
		[91032] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mine Bunny",
			["npcID"] = 48351,
		},
		[15501] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight's Hammer Ambassador",
			["npcID"] = 8915,
		},
		[78827] = {
			["isChanneled"] = false,
			["source"] = "Magronos the Unyielding",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8297,
		},
		[70893] = {
			["source"] = "Unknown",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 35189,
		},
		[22914] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Illyanna Ravenoak",
			["npcID"] = 11488,
		},
		[15586] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Instructor Malicia",
			["npcID"] = 10505,
		},
		[79851] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Grimtotem Mercenary",
			["npcID"] = 11911,
		},
		[33919] = {
			["encounterName"] = "Tavarok",
			["source"] = "Tavarok",
			["npcID"] = 18343,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1901,
		},
		[31948] = {
			["encounterName"] = "Rokmar the Crackler",
			["source"] = "Rokmar the Crackler",
			["npcID"] = 17991,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1941,
		},
		[76524] = {
			["isChanneled"] = false,
			["source"] = "Evolved Twilight Zealot",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39987,
		},
		[52633] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Infinite Adversary",
			["npcID"] = 27742,
		},
		[54424] = {
			["source"] = "Shaafenn",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 417,
		},
		[90905] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defias Pirate",
			["npcID"] = 48522,
		},
		[41107] = {
			["encounterName"] = "General Bjarngrim",
			["source"] = "General Bjarngrim",
			["encounterID"] = 555,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28586,
		},
		[51799] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dark Rune Scholar",
			["npcID"] = 27964,
		},
		[31808] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Ashyen",
			["npcID"] = 17900,
		},
		[23766] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Sayge",
			["npcID"] = 14822,
		},
		[15970] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nightmare Wyrmkin",
			["npcID"] = 5280,
		},
		[78828] = {
			["isChanneled"] = false,
			["source"] = "Magronos the Unyielding",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8297,
		},
		[32064] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gamon",
			["npcID"] = 6466,
		},
		[11971] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Guard",
			["npcID"] = 10489,
		},
		[32192] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wastewalker Slave",
			["npcID"] = 17963,
		},
		[79852] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Grimtotem Mercenary",
			["npcID"] = 11911,
		},
		[40062] = {
			["isChanneled"] = false,
			["source"] = "Shadowmoon Technician",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17414,
		},
		[17689] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Unstable Corpse",
			["npcID"] = 10480,
		},
		[56698] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ahn'kahar Spell Flinger",
			["npcID"] = 30278,
		},
		[17235] = {
			["isChanneled"] = false,
			["source"] = "Nerub'enkan",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10437,
		},
		[66968] = {
			["isChanneled"] = false,
			["source"] = "Talrendis Ancient",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 35198,
		},
		[7057] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Haunted Servitor",
			["npcID"] = 3875,
		},
		[88348] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Foe Reaper 5000",
			["npcID"] = 43778,
		},
		[48851] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dragonflayer Deathseeker",
			["npcID"] = 26550,
		},
		[49106] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ymirjar Berserker",
			["npcID"] = 26696,
		},
		[90602] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "\"Captain\" Cookie",
			["npcID"] = 47739,
		},
		[8292] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Grimlok",
			["npcID"] = 4854,
		},
		[85278] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spawn of Shadra",
			["npcID"] = 42879,
		},
		[53071] = {
			["isChanneled"] = false,
			["source"] = "Stormforged Giant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28920,
		},
		[81285] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Diseased Ghoul",
			["npcID"] = 10495,
		},
		[45949] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Varidus the Flenser",
			["npcID"] = 25618,
		},
		[79853] = {
			["isChanneled"] = false,
			["source"] = "Commander Arrington",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39141,
		},
		[22743] = {
			["isChanneled"] = false,
			["source"] = "Eldreth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11472,
		},
		[12611] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dread Scryer",
			["npcID"] = 47141,
		},
		[51725] = {
			["isChanneled"] = false,
			["source"] = "Arcane Aberration",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11480,
		},
		[17156] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ferra",
			["npcID"] = 14308,
		},
		[49696] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Drakkari Soulmage",
			["npcID"] = 26636,
		},
		[12739] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scholomance Neophyte",
			["npcID"] = 10470,
		},
		[85740] = {
			["source"] = "Zephyr",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 45991,
		},
		[77806] = {
			["isChanneled"] = false,
			["source"] = "Nightbane Stalker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44087,
		},
		[34944] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Coilfang Scale-Healer",
			["npcID"] = 21126,
		},
		[90603] = {
			["encounterName"] = "\"Captain\" Cookie",
			["source"] = "\"Captain\" Cookie",
			["npcID"] = 47739,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1060,
		},
		[79914] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Grimtotem Ruffian",
			["npcID"] = 11910,
		},
		[54361] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Zuramat the Obliterator",
			["npcID"] = 29314,
		},
		[55931] = {
			["encounterName"] = "Prince Taldaram",
			["source"] = "Prince Taldaram",
			["encounterID"] = 213,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29308,
		},
		[52635] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Infinite Hunter",
			["npcID"] = 28340,
		},
		[79877] = {
			["source"] = "Thornar Thunderclash",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 42610,
		},
		[60181] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Azure Sorcerer",
			["npcID"] = 30667,
		},
		[88300] = {
			["encounterName"] = "Helix Gearbreaker",
			["source"] = "Lumbering Oaf",
			["encounterID"] = 1065,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 47297,
		},
		[93468] = {
			["encounterName"] = "Baron Ashbury",
			["source"] = "Baron Ashbury",
			["npcID"] = 46962,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1069,
		},
		[53068] = {
			["isChanneled"] = false,
			["source"] = "Stormforged Construct",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28835,
		},
		[17434] = {
			["isChanneled"] = false,
			["source"] = "Lord Aurius Rivendare",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45412,
		},
		[54987] = {
			["encounterName"] = "Slad'ran",
			["source"] = "Slad'ran Viper",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29680,
		},
		[93675] = {
			["encounterName"] = "Lord Godfrey",
			["source"] = "Lord Godfrey",
			["npcID"] = 46964,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1072,
		},
		[32019] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Talbuk Stag",
			["npcID"] = 17130,
		},
		[47774] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Alliance Berserker",
			["npcID"] = 26800,
		},
		[18327] = {
			["isChanneled"] = false,
			["source"] = "Baroness Anastari",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10436,
		},
		[90604] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "\"Captain\" Cookie",
			["npcID"] = 47739,
		},
		[86765] = {
			["isChanneled"] = false,
			["source"] = "Slag Fury",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46263,
		},
		[13443] = {
			["isChanneled"] = false,
			["source"] = "Bloodwash Gambler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41404,
		},
		[48094] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Keristrasza",
			["npcID"] = 26723,
		},
		[58508] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Portal Guardian",
			["npcID"] = 30660,
		},
		[45950] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "En'kilah Necrolord",
			["npcID"] = 25730,
		},
		[33793] = {
			["encounterName"] = "Vazruden the Herald",
			["source"] = "Vazruden the Herald",
			["encounterID"] = 1892,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17307,
		},
		[32858] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Auchenai Soulpriest",
			["npcID"] = 18493,
		},
		[58619] = {
			["isChanneled"] = false,
			["source"] = "Titanium Vanguard",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28838,
		},
		[58747] = {
			["source"] = "Felguard Annihilator",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17400,
		},
		[23224] = {
			["encounterName"] = "Baron Silverlaine",
			["source"] = "Baron Silverlaine",
			["npcID"] = 3887,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1070,
		},
		[31553] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bleeding Hollow Tormentor",
			["npcID"] = 19424,
		},
		[43664] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Proto-Drake Handler",
			["npcID"] = 24082,
		},
		[15470] = {
			["isChanneled"] = false,
			["source"] = "Anub'shiah",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 9031,
		},
		[77808] = {
			["isChanneled"] = false,
			["source"] = "Houndmaster Loksey",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3974,
		},
		[34945] = {
			["encounterName"] = "Tavarok",
			["source"] = "Ethereal Priest",
			["npcID"] = 18317,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1901,
		},
		[90605] = {
			["encounterName"] = "\"Captain\" Cookie",
			["source"] = "\"Captain\" Cookie",
			["npcID"] = 47739,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1060,
		},
		[21049] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Alliance Berserker",
			["npcID"] = 26800,
		},
		[40291] = {
			["encounterName"] = "Herald Volazj",
			["type"] = "BUFF",
			["source"] = "Twisted Visage",
			["npcID"] = 30624,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 215,
		},
		[32065] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bog Giant",
			["npcID"] = 17723,
		},
		[16790] = {
			["isChanneled"] = false,
			["source"] = "Theradrim Guardian",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11784,
		},
		[32193] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Coilfang Enchantress",
			["npcID"] = 17961,
		},
		[25778] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Underbog Lord",
			["npcID"] = 17734,
		},
		[75945] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Malmo",
			["npcID"] = 38809,
		},
		[50655] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Beryl Mage Hunter",
			["npcID"] = 25585,
		},
		[109977] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Mola",
			["npcID"] = 54601,
		},
		[8041] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Druid of the Fang",
			["npcID"] = 3840,
		},
		[93857] = {
			["encounterName"] = "Baron Silverlaine",
			["source"] = "Baron Silverlaine",
			["npcID"] = 3887,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1070,
		},
		[48894] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Drakkari Shaman",
			["npcID"] = 26639,
		},
		[52703] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lightning Sentry",
			["npcID"] = 26407,
		},
		[12160] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Grimtotem Sorcerer",
			["npcID"] = 11913,
		},
		[52766] = {
			["encounterName"] = "Chrono-Lord Epoch",
			["source"] = "Chrono-Lord Epoch",
			["npcID"] = 26532,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 295,
		},
		[45908] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Varidus the Flenser",
			["npcID"] = 25618,
		},
		[22713] = {
			["isChanneled"] = false,
			["source"] = "Pimgib",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14349,
		},
		[20823] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Conjuror",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4297,
		},
		[2602] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Earthen Sculptor",
			["npcID"] = 7012,
		},
		[2610] = {
			["isChanneled"] = false,
			["source"] = "Nezzliok the Dire",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 1062,
		},
		[6434] = {
			["isChanneled"] = false,
			["source"] = "Laughing Skull Rogue",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17491,
		},
		[19643] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gamel the Cruel",
			["npcID"] = 26449,
		},
		[50302] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Crystalline Protector",
			["npcID"] = 26792,
		},
		[54525] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Zuramat the Obliterator",
			["npcID"] = 29314,
		},
		[90932] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defias Blood Wizard",
			["npcID"] = 48417,
		},
		[3242] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Unstable Ravager",
			["npcID"] = 47136,
		},
		[75054] = {
			["type"] = "BUFF",
			["source"] = "Shadow of Obsidius",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 40817,
		},
		[63227] = {
			["isChanneled"] = false,
			["source"] = "Ongo'longo",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42815,
		},
		[15039] = {
			["isChanneled"] = false,
			["source"] = "Twilight Elementalist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4814,
		},
		[25603] = {
			["isChanneled"] = false,
			["source"] = "Twilight Loreseeker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4812,
		},
		[33641] = {
			["isChanneled"] = false,
			["source"] = "Justinius the Harbinger",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18966,
		},
		[53406] = {
			["encounterName"] = "Hadronox",
			["source"] = "Hadronox",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28921,
		},
		[78578] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Illyanna Ravenoak",
			["npcID"] = 11488,
		},
		[87081] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Spitebone Guardian",
			["npcID"] = 47145,
		},
		[47743] = {
			["encounterName"] = "Anomalus",
			["source"] = "Anomalus",
			["npcID"] = 26763,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 522,
		},
		[15043] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scholomance Adept",
			["npcID"] = 10469,
		},
		[39207] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bound Water Elemental",
			["npcID"] = 30419,
		},
		[79858] = {
			["isChanneled"] = false,
			["source"] = "Dreadmaul Ogre Mage",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5975,
		},
		[22714] = {
			["isChanneled"] = false,
			["source"] = "Hydrospawn",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13280,
		},
		[84465] = {
			["isChanneled"] = false,
			["source"] = "Bloodwash Acolyte",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41423,
		},
		[15471] = {
			["isChanneled"] = false,
			["source"] = "Crypt Crawler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10412,
		},
		[48639] = {
			["encounterName"] = "Skadi the Ruthless",
			["source"] = "Ymirjar Warrior",
			["npcID"] = 26690,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 581,
		},
		[93423] = {
			["encounterName"] = "Baron Ashbury",
			["source"] = "Baron Ashbury",
			["npcID"] = 46962,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1069,
		},
		[48895] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Drakkari Shaman",
			["npcID"] = 26639,
		},
		[11921] = {
			["isChanneled"] = false,
			["source"] = "Hellfire Familiar",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 19016,
		},
		[39591] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Teloch",
			["npcID"] = 38810,
		},
		[18501] = {
			["isChanneled"] = false,
			["source"] = "Bonechewer Ripper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17281,
		},
		[22660] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Alzzin the Wildshaper",
			["npcID"] = 11492,
		},
		[57725] = {
			["encounterName"] = "Salram the Fleshcrafter",
			["source"] = "Salramm the Fleshcrafter",
			["npcID"] = 26530,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 294,
		},
		[58270] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Unbound Corrupter",
			["npcID"] = 30868,
		},
		[11428] = {
			["isChanneled"] = false,
			["source"] = "Warpwood Treant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11462,
		},
		[7159] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Stalker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6035,
		},
		[15587] = {
			["isChanneled"] = false,
			["source"] = "Magister Kalendris",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11487,
		},
		[79859] = {
			["isChanneled"] = false,
			["source"] = "Dreadmaul Ogre Mage",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5975,
		},
		[50303] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Unliving Swine",
			["npcID"] = 25600,
		},
		[15791] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Darkmaster Gandling",
			["npcID"] = 1853,
		},
		[47780] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Steward",
			["npcID"] = 26729,
		},
		[12097] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nightmare Wanderer",
			["npcID"] = 5283,
		},
		[31554] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Coilfang Defender",
			["npcID"] = 17958,
		},
		[56736] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bonegrinder",
			["npcID"] = 30284,
		},
		[52770] = {
			["encounterName"] = "Ionar",
			["source"] = "Ionar",
			["encounterID"] = 559,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28546,
		},
		[32202] = {
			["isChanneled"] = false,
			["source"] = "Seductress",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17399,
		},
		[57825] = {
			["isChanneled"] = false,
			["source"] = "Eldreth Apparition",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11471,
		},
		[8435] = {
			["isChanneled"] = false,
			["source"] = "Lady Sarevess",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4831,
		},
		[11876] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Grundig Darkcloud",
			["npcID"] = 11858,
		},
		[85280] = {
			["isChanneled"] = false,
			["source"] = "Umboda Three-Heads",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42724,
		},
		[43649] = {
			["encounterName"] = "Skarvold & Dalronn",
			["source"] = "Dalronn the Controller",
			["npcID"] = 24201,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 573,
		},
		[11972] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Shadowforge Archaeologist",
			["npcID"] = 4849,
		},
		[52643] = {
			["source"] = "Hardened Steel Reaver",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 28578,
		},
		[52223] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dragonflayer Huscarl",
			["npcID"] = 27260,
		},
		[48256] = {
			["encounterName"] = "Gortok Palehoof",
			["source"] = "Gortok Palehoof",
			["npcID"] = 26687,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 579,
		},
		[91053] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ogre Bodyguard",
			["npcID"] = 48262,
		},
		[56702] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ahn'kahar Spell Flinger",
			["npcID"] = 30278,
		},
		[48640] = {
			["encounterName"] = "Skadi the Ruthless",
			["source"] = "Ymirjar Warrior",
			["npcID"] = 26690,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 581,
		},
		[81140] = {
			["isChanneled"] = false,
			["source"] = "Dreadmaul Ambusher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41136,
		},
		[18649] = {
			["isChanneled"] = false,
			["source"] = "Wildspawn Betrayer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11454,
		},
		[17470] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Timmy the Cruel",
			["npcID"] = 10808,
		},
		[90098] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Oaf Lackey",
			["npcID"] = 48445,
		},
		[15785] = {
			["isChanneled"] = false,
			["source"] = "Death's Head Acolyte",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4515,
		},
		[19645] = {
			["isChanneled"] = false,
			["source"] = "Wailing Banshee",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10464,
		},
		[86771] = {
			["isChanneled"] = false,
			["source"] = "Rumbling Earth",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 46262,
		},
		[12420] = {
			["isChanneled"] = false,
			["source"] = "Death's Head Necromancer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7337,
		},
		[20805] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lord Pythas",
			["npcID"] = 3670,
		},
		[83508] = {
			["isChanneled"] = false,
			["source"] = "Deathwing",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44744,
		},
		[16838] = {
			["isChanneled"] = false,
			["source"] = "Eldreth Spirit",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11472,
		},
		[12548] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gaahl",
			["npcID"] = 38808,
		},
		[32023] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Brokentoe",
			["npcID"] = 18398,
		},
		[6307] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Garqua",
			["npcID"] = 416,
		},
		[55970] = {
			["encounterName"] = "Prince Taldaram",
			["type"] = "BUFF",
			["source"] = "Prince Taldaram",
			["npcID"] = 29308,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 213,
		},
		[76790] = {
			["isChanneled"] = false,
			["source"] = "Naz'jar Invader",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39616,
		},
		[52772] = {
			["encounterName"] = "Chrono-Lord Epoch",
			["source"] = "Chrono-Lord Epoch",
			["npcID"] = 26532,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 295,
		},
		[3826] = {
			["source"] = "Ward of Laze",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 2667,
		},
		[81653] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bristleback Invader",
			["npcID"] = 36943,
		},
		[90099] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Defias Watcher",
			["npcID"] = 47404,
		},
		[79413] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Gilblin Collector",
			["npcID"] = 41017,
		},
		[75447] = {
			["source"] = "Wolf",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 17280,
		},
		[13730] = {
			["isChanneled"] = false,
			["source"] = "Honor's Stand Footman",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 37161,
		},
		[3234] = {
			["isChanneled"] = false,
			["source"] = "Mossflayer Zombie",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11290,
		},
		[43650] = {
			["encounterName"] = "Skarvold & Dalronn",
			["source"] = "Dalronn the Controller",
			["npcID"] = 24201,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 573,
		},
		[60158] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Azure Raider",
			["npcID"] = 30668,
		},
		[15472] = {
			["isChanneled"] = false,
			["source"] = "Anub'shiah",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 9031,
		},
		[22766] = {
			["source"] = "Wildspawn Shadowstalker",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 11456,
		},
		[52352] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Devouring Ghoul",
			["npcID"] = 28249,
		},
		[84469] = {
			["isChanneled"] = false,
			["source"] = "Corrupted Darkwood Treant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45119,
		},
		[76535] = {
			["isChanneled"] = false,
			["source"] = "Gilgoblin Aquamage",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40943,
		},
		[11442] = {
			["source"] = "Withered Quilguard",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 7329,
		},
		[28747] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mogor",
			["npcID"] = 18069,
		},
		[22574] = {
			["isChanneled"] = false,
			["source"] = "Gordok Captain",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11445,
		},
		[30659] = {
			["isChanneled"] = false,
			["source"] = "Bleeding Hollow Scryer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17478,
		},
		[17279] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Willey Hopebreaker",
			["npcID"] = 10997,
		},
		[87859] = {
			["encounterName"] = "Glubtok",
			["source"] = "Glubtok",
			["npcID"] = 47162,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1064,
		},
		[30851] = {
			["isChanneled"] = false,
			["source"] = "Shadowmoon Summoner",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17395,
		},
		[49537] = {
			["encounterName"] = "The Prophet Tharon'ja",
			["source"] = "The Prophet Tharon'ja",
			["npcID"] = 26632,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 375,
		},
		[13444] = {
			["isChanneled"] = false,
			["source"] = "Skeletal Highborne",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11476,
		},
		[17439] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scholomance Necrolyte",
			["npcID"] = 10476,
		},
		[22917] = {
			["isChanneled"] = false,
			["source"] = "Magister Kalendris",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11487,
		},
		[79607] = {
			["isChanneled"] = false,
			["source"] = "Venomtail Scorpid",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3127,
		},
		[79863] = {
			["isChanneled"] = false,
			["source"] = "Alexi Silenthowl",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39143,
		},
		[33925] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nexus Stalker",
			["npcID"] = 18314,
		},
		[60067] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Alliance Commander",
			["npcID"] = 27949,
		},
		[9573] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hurley Blackbreath",
			["npcID"] = 9537,
		},
		[50689] = {
			["isChanneled"] = false,
			["source"] = "Vladof the Butcher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30022,
		},
		[17695] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Marduk Blackpool",
			["npcID"] = 10433,
		},
		[55040] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mage Hunter Ascendant",
			["npcID"] = 26727,
		},
		[81655] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bristleback Gun Thief",
			["npcID"] = 36708,
		},
		[47784] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mage Hunter Ascendant",
			["npcID"] = 26727,
		},
		[13860] = {
			["isChanneled"] = false,
			["source"] = "Dreadlord Defiler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41471,
		},
		[54309] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anub'ar Prime Guard",
			["npcID"] = 29128,
		},
		[32197] = {
			["isChanneled"] = false,
			["source"] = "Shadowmoon Warlock",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17371,
		},
		[32003] = {
			["isChanneled"] = false,
			["source"] = "Gan'arg Servant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 16947,
		},
		[43651] = {
			["encounterName"] = "Skarvold & Dalronn",
			["source"] = "Skarvald the Constructor",
			["npcID"] = 24200,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 573,
		},
		[14145] = {
			["isChanneled"] = false,
			["source"] = "Gordok Mage-Lord",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11444,
		},
		[52097] = {
			["source"] = "General Bjarngrim",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 28586,
		},
		[79864] = {
			["isChanneled"] = false,
			["source"] = "Alexi Silenthowl",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39143,
		},
		[48258] = {
			["encounterName"] = "Svala Sorrowgrave",
			["source"] = "Svala Sorrowgrave",
			["npcID"] = 26668,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 577,
		},
		[50535] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Warbringer Goredrak",
			["npcID"] = 25712,
		},
		[52710] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Rune-Smith Durar",
			["npcID"] = 26409,
		},
		[16448] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Plagued Rat",
			["npcID"] = 10441,
		},
		[30937] = {
			["isChanneled"] = false,
			["source"] = "Shadowmoon Channeler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17653,
		},
		[93685] = {
			["encounterName"] = "Commander Springvale",
			["source"] = "Commander Springvale",
			["npcID"] = 4278,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1071,
		},
		[49026] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodthirsty Tundra Wolf",
			["npcID"] = 26672,
		},
		[49704] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Darkweb Recluse",
			["npcID"] = 26625,
		},
		[10277] = {
			["isChanneled"] = false,
			["source"] = "Murkgill Hunter",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4458,
		},
		[16867] = {
			["isChanneled"] = false,
			["source"] = "Baroness Anastari",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10436,
		},
		[39215] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Erekem Guard",
			["npcID"] = 29395,
		},
		[78841] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Huntress Davinia",
			["npcID"] = 41864,
		},
		[75002] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Prairie Stalker",
			["npcID"] = 2959,
		},
		[49922] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Kvaldir Mist Lord",
			["npcID"] = 25496,
		},
		[30938] = {
			["encounterName"] = "Keli'dan the Breaker",
			["source"] = "Keli'dan the Breaker",
			["encounterID"] = 1923,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17377,
		},
		[41988] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Instructor Malicia",
			["npcID"] = 10505,
		},
		[76026] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["isChanneled"] = false,
			["encounterID"] = 1044,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40765,
		},
		[84472] = {
			["isChanneled"] = false,
			["source"] = "Felspore Bog Lord",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 45125,
		},
		[31290] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Riverpaw Poacher",
			["npcID"] = 46250,
		},
		[86180] = {
			["isChanneled"] = false,
			["source"] = "Cult-Sworn Pugilist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44444,
		},
		[8788] = {
			["isChanneled"] = false,
			["source"] = "Bloodscalp Shaman",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 697,
		},
		[93686] = {
			["encounterName"] = "Commander Springvale",
			["type"] = "BUFF",
			["source"] = "Commander Springvale",
			["npcID"] = 4278,
			["event"] = "SPELL_AURA_APPLIED",
			["encounterID"] = 1071,
		},
		[29882] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Crazed Mana-Surge",
			["npcID"] = 26737,
		},
		[33393] = {
			["isChanneled"] = false,
			["source"] = "Pit Commander",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18945,
		},
		[21390] = {
			["isChanneled"] = false,
			["source"] = "Lord Vyletongue",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12236,
		},
		[18975] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mogor",
			["npcID"] = 18069,
		},
		[16033] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mogor",
			["npcID"] = 18069,
		},
		[78842] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodtooth Guard",
			["npcID"] = 3932,
		},
		[47747] = {
			["encounterName"] = "Anomalus",
			["source"] = "Anomalus",
			["npcID"] = 26763,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 522,
		},
		[18144] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Kirtonos the Herald",
			["npcID"] = 10506,
		},
		[52098] = {
			["isChanneled"] = false,
			["source"] = "General Bjarngrim",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28586,
		},
		[79866] = {
			["isChanneled"] = false,
			["source"] = "Alexi Silenthowl",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39143,
		},
		[42669] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["npcID"] = 23954,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 575,
		},
		[34933] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mana Leech",
			["npcID"] = 19306,
		},
		[16609] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Thrall",
			["npcID"] = 4949,
		},
		[55077] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Savage Worg",
			["npcID"] = 29735,
		},
		[36486] = {
			["isChanneled"] = false,
			["source"] = "Mo'arg Forgefiend",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 16946,
		},
		[93687] = {
			["encounterName"] = "Commander Springvale",
			["source"] = "Commander Springvale",
			["npcID"] = 4278,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1071,
		},
		[59110] = {
			["isChanneled"] = false,
			["source"] = "Dappled Stag",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 31236,
		},
		[37361] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Skeletal Guardian",
			["npcID"] = 10390,
		},
		[18503] = {
			["isChanneled"] = false,
			["source"] = "Vilebranch Witch Doctor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 2640,
		},
		[22662] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Alzzin the Wildshaper",
			["npcID"] = 11492,
		},
		[30916] = {
			["encounterName"] = "Broggok",
			["source"] = "Broggok",
			["npcID"] = 17380,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1924,
		},
		[14032] = {
			["isChanneled"] = false,
			["source"] = "Interrogator Vishas",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3983,
		},
		[32154] = {
			["encounterName"] = "Watchkeeper Gargolmar",
			["source"] = "Watchkeeper Gargolmar",
			["encounterID"] = 1893,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17306,
		},
		[50155] = {
			["encounterName"] = "Keristrasza",
			["source"] = "Keristrasza",
			["npcID"] = 26723,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 526,
		},
		[15588] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Warrior",
			["npcID"] = 10486,
		},
		[15620] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Baelog",
			["npcID"] = 6906,
		},
		[76028] = {
			["encounterName"] = "Beauty",
			["source"] = "Beauty",
			["isChanneled"] = false,
			["encounterID"] = 1037,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39700,
		},
		[22911] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ferra",
			["npcID"] = 14308,
		},
		[15716] = {
			["isChanneled"] = false,
			["source"] = "Gordok Brute",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11441,
		},
		[12531] = {
			["source"] = "Frozen Soul",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 7352,
		},
		[57770] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["encounterID"] = 215,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30625,
		},
		[76484] = {
			["isChanneled"] = false,
			["source"] = "Twilight Torturer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39978,
		},
		[12675] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Seeth'rel",
			["npcID"] = 9038,
		},
		[61353] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Garl Grimgrizzle",
			["npcID"] = 32710,
		},
		[33423] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mag'har Pitfighter",
			["npcID"] = 19140,
		},
		[81654] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bristleback Gun Thief",
			["npcID"] = 36708,
		},
		[51587] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dragonflayer Spiritualist",
			["npcID"] = 28410,
		},
		[47727] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["npcID"] = 26930,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 520,
		},
		[47748] = {
			["encounterName"] = "Anomalus",
			["source"] = "Anomalus",
			["npcID"] = 26763,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 522,
		},
		[79356] = {
			["isChanneled"] = false,
			["source"] = "Slitherfin Eel",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 40855,
		},
		[16100] = {
			["isChanneled"] = false,
			["source"] = "Wildspawn Betrayer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11454,
		},
		[48132] = {
			["encounterName"] = "Gortok Palehoof",
			["source"] = "Massive Jormungar",
			["npcID"] = 26685,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 579,
		},
		[48260] = {
			["encounterName"] = "Gortok Palehoof",
			["source"] = "Gortok Palehoof",
			["npcID"] = 26687,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 579,
		},
		[15618] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Stratholme Courier",
			["npcID"] = 11082,
		},
		[52611] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Master Necromancer",
			["npcID"] = 27732,
		},
		[55598] = {
			["isChanneled"] = false,
			["source"] = "Drakkari Medicine Man",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29826,
		},
		[20295] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lady Anacondra",
			["npcID"] = 3671,
		},
		[16324] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ravaged Cadaver",
			["npcID"] = 10381,
		},
		[44977] = {
			["isChanneled"] = false,
			["source"] = "Dreadmaul Warlock",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5978,
		},
		[31900] = {
			["isChanneled"] = false,
			["source"] = "Nascent Fel Orc",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17398,
		},
		[11892] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Grimlok",
			["npcID"] = 4854,
		},
		[20615] = {
			["source"] = "Green Warrior",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 32321,
		},
		[16098] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Jandice Barov",
			["npcID"] = 10503,
		},
		[49668] = {
			["encounterName"] = "Novos the Summoner",
			["source"] = "Crystal Handler",
			["npcID"] = 26627,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 371,
		},
		[86820] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Riverpaw Looter",
			["npcID"] = 46251,
		},
		[22860] = {
			["isChanneled"] = false,
			["source"] = "Captain Kromcrush",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14325,
		},
		[45957] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Alliance Deserter",
			["npcID"] = 25761,
		},
		[8147] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lord Pythas",
			["npcID"] = 3670,
		},
		[76030] = {
			["encounterName"] = "Beauty",
			["source"] = "Beauty",
			["isChanneled"] = false,
			["encounterID"] = 1037,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39700,
		},
		[47751] = {
			["encounterName"] = "Anomalus",
			["source"] = "Anomalus",
			["npcID"] = 26763,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 522,
		},
		[13281] = {
			["isChanneled"] = false,
			["source"] = "Razorfen Groundshaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4523,
		},
		[8262] = {
			["isChanneled"] = false,
			["source"] = "Death's Head Sage",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4518,
		},
		[3148] = {
			["isChanneled"] = false,
			["source"] = "Shadowsworn Thug",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6005,
		},
		[32910] = {
			["source"] = "Hardened Steel Berserker",
			["type"] = "BUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 28579,
		},
		[90309] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Devilsaur",
			["npcID"] = 6499,
		},
		[77558] = {
			["isChanneled"] = false,
			["source"] = "Grimtotem Defender",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 37178,
		},
		[3427] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Infected Mossflayer",
			["npcID"] = 12261,
		},
		[38556] = {
			["isChanneled"] = false,
			["source"] = "Spitelash Battlemaster",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7885,
		},
		[15619] = {
			["isChanneled"] = false,
			["source"] = "Doomforge Craftsman",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 8897,
		},
		[7074] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Wailing Guardsman",
			["npcID"] = 3877,
		},
		[77645] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Demon Portal Guardian",
			["npcID"] = 11937,
		},
		[51972] = {
			["encounterName"] = "Ormorok the Tree-Shaper",
			["source"] = "Crystalline Tender",
			["npcID"] = 28231,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 524,
		},
		[15123] = {
			["isChanneled"] = false,
			["source"] = "Scarshield Spellbinder",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 9098,
		},
		[75775] = {
			["isChanneled"] = false,
			["source"] = "Frankie Gearslipper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 34876,
		},
		[76031] = {
			["encounterName"] = "Beauty",
			["source"] = "Beauty",
			["isChanneled"] = false,
			["encounterID"] = 1037,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39700,
		},
		[80382] = {
			["isChanneled"] = false,
			["source"] = "Nethergarde Miner",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5996,
		},
		[56707] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Plague Walker",
			["npcID"] = 30283,
		},
		[52740] = {
			["encounterName"] = "General Bjarngrim",
			["source"] = "Hardened Steel Berserker",
			["encounterID"] = 555,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28579,
		},
		[93435] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Unknown",
			["npcID"] = 33127,
		},
		[3583] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Stonevault Cave Lurker",
			["npcID"] = 4850,
		},
		[35918] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Amberpine Scout",
			["npcID"] = 27117,
		},
		[36872] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Coilfang Tempest",
			["npcID"] = 21127,
		},
		[30846] = {
			["isChanneled"] = false,
			["source"] = "Shadowmoon Technician",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17414,
		},
		[30853] = {
			["isChanneled"] = false,
			["source"] = "Shadowmoon Summoner",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17395,
		},
		[57731] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hadronox",
			["npcID"] = 28921,
		},
		[13445] = {
			["isChanneled"] = false,
			["source"] = "Gordok Mastiff",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13036,
		},
		[33417] = {
			["isChanneled"] = false,
			["source"] = "Stormwind Mage",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 18949,
		},
		[22919] = {
			["isChanneled"] = false,
			["source"] = "Magister Kalendris",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11487,
		},
		[55663] = {
			["isChanneled"] = false,
			["source"] = "Drakkari Rhino",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29931,
		},
		[79871] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Grimtotem Brute",
			["npcID"] = 11912,
		},
		[76032] = {
			["encounterName"] = "Beauty",
			["source"] = "Beauty",
			["isChanneled"] = false,
			["encounterID"] = 1037,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39700,
		},
		[11445] = {
			["isChanneled"] = false,
			["source"] = "Death's Head Necromancer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 7337,
		},
		[31429] = {
			["encounterName"] = "Swamplord Musel'ek",
			["source"] = "Claw",
			["npcID"] = 17827,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1947,
		},
		[15667] = {
			["isChanneled"] = false,
			["source"] = "Wildspawn Rogue",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11452,
		},
		[63148] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Commander Mograine",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 3976,
		},
		[30849] = {
			["isChanneled"] = false,
			["source"] = "Felhound Manastalker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17401,
		},
		[77568] = {
			["isChanneled"] = false,
			["source"] = "Mad Prisoner",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39985,
		},
		[46150] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bound Air Elemental",
			["npcID"] = 30418,
		},
		[15531] = {
			["isChanneled"] = false,
			["source"] = "Cho'Rush the Observer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14324,
		},
		[60211] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dragonflayer Forge Master",
			["npcID"] = 24079,
		},
		[21987] = {
			["isChanneled"] = false,
			["source"] = "Whip Lasher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13022,
		},
		[7068] = {
			["isChanneled"] = false,
			["source"] = "Anguished Dead",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6426,
		},
		[51507] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dark Rune Controller",
			["npcID"] = 27966,
		},
		[81361] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Boulderslide Stonepounder",
			["npcID"] = 11918,
		},
		[79616] = {
			["isChanneled"] = false,
			["source"] = "Felhound",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 6010,
		},
		[25058] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Chaplain",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4299,
		},
		[76500] = {
			["isChanneled"] = false,
			["source"] = "Twilight Sadist",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 39980,
		},
		[56580] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Deep Crawler",
			["npcID"] = 30279,
		},
		[55937] = {
			["isChanneled"] = false,
			["source"] = "Orinoko Tuskbreaker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30020,
		},
		[55218] = {
			["encounterName"] = "Gal'darah",
			["source"] = "Gal'darah",
			["encounterID"] = 390,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29306,
		},
		[20296] = {
			["isChanneled"] = false,
			["source"] = "Scarlet Evoker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4289,
		},
		[22661] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Alzzin the Wildshaper",
			["npcID"] = 11492,
		},
		[10966] = {
			["isChanneled"] = false,
			["source"] = "Noxxion",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13282,
		},
		[52660] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Infinite Agent",
			["npcID"] = 27744,
		},
		[52540] = {
			["encounterName"] = "Hadronox",
			["source"] = "Anub'ar Skirmisher",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28734,
		},
		[11430] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Conqueror Krenna",
			["npcID"] = 27727,
		},
		[15572] = {
			["isChanneled"] = false,
			["source"] = "Quilguard Champion",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4623,
		},
		[5781] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Prairie Wolf",
			["npcID"] = 2958,
		},
		[19366] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Core Hound",
			["npcID"] = 11673,
		},
		[34942] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ethereal Darkcaster",
			["npcID"] = 18331,
		},
		[7964] = {
			["isChanneled"] = false,
			["source"] = "Lord Vyletongue",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12236,
		},
		[50182] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mage Hunter Ascendant",
			["npcID"] = 26727,
		},
		[32000] = {
			["isChanneled"] = false,
			["source"] = "Subjugator Shi'aziv",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 19282,
		},
		[38153] = {
			["encounterName"] = "Quagmirran",
			["source"] = "Quagmirran",
			["npcID"] = 17942,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1940,
		},
		[51842] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Unrelenting Construct",
			["npcID"] = 27971,
		},
		[52086] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Watcher Narjil",
			["npcID"] = 28729,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 216,
		},
		[45517] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Warsong Hold Warrior",
			["npcID"] = 25414,
		},
		[16244] = {
			["isChanneled"] = false,
			["source"] = "Bonechewer Hungerer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17259,
		},
		[17353] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Rifleman",
			["npcID"] = 11054,
		},
		[50169] = {
			["isChanneled"] = false,
			["source"] = "Whisker",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 30113,
		},
		[12470] = {
			["isChanneled"] = false,
			["source"] = "Bloodmage Thalnos",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4543,
		},
		[32736] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Grimtotem Brute",
			["npcID"] = 11912,
		},
		[10854] = {
			["isChanneled"] = false,
			["source"] = "Razelikh the Defiler",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41280,
		},
		[30913] = {
			["encounterName"] = "Broggok",
			["source"] = "Broggok",
			["encounterID"] = 1924,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 17380,
		},
		[21832] = {
			["isChanneled"] = false,
			["source"] = "Princess Theradras",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12201,
		},
		[35594] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Rajis Fyashe",
			["npcID"] = 18044,
		},
		[35839] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Auchenai Necromancer",
			["npcID"] = 18702,
		},
		[21062] = {
			["source"] = "Putridus Satyr",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 11790,
		},
		[55163] = {
			["isChanneled"] = false,
			["source"] = "Moorabi",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29305,
		},
		[56581] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Deep Crawler",
			["npcID"] = 30279,
		},
		[56709] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Plague Walker",
			["npcID"] = 30283,
		},
		[81754] = {
			["isChanneled"] = false,
			["source"] = "Venture Co. Supervisor",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 2979,
		},
		[33675] = {
			["isChanneled"] = false,
			["source"] = "Dread Tactician",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 16959,
		},
		[34881] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Murkblood Oracle",
			["npcID"] = 17771,
		},
		[50361] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Frigid Ghoul",
			["npcID"] = 27534,
		},
		[17165] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scholomance Acolyte",
			["npcID"] = 10471,
		},
		[41097] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "High Overlord Saurfang",
			["npcID"] = 25730,
		},
		[48698] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dragonflayer Seer",
			["npcID"] = 26554,
		},
		[75361] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Pirate Party Crasher",
			["npcID"] = 35200,
		},
		[15493] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Anvilrage Marshal",
			["npcID"] = 8898,
		},
		[22856] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "BUFF",
			["source"] = "Guard Slip'kik",
			["npcID"] = 14323,
		},
		[22920] = {
			["isChanneled"] = false,
			["source"] = "Prince Tortheldrin",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11486,
		},
		[15589] = {
			["isChanneled"] = false,
			["source"] = "Prince Tortheldrin",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11486,
		},
		[15621] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Warbringer Construct",
			["npcID"] = 8905,
		},
		[15653] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nightmare Wyrmkin",
			["npcID"] = 5280,
		},
		[30914] = {
			["encounterName"] = "Broggok",
			["source"] = "Broggok Poison Cloud",
			["npcID"] = 17662,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1924,
		},
		[21067] = {
			["isChanneled"] = false,
			["source"] = "Poison Sprite",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 12216,
		},
		[15749] = {
			["isChanneled"] = false,
			["source"] = "Guard Fengus",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14321,
		},
		[13446] = {
			["isChanneled"] = false,
			["source"] = "Deeprot Stomper",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 13141,
		},
		[11431] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lord Pythas",
			["npcID"] = 3670,
		},
		[34114] = {
			["isChanneled"] = false,
			["source"] = "Bonechewer Mutant",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 16876,
		},
		[34827] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Bloodscale Wavecaller",
			["npcID"] = 20089,
		},
		[53177] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Hadronox",
			["npcID"] = 28921,
		},
		[57655] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30622,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 215,
		},
		[12039] = {
			["isChanneled"] = false,
			["source"] = "Death's Head Priest",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4517,
		},
		[16005] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Coilfang Technician",
			["npcID"] = 17940,
		},
		[32322] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Skra'gath",
			["npcID"] = 18401,
		},
		[11974] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Vile'rel",
			["npcID"] = 9036,
		},
		[49084] = {
			["encounterName"] = "Skadi the Ruthless",
			["source"] = "Ymirjar Witch Doctor",
			["npcID"] = 26691,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 581,
		},
		[83971] = {
			["source"] = "Blight Beast",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 44841,
		},
		[16458] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Plague Ghoul",
			["npcID"] = 42975,
		},
		[81772] = {
			["isChanneled"] = false,
			["source"] = "Venture Co. Laborer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 2976,
		},
		[56710] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Plague Walker",
			["npcID"] = 30283,
		},
		[3490] = {
			["isChanneled"] = false,
			["source"] = "Aku'mai",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4829,
		},
		[31427] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Underbog Shambler",
			["npcID"] = 17871,
		},
		[93697] = {
			["encounterName"] = "Lord Walden",
			["source"] = "Lord Walden",
			["npcID"] = 46963,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1073,
		},
		[17162] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Conjuror",
			["npcID"] = 10419,
		},
		[32323] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Warmaul Champion",
			["npcID"] = 18402,
		},
		[41098] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "High Overlord Saurfang",
			["npcID"] = 25730,
		},
		[12743] = {
			["isChanneled"] = false,
			["source"] = "Infernal Warbringer",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 19261,
		},
		[49544] = {
			["encounterName"] = "The Prophet Tharon'ja",
			["source"] = "The Prophet Tharon'ja",
			["npcID"] = 26632,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 375,
		},
		[45577] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Nerub'ar Corpse Harvester",
			["npcID"] = 25445,
		},
		[52480] = {
			["encounterName"] = "Salram the Fleshcrafter",
			["source"] = "Salramm the Fleshcrafter",
			["npcID"] = 26530,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 294,
		},
		[8391] = {
			["isChanneled"] = false,
			["source"] = "Aku'mai Snapjaw",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 4825,
		},
		[33865] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Ethereal Scavenger",
			["npcID"] = 18309,
		},
		[12550] = {
			["isChanneled"] = false,
			["source"] = "Arcane Feedback",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14400,
		},
		[50312] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Kel'Thuzad",
			["npcID"] = 25465,
		},
		[57657] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30622,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 215,
		},
		[54663] = {
			["isChanneled"] = false,
			["source"] = "Tainted Screecher",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42338,
		},
		[54791] = {
			["isChanneled"] = false,
			["source"] = "Maleki the Pallid",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10438,
		},
		[7645] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Lady Illucia Barov",
			["npcID"] = 10502,
		},
		[12742] = {
			["isChanneled"] = false,
			["source"] = "Gordok Warlock",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11448,
		},
		[16427] = {
			["source"] = "Death Lash",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 13285,
		},
		[34828] = {
			["source"] = "Sea Elemental",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 5461,
		},
		[66290] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Balnazzar",
			["npcID"] = 10813,
		},
		[7741] = {
			["isChanneled"] = false,
			["source"] = "Defiled Felhound",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 41290,
		},
		[54524] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Zuramat the Obliterator",
			["npcID"] = 29314,
		},
		[32324] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Skra'gath",
			["npcID"] = 18401,
		},
		[21833] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Tinkerer Gizlock",
			["npcID"] = 13601,
		},
		[30213] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Kirshak",
			["npcID"] = 17252,
		},
		[50306] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Warsong Aberration",
			["npcID"] = 25611,
		},
		[79878] = {
			["isChanneled"] = false,
			["source"] = "Thornar Thunderclash",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 42610,
		},
		[55041] = {
			["event"] = "SPELL_AURA_APPLIED",
			["type"] = "DEBUFF",
			["source"] = "Mage Hunter Ascendant",
			["npcID"] = 26727,
		},
		[28902] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Twilight Apostle",
			["npcID"] = 30179,
		},
		[88836] = {
			["encounterName"] = "Admiral Ripsnarl",
			["source"] = "Admiral Ripsnarl",
			["npcID"] = 47626,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1062,
		},
		[30471] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Savage Cave Beast",
			["npcID"] = 30329,
		},
		[85253] = {
			["isChanneled"] = false,
			["source"] = "Corpseweed",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 43732,
		},
		[8362] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Instructor Malicia",
			["npcID"] = 10505,
		},
		[26977] = {
			["isChanneled"] = false,
			["source"] = "Lord Incendius",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 9017,
		},
		[6660] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Palemane Poacher",
			["npcID"] = 2951,
		},
		[14887] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scholomance Necromancer",
			["npcID"] = 10477,
		},
		[37132] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Azure Magus",
			["npcID"] = 26722,
		},
		[12471] = {
			["isChanneled"] = false,
			["source"] = "Wildspawn Felsworn",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 11455,
		},
		[45578] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Warsong Marksman",
			["npcID"] = 25244,
		},
		[22857] = {
			["isChanneled"] = false,
			["source"] = "Captain Kromcrush",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14325,
		},
		[15655] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Guard",
			["npcID"] = 10489,
		},
		[15799] = {
			["isChanneled"] = false,
			["source"] = "Smolderthorn Mystic",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 9239,
		},
		[32422] = {
			["encounterName"] = "Exarch Maladaar",
			["source"] = "Exarch Maladaar",
			["npcID"] = 18373,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1889,
		},
		[23113] = {
			["isChanneled"] = false,
			["source"] = "Slag",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 28585,
		},
		[32908] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Dragonflayer Heartsplitter",
			["npcID"] = 24071,
		},
		[34189] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Darnassian Scout",
			["npcID"] = 41865,
		},
		[86814] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Riverpaw Basher",
			["npcID"] = 46248,
		},
		[22859] = {
			["isChanneled"] = false,
			["source"] = "Captain Kromcrush",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 14325,
		},
		[31623] = {
			["encounterName"] = "Swamplord Musel'ek",
			["source"] = "Swamplord Musel'ek",
			["npcID"] = 17826,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 1947,
		},
		[77576] = {
			["isChanneled"] = false,
			["source"] = "Redstone Basilisk",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 5990,
		},
		[34829] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Thane Torvald Eriksson",
			["npcID"] = 27377,
		},
		[46982] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Runic Lightning Gunner",
			["npcID"] = 26414,
		},
		[12889] = {
			["isChanneled"] = false,
			["source"] = "Kirtonos the Herald",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10506,
		},
		[12021] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Risen Aberration",
			["npcID"] = 10485,
		},
		[38027] = {
			["source"] = "Twilight Bloodshaper",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 43218,
		},
		[51849] = {
			["encounterName"] = "Sjonnir the Ironshaper",
			["source"] = "Sjonnir The Ironshaper",
			["npcID"] = 27978,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 569,
		},
		[83463] = {
			["encounterName"] = "Ozumat",
			["source"] = "Faceless Sapper",
			["isChanneled"] = false,
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 44752,
		},
		[32711] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Varidus the Flenser",
			["npcID"] = 25618,
		},
		[28168] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Raging Construct",
			["npcID"] = 27970,
		},
		[17616] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scholomance Necromancer",
			["npcID"] = 10477,
		},
		[33425] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Mag'har Pitfighter",
			["npcID"] = 19140,
		},
		[13738] = {
			["isChanneled"] = false,
			["source"] = "Fleshflayer Ghoul",
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 10407,
		},
		[50841] = {
			["source"] = "Sjonnir The Ironshaper",
			["type"] = "DEBUFF",
			["event"] = "SPELL_AURA_APPLIED",
			["npcID"] = 27978,
		},
		[17618] = {
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["source"] = "Scholomance Dark Summoner",
			["npcID"] = 11582,
		},
		[53330] = {
			["encounterName"] = "Hadronox",
			["source"] = "Anub'ar Crypt Fiend",
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["npcID"] = 29063,
		},
		[42705] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["npcID"] = 23954,
			["isChanneled"] = false,
			["event"] = "SPELL_CAST_SUCCESS",
			["encounterID"] = 575,
		},
	},
	["profileKeys"] = {
		["Raynná - Gehennas"] = "Default",
		["Raynna - Gehennas"] = "MyNewProfile",
		["Ráynna - Firemaw"] = "Default",
	},
	["captured_casts"] = {
		[23337] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Warsong Battleguard",
			["npcID"] = 25242,
		},
		[47729] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["npcID"] = 26930,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 520,
		},
		[9143] = {
			["source"] = "Tinkerer Gizlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 13601,
		},
		[31601] = {
			["source"] = "Crypt Crawler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10412,
		},
		[15305] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Golem Lord Argelmach",
			["npcID"] = 8983,
		},
		[31713] = {
			["source"] = "Scarlet Protector",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4292,
		},
		[13323] = {
			["source"] = "Arcanist Doan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 6487,
		},
		[79858] = {
			["source"] = "Dreadmaul Ogre Mage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5975,
		},
		[50255] = {
			["encounterName"] = "Skadi the Ruthless",
			["source"] = "Skadi the Ruthless",
			["npcID"] = 26693,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 581,
		},
		[33919] = {
			["encounterName"] = "Tavarok",
			["source"] = "Tavarok",
			["npcID"] = 18343,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1901,
		},
		[50319] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kel'Thuzad",
			["npcID"] = 25465,
		},
		[58535] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Portal Keeper",
			["npcID"] = 30893,
		},
		[8272] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Razorfen Earthbreaker",
			["npcID"] = 4525,
		},
		[52493] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Watcher Silthik",
			["npcID"] = 28731,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 216,
		},
		[86636] = {
			["source"] = "Lord Overheat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46264,
		},
		[35198] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Terror Totem",
			["npcID"] = 20455,
		},
		[48529] = {
			["encounterName"] = "King Ymiron",
			["source"] = "King Ymiron",
			["npcID"] = 26861,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 583,
		},
		[11397] = {
			["source"] = "Withered Spearhide",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7332,
		},
		[15497] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Sorcerous Skeleton",
			["npcID"] = 47140,
		},
		[32017] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dust Howler",
			["npcID"] = 17158,
		},
		[49712] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Drakkari Handler",
			["npcID"] = 26637,
		},
		[55882] = {
			["source"] = "Fiend of Air",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30045,
		},
		[56969] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azure Scale-Binder",
			["npcID"] = 26735,
		},
		[12492] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jammal'an the Prophet",
			["npcID"] = 5710,
		},
		[6254] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skum",
			["npcID"] = 3674,
		},
		[15585] = {
			["source"] = "Anvilrage Medic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8894,
		},
		[7289] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Umbrafen Witchdoctor",
			["npcID"] = 20115,
		},
		[76535] = {
			["source"] = "Gilgoblin Aquamage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40943,
		},
		[52238] = {
			["encounterName"] = "Volkhan",
			["source"] = "Volkhan",
			["encounterID"] = 557,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28587,
		},
		[21068] = {
			["source"] = "Corruptor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 12217,
		},
		[58536] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Portal Keeper",
			["npcID"] = 30893,
		},
		[50416] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coldarra Wyrmkin",
			["npcID"] = 25728,
		},
		[90602] = {
			["encounterName"] = "\"Captain\" Cookie",
			["source"] = "\"Captain\" Cookie",
			["npcID"] = 47739,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1060,
		},
		[51503] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Rune Controller",
			["npcID"] = 27966,
		},
		[50512] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thane Torvald Eriksson",
			["npcID"] = 27377,
		},
		[93863] = {
			["encounterName"] = "Baron Silverlaine",
			["source"] = "Rethilgore",
			["npcID"] = 50834,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1070,
		},
		[48530] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "7th Legion Sentinel",
			["npcID"] = 27162,
		},
		[8600] = {
			["source"] = "Theka the Martyr",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7272,
		},
		[15785] = {
			["source"] = "Death's Head Acolyte",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4515,
		},
		[38556] = {
			["source"] = "Spitelash Battlemaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7885,
		},
		[15801] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Revelosh",
			["npcID"] = 6910,
		},
		[31602] = {
			["source"] = "Nerub'enkan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10437,
		},
		[37629] = {
			["source"] = "Shahandana",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41165,
		},
		[90603] = {
			["encounterName"] = "\"Captain\" Cookie",
			["source"] = "\"Captain\" Cookie",
			["npcID"] = 47739,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1060,
		},
		[30643] = {
			["encounterName"] = "Watchkeeper Gargolmar",
			["source"] = "Hellfire Watcher",
			["encounterID"] = 1893,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17309,
		},
		[18399] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Vectus",
			["npcID"] = 10432,
		},
		[30691] = {
			["encounterName"] = "Vazruden the Herald",
			["source"] = "Vazruden the Herald",
			["encounterID"] = 1892,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17307,
		},
		[30707] = {
			["encounterName"] = "Omor the Unscarred",
			["source"] = "Omor the Unscarred",
			["encounterID"] = 1891,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17308,
		},
		[33793] = {
			["encounterName"] = "Vazruden the Herald",
			["source"] = "Vazruden the Herald",
			["encounterID"] = 1892,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17307,
		},
		[11829] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unyielding Sorcerer",
			["npcID"] = 16905,
		},
		[35008] = {
			["encounterName"] = "Rokmar the Crackler",
			["source"] = "Rokmar the Crackler",
			["npcID"] = 17991,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1941,
		},
		[22651] = {
			["source"] = "Zevrim Thornhoof",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11490,
		},
		[13899] = {
			["source"] = "Lord Incendius",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 9017,
		},
		[90604] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "\"Captain\" Cookie",
			["npcID"] = 47739,
		},
		[10854] = {
			["source"] = "Razelikh the Defiler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41280,
		},
		[17616] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scholomance Necromancer",
			["npcID"] = 10477,
		},
		[79607] = {
			["source"] = "Venomtail Scorpid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 3127,
		},
		[47668] = {
			["encounterName"] = "Trollgore",
			["source"] = "Risen Drakkari Warrior",
			["npcID"] = 26635,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 369,
		},
		[16033] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mogor",
			["npcID"] = 18069,
		},
		[20829] = {
			["source"] = "Dark Summoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8551,
		},
		[75068] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Redpine Shaman",
			["npcID"] = 44479,
		},
		[22907] = {
			["encounterName"] = "Swamplord Musel'ek",
			["source"] = "Swamplord Musel'ek",
			["npcID"] = 17826,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1947,
		},
		[11981] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spectral Teacher",
			["npcID"] = 10500,
		},
		[90605] = {
			["encounterName"] = "\"Captain\" Cookie",
			["source"] = "\"Captain\" Cookie",
			["npcID"] = 47739,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1060,
		},
		[81654] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bristleback Gun Thief",
			["npcID"] = 36708,
		},
		[53167] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Rune Theurgist",
			["npcID"] = 27963,
		},
		[78841] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Huntress Davinia",
			["npcID"] = 41864,
		},
		[34945] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coilfang Scale-Healer",
			["npcID"] = 21126,
		},
		[48276] = {
			["encounterName"] = "Svala Sorrowgrave",
			["source"] = "Svala Sorrowgrave",
			["npcID"] = 26668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 577,
		},
		[52496] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crypt Fiend",
			["npcID"] = 27734,
		},
		[55597] = {
			["source"] = "Drakkari Medicine Man",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29826,
		},
		[81655] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bristleback Gun Thief",
			["npcID"] = 36708,
		},
		[15234] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coilfang Enchantress",
			["npcID"] = 17961,
		},
		[17169] = {
			["source"] = "Crypt Horror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8557,
		},
		[38558] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gerenzo Wrenchwhistle",
			["npcID"] = 4202,
		},
		[84469] = {
			["source"] = "Corrupted Darkwood Treant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45119,
		},
		[32722] = {
			["source"] = "Blistering Rot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16901,
		},
		[17393] = {
			["source"] = "Lord Aurius Rivendare",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45412,
		},
		[9232] = {
			["source"] = "High Inquisitor Whitemane",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 3977,
		},
		[49204] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ymirjar Dusk Shaman",
			["npcID"] = 26694,
		},
		[50323] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "En'kilah Necrolord",
			["npcID"] = 25609,
		},
		[35010] = {
			["encounterName"] = "Mennu the Betrayer",
			["source"] = "Mennu the Betrayer",
			["npcID"] = 17941,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1939,
		},
		[57644] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30621,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 215,
		},
		[14443] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Weapon Technician",
			["npcID"] = 8920,
		},
		[87859] = {
			["encounterName"] = "Glubtok",
			["source"] = "Glubtok",
			["npcID"] = 47162,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1064,
		},
		[15498] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowforge Senator",
			["npcID"] = 8904,
		},
		[75775] = {
			["source"] = "Frankie Gearslipper",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 34876,
		},
		[81082] = {
			["source"] = "Felhound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 6010,
		},
		[22876] = {
			["source"] = "Wandering Eye of Kilrogg",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 14386,
		},
		[55982] = {
			["source"] = "Enormos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30021,
		},
		[22924] = {
			["source"] = "Tendris Warpwood",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11489,
		},
		[15586] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Instructor Malicia",
			["npcID"] = 10505,
		},
		[16866] = {
			["source"] = "Venom Belcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10417,
		},
		[48054] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crazed Mana-Surge",
			["npcID"] = 26737,
		},
		[34787] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darkcrest Sorceress",
			["npcID"] = 19947,
		},
		[33860] = {
			["source"] = "Cho'Rush the Observer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 14324,
		},
		[71812] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Strange Tentacle",
			["npcID"] = 33420,
		},
		[40062] = {
			["source"] = "Shadowmoon Technician",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17414,
		},
		[61577] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "The Anvil",
			["npcID"] = 26406,
		},
		[75073] = {
			["source"] = "Shadowsworn Adept",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 6006,
		},
		[82362] = {
			["source"] = "Evolved Twilight Zealot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39987,
		},
		[51475] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Rune Elementalist",
			["npcID"] = 27962,
		},
		[51507] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Rune Controller",
			["npcID"] = 27966,
		},
		[53617] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'ar Venomancer",
			["npcID"] = 29217,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 218,
		},
		[13692] = {
			["source"] = "Bloodhound",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8921,
		},
		[90994] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Defias Miner",
			["npcID"] = 48419,
		},
		[52722] = {
			["encounterName"] = "Mal'ganis",
			["source"] = "Mal'Ganis",
			["npcID"] = 26533,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 296,
		},
		[52754] = {
			["source"] = "Hardened Steel Skycaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28580,
		},
		[38560] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Smart Mining Monkey",
			["npcID"] = 35812,
		},
		[15802] = {
			["source"] = "Eldreth Phantasm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11475,
		},
		[9672] = {
			["source"] = "Spitelash Screamer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 6193,
		},
		[21390] = {
			["source"] = "Lord Vyletongue",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 12236,
		},
		[49110] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wyrmrest Guardian",
			["npcID"] = 26933,
		},
		[13860] = {
			["source"] = "Dreadlord Defiler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41471,
		},
		[13900] = {
			["source"] = "Lord Incendius",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 9017,
		},
		[80382] = {
			["source"] = "Nethergarde Miner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5996,
		},
		[38209] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cho'Rush the Observer",
			["npcID"] = 14324,
		},
		[15970] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nightmare Wyrmkin",
			["npcID"] = 5280,
		},
		[17618] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scholomance Dark Summoner",
			["npcID"] = 11582,
		},
		[30933] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Illyanna Ravenoak",
			["npcID"] = 11488,
		},
		[90932] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Defias Blood Wizard",
			["npcID"] = 48417,
		},
		[20735] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Illyanna Ravenoak",
			["npcID"] = 11488,
		},
		[52755] = {
			["source"] = "Hardened Steel Skycaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28580,
		},
		[8873] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Child of Volcanoth",
			["npcID"] = 38845,
		},
		[20815] = {
			["source"] = "Scarlet Diviner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4291,
		},
		[20831] = {
			["source"] = "Mana Remnant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11483,
		},
		[22909] = {
			["source"] = "Eye of Immol'thar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 14396,
		},
		[16098] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jandice Barov",
			["npcID"] = 10503,
		},
		[49111] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azure Dragon",
			["npcID"] = 27608,
		},
		[7054] = {
			["encounterName"] = "Commander Springvale",
			["source"] = "Tormented Officer",
			["npcID"] = 3873,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1071,
		},
		[21071] = {
			["source"] = "Primordial Behemoth",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 12206,
		},
		[76100] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["encounterID"] = 1044,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40765,
		},
		[55633] = {
			["encounterName"] = "Drakkari Colossus",
			["source"] = "Drakkari Golem",
			["encounterID"] = 385,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29832,
		},
		[9081] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowforge Darkcaster",
			["npcID"] = 4848,
		},
		[52660] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stratholme Resident",
			["npcID"] = 28341,
		},
		[17171] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mossflayer Shadowhunter",
			["npcID"] = 8561,
		},
		[79937] = {
			["source"] = "Dreadmaul Warlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5978,
		},
		[17235] = {
			["source"] = "Nerub'enkan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10437,
		},
		[54962] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gerenzo Wrenchwhistle",
			["npcID"] = 4202,
		},
		[22414] = {
			["source"] = "Warpwood Tangler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11464,
		},
		[48920] = {
			["encounterName"] = "King Dred",
			["source"] = "King Dred",
			["npcID"] = 27483,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 373,
		},
		[7154] = {
			["source"] = "Eldreth Spectre",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11473,
		},
		[79490] = {
			["source"] = "Barbfin Skimmer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42341,
		},
		[22478] = {
			["source"] = "Zevrim Thornhoof",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11490,
		},
		[31717] = {
			["encounterName"] = "The Black Stalker",
			["source"] = "The Black Stalker",
			["npcID"] = 17882,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1948,
		},
		[67534] = {
			["source"] = "Earthen Ring Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39411,
		},
		[79938] = {
			["source"] = "Dreadmaul Warlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5978,
		},
		[52341] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lightning Construct",
			["npcID"] = 27972,
		},
		[73097] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Volcanoth",
			["npcID"] = 38855,
		},
		[8282] = {
			["source"] = "High Inquisitor Fairbanks",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4542,
		},
		[57648] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["encounterID"] = 215,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30622,
		},
		[2602] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthen Sculptor",
			["npcID"] = 7012,
		},
		[21807] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthbinder Galandria Nightbreeze",
			["npcID"] = 19294,
		},
		[8362] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Instructor Malicia",
			["npcID"] = 10505,
		},
		[12470] = {
			["source"] = "Bloodmage Thalnos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4543,
		},
		[15547] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowforge Sharpshooter",
			["npcID"] = 7290,
		},
		[36645] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raging Earth Elemental",
			["npcID"] = 41993,
		},
		[17843] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Instructor Malicia",
			["npcID"] = 10505,
		},
		[15587] = {
			["source"] = "Magister Kalendris",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11487,
		},
		[32197] = {
			["source"] = "Shadowmoon Warlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17371,
		},
		[16868] = {
			["source"] = "Baroness Anastari",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10436,
		},
		[12542] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scholomance Neophyte",
			["npcID"] = 10470,
		},
		[9481] = {
			["source"] = "High Inquisitor Whitemane",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 3977,
		},
		[53333] = {
			["encounterName"] = "Hadronox",
			["event"] = "SPELL_CAST_START",
			["source"] = "Anub'ar Necromancer",
			["npcID"] = 29098,
		},
		[52534] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Anub'ar Shadowcaster",
			["npcID"] = 28733,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 216,
		},
		[90938] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Defias Blood Wizard",
			["npcID"] = 48417,
		},
		[48698] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonflayer Seer",
			["npcID"] = 26554,
		},
		[36486] = {
			["source"] = "Mo'arg Forgefiend",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16946,
		},
		[15795] = {
			["source"] = "Sister of Celebras",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11794,
		},
		[12742] = {
			["source"] = "Gordok Warlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11448,
		},
		[22415] = {
			["source"] = "Warpwood Tangler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11464,
		},
		[30615] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stone Sleeper",
			["npcID"] = 3870,
		},
		[33641] = {
			["source"] = "Justinius the Harbinger",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 18966,
		},
		[15859] = {
			["source"] = "Twilight Shadowmage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4813,
		},
		[30695] = {
			["encounterName"] = "Omor the Unscarred",
			["source"] = "Omor the Unscarred",
			["encounterID"] = 1891,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17308,
		},
		[55348] = {
			["source"] = "Drakkari Battle Rider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29836,
		},
		[34984] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Fen Ray",
			["npcID"] = 17731,
		},
		[90556] = {
			["encounterName"] = "\"Captain\" Cookie",
			["source"] = "\"Captain\" Cookie",
			["npcID"] = 47739,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1060,
		},
		[15979] = {
			["source"] = "Arcane Aberration",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11480,
		},
		[11895] = {
			["source"] = "Antu'sul",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8127,
		},
		[34249] = {
			["source"] = "Arazzius the Cruel",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 19191,
		},
		[91004] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Defias Envoker",
			["npcID"] = 48418,
		},
		[83012] = {
			["source"] = "Vale Howler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 43050,
		},
		[20801] = {
			["source"] = "Imp Minion",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 12922,
		},
		[51832] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unrelenting Construct",
			["npcID"] = 27971,
		},
		[54965] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonflayer Runecaster",
			["npcID"] = 23960,
		},
		[11975] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skeletal Guardian",
			["npcID"] = 10390,
		},
		[16869] = {
			["source"] = "Maleki the Pallid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10438,
		},
		[12039] = {
			["source"] = "Death's Head Priest",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4517,
		},
		[84931] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40825,
		},
		[8986] = {
			["source"] = "Haunting Phantasm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 6427,
		},
		[8994] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jandice Barov",
			["npcID"] = 10503,
		},
		[32971] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Captain Peake",
			["npcID"] = 37157,
		},
		[89663] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kobold Digger",
			["npcID"] = 48229,
		},
		[12151] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Atal'ai High Priest",
			["npcID"] = 5273,
		},
		[17141] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Priest",
			["npcID"] = 10423,
		},
		[12167] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grimlok",
			["npcID"] = 4854,
		},
		[3815] = {
			["source"] = "Aku'mai",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4829,
		},
		[79881] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hearthglen Trainee",
			["npcID"] = 45162,
		},
		[48700] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonflayer Seer",
			["npcID"] = 26554,
		},
		[43649] = {
			["encounterName"] = "Skarvold & Dalronn",
			["source"] = "Dalronn the Controller",
			["npcID"] = 24201,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 573,
		},
		[47773] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["npcID"] = 26731,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 520,
		},
		[66966] = {
			["source"] = "Talrendis Ancient",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 35198,
		},
		[31623] = {
			["encounterName"] = "Swamplord Musel'ek",
			["source"] = "Swamplord Musel'ek",
			["npcID"] = 17826,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1947,
		},
		[12279] = {
			["source"] = "Scholomance Dark Summoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11582,
		},
		[49084] = {
			["encounterName"] = "Skadi the Ruthless",
			["source"] = "Ymirjar Witch Doctor",
			["npcID"] = 26691,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 581,
		},
		[76813] = {
			["source"] = "Naz'jar Spiritmender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41096,
		},
		[8259] = {
			["source"] = "Razorfen Spearhide",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4438,
		},
		[66967] = {
			["source"] = "Talrendis Ancient",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 35198,
		},
		[93629] = {
			["encounterName"] = "Lord Godfrey",
			["source"] = "Lord Godfrey",
			["npcID"] = 46964,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1072,
		},
		[57780] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Malmo",
			["npcID"] = 38809,
		},
		[76686] = {
			["source"] = "Twilight Obsidian Borer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40019,
		},
		[77773] = {
			["source"] = "Scarlet Scryer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4293,
		},
		[33324] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unliving Cleric",
			["npcID"] = 18500,
		},
		[20802] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grimtotem Sorcerer",
			["npcID"] = 11913,
		},
		[12471] = {
			["source"] = "Wildspawn Felsworn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11455,
		},
		[66968] = {
			["source"] = "Talrendis Ancient",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 35198,
		},
		[8435] = {
			["source"] = "Lady Sarevess",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4831,
		},
		[25054] = {
			["source"] = "High Inquisitor Whitemane",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 3977,
		},
		[12551] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Weapon Technician",
			["npcID"] = 8920,
		},
		[41988] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Instructor Malicia",
			["npcID"] = 10505,
		},
		[79884] = {
			["source"] = "Windfury Sorceress",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 2964,
		},
		[35946] = {
			["source"] = "Drakkari God Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29820,
		},
		[15668] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Magmus",
			["npcID"] = 9938,
		},
		[50364] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nerub'ar Tunneler",
			["npcID"] = 25622,
		},
		[57589] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30621,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 215,
		},
		[39207] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bound Water Elemental",
			["npcID"] = 30419,
		},
		[18149] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lorekeeper Polkelt",
			["npcID"] = 10901,
		},
		[57781] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30624,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 215,
		},
		[80780] = {
			["source"] = "Shrieking Banshee",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10463,
		},
		[33325] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Auchenai Necromancer",
			["npcID"] = 18702,
		},
		[74003] = {
			["source"] = "Trade Prince Gallywix",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39582,
		},
		[48894] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drakkari Shaman",
			["npcID"] = 26639,
		},
		[60211] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonflayer Forge Master",
			["npcID"] = 24079,
		},
		[5884] = {
			["source"] = "Hate Shrieker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8541,
		},
		[80781] = {
			["source"] = "Rockwing Screecher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10409,
		},
		[78799] = {
			["source"] = "Naias",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17207,
		},
		[38952] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Syreian the Bonecarver",
			["npcID"] = 32438,
		},
		[93505] = {
			["encounterName"] = "Lord Walden",
			["source"] = "Lord Walden",
			["npcID"] = 46963,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1073,
		},
		[81293] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Huntress Davinia",
			["npcID"] = 41864,
		},
		[7978] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Venture Co. Holdout",
			["npcID"] = 3992,
		},
		[93697] = {
			["encounterName"] = "Lord Walden",
			["source"] = "Lord Walden",
			["npcID"] = 46963,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1073,
		},
		[30937] = {
			["source"] = "Shadowmoon Channeler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17653,
		},
		[20787] = {
			["source"] = "Lethtendris",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 14327,
		},
		[20819] = {
			["source"] = "Scarlet Sorcerer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4294,
		},
		[39592] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Summoned Searing Totem",
			["npcID"] = 22895,
		},
		[14030] = {
			["source"] = "Anvilrage Warden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8890,
		},
		[22945] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Torrent",
			["npcID"] = 14399,
		},
		[16100] = {
			["source"] = "Wildspawn Betrayer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11454,
		},
		[25055] = {
			["source"] = "Scarlet Enchanter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 9452,
		},
		[46018] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Archmage Evanor",
			["npcID"] = 25784,
		},
		[48096] = {
			["encounterName"] = "Keristrasza",
			["source"] = "Keristrasza",
			["npcID"] = 26723,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 526,
		},
		[78801] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hydromancer Velratha",
			["npcID"] = 7795,
		},
		[83021] = {
			["source"] = "Death's Step Miscreation",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45444,
		},
		[53467] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'arak",
			["npcID"] = 29120,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 218,
		},
		[56632] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ahn'kahar Web Winder",
			["npcID"] = 30276,
		},
		[15245] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Commander Malor",
			["npcID"] = 11032,
		},
		[35373] = {
			["source"] = "Shadowsworn Enforcer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 6007,
		},
		[21331] = {
			["source"] = "Deeprot Tangler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 13142,
		},
		[54970] = {
			["encounterName"] = "Slad'ran",
			["source"] = "Slad'ran",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29304,
		},
		[12248] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Murkblood Oracle",
			["npcID"] = 17771,
		},
		[55098] = {
			["encounterName"] = "Moorabi",
			["source"] = "Moorabi",
			["encounterID"] = 387,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29305,
		},
		[10258] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Archaedas",
			["npcID"] = 2748,
		},
		[5137] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Undead Postman",
			["npcID"] = 11142,
		},
		[81361] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Boulderslide Stonepounder",
			["npcID"] = 11918,
		},
		[79379] = {
			["source"] = "Gilblin Plunderer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41746,
		},
		[8292] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grimlok",
			["npcID"] = 4854,
		},
		[75543] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Rom'ogg Bonecrusher",
			["encounterID"] = 1040,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39665,
		},
		[15493] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Anvilrage Marshal",
			["npcID"] = 8898,
		},
		[49696] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Drakkari Soulmage",
			["npcID"] = 26636,
		},
		[8364] = {
			["source"] = "Scarlet Sorcerer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4294,
		},
		[20820] = {
			["source"] = "Scarlet Adept",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4296,
		},
		[22914] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Illyanna Ravenoak",
			["npcID"] = 11488,
		},
		[22946] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Torrent",
			["npcID"] = 14399,
		},
		[12528] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Spectral Tutor",
			["npcID"] = 10498,
		},
		[49089] = {
			["encounterName"] = "Skadi the Ruthless",
			["source"] = "Ymirjar Witch Doctor",
			["npcID"] = 26691,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 581,
		},
		[15653] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nightmare Wyrmkin",
			["npcID"] = 5280,
		},
		[32329] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Underbog Shambler",
			["npcID"] = 17871,
		},
		[81363] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stonetalon Ram",
			["npcID"] = 34894,
		},
		[89739] = {
			["encounterName"] = "\"Captain\" Cookie",
			["source"] = "\"Captain\" Cookie",
			["npcID"] = 47739,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1060,
		},
		[36238] = {
			["source"] = "Fel Cannon MKI",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 22461,
		},
		[57785] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30624,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 215,
		},
		[56858] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Worshipper",
			["npcID"] = 30111,
		},
		[85072] = {
			["source"] = "Nightbane Shadow Weaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 533,
		},
		[55931] = {
			["encounterName"] = "Prince Taldaram",
			["source"] = "Prince Taldaram",
			["encounterID"] = 213,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29308,
		},
		[81236] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Plagued Hatchling",
			["npcID"] = 10678,
		},
		[18327] = {
			["source"] = "Baroness Anastari",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10436,
		},
		[75610] = {
			["source"] = "Corla, Herald of Twilight",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39679,
		},
		[9739] = {
			["source"] = "Marl Wormthorn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42334,
		},
		[5401] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Cliff Stormer",
			["npcID"] = 4008,
		},
		[32914] = {
			["source"] = "Sister Hatelash",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5785,
		},
		[52383] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lightning Construct",
			["npcID"] = 27972,
		},
		[13895] = {
			["source"] = "Bael'Gar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 9016,
		},
		[76634] = {
			["source"] = "Tainted Sentry",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40925,
		},
		[77721] = {
			["source"] = "Shadowsworn Adept",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 6006,
		},
		[11921] = {
			["source"] = "Hellfire Familiar",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 19016,
		},
		[20805] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lord Pythas",
			["npcID"] = 3670,
		},
		[11969] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Galgann Firehammer",
			["npcID"] = 7291,
		},
		[42729] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["npcID"] = 23954,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 575,
		},
		[3256] = {
			["source"] = "Scarab",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7269,
		},
		[49091] = {
			["encounterName"] = "Skadi the Ruthless",
			["source"] = "Ymirjar Harpooner",
			["npcID"] = 26692,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 581,
		},
		[77722] = {
			["source"] = "Mordak Nightbender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45257,
		},
		[48132] = {
			["encounterName"] = "Gortok Palehoof",
			["source"] = "Massive Jormungar",
			["npcID"] = 26685,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 579,
		},
		[8988] = {
			["source"] = "Arcanist Doan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 6487,
		},
		[46150] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bound Air Elemental",
			["npcID"] = 30418,
		},
		[32330] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lykul Wasp",
			["npcID"] = 17732,
		},
		[67301] = {
			["source"] = "Talrendis Saboteur",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 35312,
		},
		[76572] = {
			["source"] = "Twilight Sadist",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39980,
		},
		[15230] = {
			["source"] = "Fel Lash",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 13197,
		},
		[15254] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["source"] = "Ethereal Beacon",
			["npcID"] = 18431,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1899,
		},
		[54878] = {
			["encounterName"] = "Drakkari Colossus",
			["source"] = "Drakkari Elemental",
			["encounterID"] = 385,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29573,
		},
		[84309] = {
			["source"] = "Drowned Gilnean Merchant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42244,
		},
		[52960] = {
			["encounterName"] = "Loken",
			["source"] = "Loken",
			["encounterID"] = 561,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28923,
		},
		[17353] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Rifleman",
			["npcID"] = 11054,
		},
		[46982] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Runic Lightning Gunner",
			["npcID"] = 26414,
		},
		[6660] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Palemane Poacher",
			["npcID"] = 2951,
		},
		[8245] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lorekeeper Polkelt",
			["npcID"] = 10901,
		},
		[53472] = {
			["encounterName"] = "Anub'arak",
			["source"] = "Anub'arak",
			["npcID"] = 29120,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 218,
		},
		[16554] = {
			["source"] = "Blighted Surge",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8519,
		},
		[3356] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowforge Geologist",
			["npcID"] = 7030,
		},
		[34163] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Underbog Shambler",
			["npcID"] = 17871,
		},
		[51586] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonflayer Spiritualist",
			["npcID"] = 28410,
		},
		[34259] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Atal'ai Deathwalker",
			["npcID"] = 5271,
		},
		[6728] = {
			["source"] = "Razorfen Dustweaver",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4522,
		},
		[32011] = {
			["source"] = "Bloodwash Idolater",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41405,
		},
		[53824] = {
			["source"] = "Venture Co. Worker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 2978,
		},
		[37488] = {
			["source"] = "Terrorfiend",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16951,
		},
		[20822] = {
			["source"] = "Death's Head Adept",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4516,
		},
		[83914] = {
			["encounterName"] = "Ozumat",
			["source"] = "Vicious Mindlasher",
			["encounterID"] = 1047,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 44715,
		},
		[76307] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Mindbender Ghur'sha",
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40788,
		},
		[76171] = {
			["encounterName"] = "Mindbender Ghur'sha",
			["source"] = "Erunak Stonespeaker",
			["encounterID"] = 1046,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40825,
		},
		[76560] = {
			["source"] = "Gilgoblin Aquamage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40943,
		},
		[76590] = {
			["source"] = "Faceless Watcher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40936,
		},
		[84465] = {
			["source"] = "Bloodwash Acolyte",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41423,
		},
		[76026] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["encounterID"] = 1044,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40765,
		},
		[76047] = {
			["encounterName"] = "Commander Ulthok",
			["source"] = "Commander Ulthok",
			["encounterID"] = 1044,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40765,
		},
		[75907] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Naz'jar Honor Guard",
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40633,
		},
		[75683] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40586,
		},
		[33844] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthbinder Galandria Nightbreeze",
			["npcID"] = 19294,
		},
		[5781] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Prairie Wolf",
			["npcID"] = 2958,
		},
		[34931] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ethereal Darkcaster",
			["npcID"] = 18331,
		},
		[17162] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Conjuror",
			["npcID"] = 10419,
		},
		[9532] = {
			["source"] = "Ragefire Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11319,
		},
		[32363] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["source"] = "Nexus-Prince Shaffar",
			["npcID"] = 18344,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1899,
		},
		[75992] = {
			["source"] = "Naz'jar Tempest Witch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40634,
		},
		[75813] = {
			["source"] = "Naz'jar Tempest Witch",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40634,
		},
		[76790] = {
			["source"] = "Naz'jar Invader",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39616,
		},
		[76815] = {
			["source"] = "Naz'jar Spiritmender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41096,
		},
		[61168] = {
			["source"] = "Glimmerdeep Tidehunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39664,
		},
		[51587] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonflayer Spiritualist",
			["npcID"] = 28410,
		},
		[11642] = {
			["source"] = "Scarlet Adept",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4296,
		},
		[76031] = {
			["encounterName"] = "Beauty",
			["source"] = "Beauty",
			["encounterID"] = 1037,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39700,
		},
		[37361] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Skeletal Guardian",
			["npcID"] = 10390,
		},
		[45577] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nerub'ar Corpse Harvester",
			["npcID"] = 25445,
		},
		[30493] = {
			["source"] = "Talrendis Raider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 35177,
		},
		[76717] = {
			["source"] = "Defiled Earth Rager",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40023,
		},
		[20295] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lady Anacondra",
			["npcID"] = 3671,
		},
		[76682] = {
			["source"] = "Twilight Element Warden",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40017,
		},
		[22373] = {
			["source"] = "Warpwood Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11461,
		},
		[93520] = {
			["encounterName"] = "Lord Godfrey",
			["source"] = "Lord Godfrey",
			["npcID"] = 46964,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1072,
		},
		[17290] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Worshipper",
			["npcID"] = 30111,
		},
		[22421] = {
			["source"] = "Hydrospawn",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 13280,
		},
		[7967] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mutanus the Devourer",
			["npcID"] = 3654,
		},
		[75823] = {
			["encounterName"] = "Corla, Herald of Twilight",
			["source"] = "Corla, Herald of Twilight",
			["encounterID"] = 1038,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39679,
		},
		[76588] = {
			["source"] = "Twilight Zealot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39990,
		},
		[89263] = {
			["encounterName"] = "\"Captain\" Cookie",
			["source"] = "\"Captain\" Cookie",
			["npcID"] = 47739,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1060,
		},
		[75539] = {
			["encounterName"] = "Rom'ogg Bonecrusher",
			["source"] = "Rom'ogg Bonecrusher",
			["encounterID"] = 1040,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39665,
		},
		[82137] = {
			["source"] = "Rom'ogg Bonecrusher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39665,
		},
		[12258] = {
			["source"] = "Skeletal Summoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7342,
		},
		[17434] = {
			["source"] = "Lord Aurius Rivendare",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45412,
		},
		[7951] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deviate Venomwing",
			["npcID"] = 5756,
		},
		[53314] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Rune Elementalist",
			["npcID"] = 27962,
		},
		[14887] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scholomance Necromancer",
			["npcID"] = 10477,
		},
		[75645] = {
			["source"] = "Corla, Herald of Twilight",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39679,
		},
		[81181] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Windfury Wind Witch",
			["npcID"] = 2963,
		},
		[37054] = {
			["source"] = "Earthwatcher Waveguard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41896,
		},
		[22661] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alzzin the Wildshaper",
			["npcID"] = 11492,
		},
		[7979] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Venture Co. Machine Smith",
			["npcID"] = 3993,
		},
		[67529] = {
			["source"] = "Earthen Ring Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39411,
		},
		[55218] = {
			["encounterName"] = "Gal'darah",
			["source"] = "Gal'darah",
			["encounterID"] = 390,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29306,
		},
		[16587] = {
			["source"] = "Vile Tutor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8548,
		},
		[18649] = {
			["source"] = "Wildspawn Betrayer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11454,
		},
		[15241] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Conjuror",
			["npcID"] = 10419,
		},
		[13952] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Marshal Paltrow",
			["npcID"] = 41937,
		},
		[6984] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Razorfen Beast Trainer",
			["npcID"] = 4531,
		},
		[11922] = {
			["source"] = "Constrictor Vine",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 12220,
		},
		[29427] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Murkblood Healer",
			["npcID"] = 17730,
		},
		[20791] = {
			["source"] = "Searing Blade Warlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11324,
		},
		[55700] = {
			["source"] = "Spitting Cobra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29774,
		},
		[90325] = {
			["source"] = "Ongo'longo",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42815,
		},
		[4962] = {
			["source"] = "Crypt Beast",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10413,
		},
		[11970] = {
			["source"] = "Taragaman the Hungerer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11520,
		},
		[55703] = {
			["source"] = "Spitting Cobra",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29774,
		},
		[11986] = {
			["source"] = "Ragefire Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11319,
		},
		[54801] = {
			["encounterName"] = "Drakkari Colossus",
			["source"] = "Drakkari Elemental",
			["encounterID"] = 385,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29573,
		},
		[57725] = {
			["encounterName"] = "Salram the Fleshcrafter",
			["source"] = "Salramm the Fleshcrafter",
			["npcID"] = 26530,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 294,
		},
		[52611] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Master Necromancer",
			["npcID"] = 27732,
		},
		[52237] = {
			["encounterName"] = "Volkhan",
			["source"] = "Volkhan",
			["encounterID"] = 557,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28587,
		},
		[52624] = {
			["encounterName"] = "Volkhan",
			["source"] = "Unbound Firestorm",
			["encounterID"] = 557,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28584,
		},
		[53788] = {
			["source"] = "Unbound Firestorm",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28584,
		},
		[55980] = {
			["source"] = "Enormos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30021,
		},
		[53044] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Erekem",
			["npcID"] = 29315,
		},
		[12058] = {
			["source"] = "Wildhammer Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42554,
		},
		[52721] = {
			["encounterName"] = "Mal'ganis",
			["source"] = "Mal'Ganis",
			["npcID"] = 26533,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 296,
		},
		[33910] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unyielding Knight",
			["npcID"] = 16906,
		},
		[7068] = {
			["source"] = "Anguished Dead",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 6426,
		},
		[58438] = {
			["source"] = "Unbound Trickster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30856,
		},
		[32364] = {
			["encounterName"] = "Nexus-Prince Shaffar",
			["source"] = "Nexus-Prince Shaffar",
			["npcID"] = 18344,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1899,
		},
		[55521] = {
			["source"] = "Drakkari Battle Rider",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29836,
		},
		[60236] = {
			["source"] = "Storming Vortex",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28547,
		},
		[9053] = {
			["source"] = "Highborne Summoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11466,
		},
		[33111] = {
			["source"] = "Shadowmoon Warlock",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17371,
		},
		[52451] = {
			["encounterName"] = "Salram the Fleshcrafter",
			["source"] = "Salramm the Fleshcrafter",
			["npcID"] = 26530,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 294,
		},
		[76516] = {
			["source"] = "Gilgoblin Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40935,
		},
		[11131] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gahz'rilla",
			["npcID"] = 7273,
		},
		[82797] = {
			["source"] = "Snickerfang Hyena",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5985,
		},
		[48854] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ymirjar Flesh Hunter",
			["npcID"] = 26670,
		},
		[52740] = {
			["encounterName"] = "General Bjarngrim",
			["source"] = "Hardened Steel Berserker",
			["encounterID"] = 555,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28579,
		},
		[17195] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bound Fire Elemental",
			["npcID"] = 30416,
		},
		[54850] = {
			["encounterName"] = "Drakkari Colossus",
			["source"] = "Drakkari Colossus",
			["encounterID"] = 385,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29307,
		},
		[20296] = {
			["source"] = "Scarlet Evoker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4289,
		},
		[55937] = {
			["source"] = "Orinoko Tuskbreaker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30020,
		},
		[15530] = {
			["source"] = "Amnennar the Coldbringer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7358,
		},
		[15620] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Baelog",
			["npcID"] = 6906,
		},
		[51612] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Rune Scholar",
			["npcID"] = 27964,
		},
		[58462] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azure Spellbreaker",
			["npcID"] = 31009,
		},
		[76325] = {
			["source"] = "Twilight Flame Caller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39708,
		},
		[95826] = {
			["source"] = "Mor'shan Defender",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33201,
		},
		[8040] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lady Anacondra",
			["npcID"] = 3671,
		},
		[38557] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "High Road Scout",
			["npcID"] = 37159,
		},
		[30686] = {
			["encounterName"] = "Omor the Unscarred",
			["source"] = "Omor the Unscarred",
			["encounterID"] = 1891,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17308,
		},
		[22686] = {
			["encounterName"] = "King Dred",
			["source"] = "King Dred",
			["npcID"] = 27483,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 373,
		},
		[13321] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Felhound Manastalker",
			["npcID"] = 17401,
		},
		[17435] = {
			["source"] = "Lord Aurius Rivendare",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45412,
		},
		[31281] = {
			["source"] = "Bloodwash Enchantress",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41387,
		},
		[57076] = {
			["source"] = "Yggdras",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 30014,
		},
		[32888] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Raging Soul",
			["npcID"] = 18506,
		},
		[49555] = {
			["encounterName"] = "Trollgore",
			["source"] = "Trollgore",
			["npcID"] = 26630,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 369,
		},
		[33975] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Instructor Galford",
			["npcID"] = 10811,
		},
		[96437] = {
			["source"] = "Ashenvale Skirmisher",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 33193,
		},
		[22662] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alzzin the Wildshaper",
			["npcID"] = 11492,
		},
		[22678] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ras Frostwhisper",
			["npcID"] = 10508,
		},
		[8286] = {
			["source"] = "Aggem Thorncurse",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4424,
		},
		[22710] = {
			["source"] = "Lethtendris",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 14327,
		},
		[54369] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zuramat the Obliterator",
			["npcID"] = 29314,
		},
		[49544] = {
			["encounterName"] = "The Prophet Tharon'ja",
			["source"] = "The Prophet Tharon'ja",
			["npcID"] = 26632,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 375,
		},
		[10452] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Earthen Sculptor",
			["npcID"] = 7012,
		},
		[16000] = {
			["source"] = "Celebrian Dryad",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11793,
		},
		[91032] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mine Bunny",
			["npcID"] = 48351,
		},
		[2601] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowforge Senator",
			["npcID"] = 8904,
		},
		[49704] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darkweb Recluse",
			["npcID"] = 26625,
		},
		[6257] = {
			["source"] = "Hired Looter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 35234,
		},
		[85737] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Pome Wraith",
			["npcID"] = 44488,
		},
		[12466] = {
			["source"] = "Cho'Rush the Observer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 14324,
		},
		[68207] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Poison Spitter",
			["npcID"] = 35896,
		},
		[3636] = {
			["source"] = "Greystone Basilisk",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 35245,
		},
		[8398] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ras Frostwhisper",
			["npcID"] = 10508,
		},
		[60158] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azure Raider",
			["npcID"] = 30668,
		},
		[15575] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wrath Hammer Construct",
			["npcID"] = 8907,
		},
		[33624] = {
			["source"] = "Stormwind Mage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 18949,
		},
		[48873] = {
			["encounterName"] = "King Dred",
			["source"] = "King Dred",
			["npcID"] = 27483,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 373,
		},
		[17883] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coilfang Observer",
			["npcID"] = 17938,
		},
		[49711] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Drakkari Handler",
			["npcID"] = 26637,
		},
		[84426] = {
			["source"] = "Gomegaz",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41166,
		},
		[8142] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Verdan the Everliving",
			["npcID"] = 5775,
		},
		[5262] = {
			["source"] = "Burning Blade Fanatic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 3197,
		},
		[48895] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Drakkari Shaman",
			["npcID"] = 26639,
		},
		[90559] = {
			["encounterName"] = "\"Captain\" Cookie",
			["source"] = "\"Captain\" Cookie",
			["npcID"] = 47739,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1060,
		},
		[32173] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coilfang Enchantress",
			["npcID"] = 17961,
		},
		[76008] = {
			["encounterName"] = "Lady Naz'jar",
			["source"] = "Lady Naz'jar",
			["encounterID"] = 1045,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40586,
		},
		[58688] = {
			["encounterName"] = "Cyanigosa",
			["source"] = "Cyanigosa",
			["npcID"] = 31134,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 545,
		},
		[38618] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Horgrenn Hellcleave",
			["npcID"] = 27718,
		},
		[13748] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Residual Monstrosity",
			["npcID"] = 11484,
		},
		[56862] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Bound Water Elemental",
			["npcID"] = 30419,
		},
		[79726] = {
			["source"] = "Nethergarde Engineer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5997,
		},
		[68208] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Poison Spitter",
			["npcID"] = 35896,
		},
		[19645] = {
			["source"] = "Wailing Banshee",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10464,
		},
		[66290] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Balnazzar",
			["npcID"] = 10813,
		},
		[76584] = {
			["source"] = "Twilight Zealot",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 39990,
		},
		[9435] = {
			["source"] = "Arcanist Doan",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 6487,
		},
		[9613] = {
			["source"] = "Scarlet Scryer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4293,
		},
		[34829] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Thane Torvald Eriksson",
			["npcID"] = 27377,
		},
		[52774] = {
			["source"] = "Stormforged Lieutenant",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29240,
		},
		[56898] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Twilight Darkcaster",
			["npcID"] = 30319,
		},
		[47723] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["npcID"] = 26928,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 520,
		},
		[13745] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Doomforge Arcanasmith",
			["npcID"] = 8900,
		},
		[15799] = {
			["source"] = "Smolderthorn Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 9239,
		},
		[51240] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Risen Drakkari Death Knight",
			["npcID"] = 26830,
		},
		[116] = {
			["npcID"] = 188027,
		},
		[49816] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kvaldir Mistweaver",
			["npcID"] = 25479,
		},
		[42740] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonflayer Runecaster",
			["npcID"] = 23960,
		},
		[68209] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Freezya",
			["npcID"] = 35897,
		},
		[12739] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scholomance Neophyte",
			["npcID"] = 10470,
		},
		[49034] = {
			["encounterName"] = "Novos the Summoner",
			["source"] = "Novos the Summoner",
			["npcID"] = 26631,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 371,
		},
		[50089] = {
			["encounterName"] = "Novos the Summoner",
			["source"] = "Novos the Summoner",
			["npcID"] = 26631,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 371,
		},
		[32749] = {
			["source"] = "Scarlet Wizard",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4300,
		},
		[32422] = {
			["encounterName"] = "Exarch Maladaar",
			["source"] = "Exarch Maladaar",
			["npcID"] = 18373,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1889,
		},
		[53318] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Anub'ar Crusher",
			["npcID"] = 28922,
		},
		[54309] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Anub'ar Prime Guard",
			["npcID"] = 29128,
		},
		[32858] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Auchenai Soulpriest",
			["npcID"] = 18493,
		},
		[20823] = {
			["source"] = "Scarlet Conjuror",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4297,
		},
		[79825] = {
			["source"] = "Felspore Bog Lord",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 45125,
		},
		[13901] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darkcrest Sorceress",
			["npcID"] = 19947,
		},
		[42723] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["npcID"] = 23954,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 575,
		},
		[51432] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ymirjar Necromancer",
			["npcID"] = 28368,
		},
		[8365] = {
			["source"] = "Twilight Loreseeker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4812,
		},
		[51496] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dark Rune Shaper",
			["npcID"] = 27965,
		},
		[90978] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Defias Reaper",
			["npcID"] = 47403,
		},
		[89757] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Defias Cannon",
			["npcID"] = 48266,
		},
		[36247] = {
			["source"] = "Jarroc Torn-Wing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41164,
		},
		[11899] = {
			["source"] = "Sandfury Witch Doctor",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5650,
		},
		[56698] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ahn'kahar Spell Flinger",
			["npcID"] = 30278,
		},
		[7645] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lady Illucia Barov",
			["npcID"] = 10502,
		},
		[49113] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wyrmrest Temple Drake",
			["npcID"] = 26925,
		},
		[16006] = {
			["source"] = "Revelosh",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 6910,
		},
		[20793] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Boulderslide Geomancer",
			["npcID"] = 11917,
		},
		[21832] = {
			["source"] = "Princess Theradras",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 12201,
		},
		[20825] = {
			["source"] = "Bloodmage Thalnos",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4543,
		},
		[22887] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Murkblood Spearman",
			["npcID"] = 17729,
		},
		[12890] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shade of Eranikus",
			["npcID"] = 5709,
		},
		[52703] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lightning Sentry",
			["npcID"] = 26407,
		},
		[17820] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lord Alexei Barov",
			["npcID"] = 10504,
		},
		[79400] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Brinescale Serpent",
			["npcID"] = 39948,
		},
		[17294] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ezra Grimm",
			["npcID"] = 11058,
		},
		[12737] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mage Hunter Ascendant",
			["npcID"] = 26727,
		},
		[22938] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mana Burst",
			["npcID"] = 14397,
		},
		[32424] = {
			["encounterName"] = "Exarch Maladaar",
			["source"] = "Exarch Maladaar",
			["npcID"] = 18373,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1889,
		},
		[30633] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crystalline Protector",
			["npcID"] = 26792,
		},
		[11443] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scholomance Acolyte",
			["npcID"] = 10471,
		},
		[11431] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lord Pythas",
			["npcID"] = 3670,
		},
		[14900] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Aggem Thorncurse",
			["npcID"] = 4424,
		},
		[49317] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Azure Drake",
			["npcID"] = 27682,
		},
		[31948] = {
			["encounterName"] = "Rokmar the Crackler",
			["source"] = "Rokmar the Crackler",
			["npcID"] = 17991,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1941,
		},
		[31405] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Murkblood Oracle",
			["npcID"] = 17771,
		},
		[90398] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Defias Squallshaper",
			["npcID"] = 48521,
		},
		[50378] = {
			["encounterName"] = "Trollgore",
			["source"] = "Scourge Reanimator",
			["npcID"] = 26626,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 369,
		},
		[42708] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["npcID"] = 23954,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 575,
		},
		[56580] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Deep Crawler",
			["npcID"] = 30279,
		},
		[84451] = {
			["source"] = "Jarroc Torn-Wing",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41164,
		},
		[31407] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Murkblood Spearman",
			["npcID"] = 17729,
		},
		[20824] = {
			["source"] = "Razorfen Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4520,
		},
		[9734] = {
			["source"] = "Murta Grimgut",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7608,
		},
		[16247] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lethtendris",
			["npcID"] = 14327,
		},
		[79721] = {
			["source"] = "Nethergarde Engineer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5997,
		},
		[91038] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mining Monkey",
			["npcID"] = 48278,
		},
		[6605] = {
			["source"] = "Plaguebat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8600,
		},
		[79913] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grimtotem Ruffian",
			["npcID"] = 11910,
		},
		[31554] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Coilfang Defender",
			["npcID"] = 17958,
		},
		[8399] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "High Inquisitor Fairbanks",
			["npcID"] = 4542,
		},
		[43665] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonflayer Heartsplitter",
			["npcID"] = 24071,
		},
		[52904] = {
			["source"] = "Titanium Thunderer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28965,
		},
		[17293] = {
			["source"] = "Instructor Galford",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10811,
		},
		[88481] = {
			["encounterName"] = "Foe Reaper 5000",
			["source"] = "Foe Reaper 5000",
			["npcID"] = 43778,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1063,
		},
		[9482] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Galgann Firehammer",
			["npcID"] = 7291,
		},
		[6907] = {
			["source"] = "Jade Ooze",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 2656,
		},
		[36040] = {
			["source"] = "Shahandana",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41165,
		},
		[10277] = {
			["source"] = "Murkgill Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4458,
		},
		[8376] = {
			["source"] = "Razorfen Totemic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4440,
		},
		[49922] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Kvaldir Mist Lord",
			["npcID"] = 25496,
		},
		[84837] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Oostan Headhunter",
			["npcID"] = 38811,
		},
		[33787] = {
			["encounterName"] = "Mennu the Betrayer",
			["source"] = "Coilfang Collaborator",
			["npcID"] = 17962,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1939,
		},
		[79850] = {
			["source"] = "Dreadmaul Ogre Mage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5975,
		},
		[6685] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowforge Sharpshooter",
			["npcID"] = 7290,
		},
		[32860] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Auchenai Soulpriest",
			["npcID"] = 18493,
		},
		[88495] = {
			["encounterName"] = "Foe Reaper 5000",
			["source"] = "Foe Reaper 5000",
			["npcID"] = 43778,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1063,
		},
		[42131] = {
			["source"] = "Twilight Nightblade",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42707,
		},
		[49309] = {
			["source"] = "Wildhammer Shaman",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 42554,
		},
		[50379] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scourge Reanimator",
			["npcID"] = 26626,
		},
		[22744] = {
			["source"] = "Eldreth Apparition",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11471,
		},
		[16590] = {
			["source"] = "Dark Summoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8551,
		},
		[75439] = {
			["source"] = "Vilebranch Shadow Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 2645,
		},
		[89697] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Defias Cannon",
			["npcID"] = 48266,
		},
		[17613] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scholomance Acolyte",
			["npcID"] = 10471,
		},
		[15472] = {
			["source"] = "Anub'shiah",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 9031,
		},
		[60833] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Forgotten One",
			["npcID"] = 30414,
		},
		[6725] = {
			["source"] = "Death's Head Geomancer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 7335,
		},
		[38391] = {
			["source"] = "Searing Destroyer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46260,
		},
		[54791] = {
			["source"] = "Maleki the Pallid",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10438,
		},
		[49708] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darkweb Recluse",
			["npcID"] = 26625,
		},
		[12468] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Jammal'an the Prophet",
			["npcID"] = 5710,
		},
		[45578] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Warsong Marksman",
			["npcID"] = 25244,
		},
		[5605] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stonevault Oracle",
			["npcID"] = 4852,
		},
		[37624] = {
			["source"] = "Dreadlord Defiler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41471,
		},
		[54983] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Proto-Drake Handler",
			["npcID"] = 24082,
		},
		[12491] = {
			["source"] = "Ward Guardian",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4427,
		},
		[79883] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hearthglen Trainee",
			["npcID"] = 45162,
		},
		[93468] = {
			["encounterName"] = "Baron Ashbury",
			["source"] = "Baron Ashbury",
			["npcID"] = 46962,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1069,
		},
		[30853] = {
			["source"] = "Shadowmoon Summoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17395,
		},
		[7739] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Stonevault Flameweaver",
			["npcID"] = 7321,
		},
		[49037] = {
			["encounterName"] = "Novos the Summoner",
			["source"] = "Novos the Summoner",
			["npcID"] = 26631,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 371,
		},
		[50092] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Syreian the Bonecarver",
			["npcID"] = 32438,
		},
		[36631] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Nexus Watcher",
			["npcID"] = 24770,
		},
		[76719] = {
			["source"] = "Incendiary Spark",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 40021,
		},
		[18763] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ras Frostwhisper",
			["npcID"] = 10508,
		},
		[32829] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unliving Stalker",
			["npcID"] = 18501,
		},
		[15043] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Scholomance Adept",
			["npcID"] = 10469,
		},
		[18702] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darkmaster Gandling",
			["npcID"] = 1853,
		},
		[20800] = {
			["source"] = "Jergosh the Invoker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11518,
		},
		[90555] = {
			["encounterName"] = "\"Captain\" Cookie",
			["source"] = "\"Captain\" Cookie",
			["npcID"] = 47739,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1060,
		},
		[90560] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "\"Captain\" Cookie",
			["npcID"] = 47739,
		},
		[84392] = {
			["source"] = "Oath-Chained Infernal",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 41253,
		},
		[55077] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Savage Worg",
			["npcID"] = 29735,
		},
		[14033] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Eldreth Darter",
			["npcID"] = 14398,
		},
		[23224] = {
			["encounterName"] = "Baron Silverlaine",
			["source"] = "Baron Silverlaine",
			["npcID"] = 3887,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1070,
		},
		[54290] = {
			["encounterName"] = "Hadronox",
			["event"] = "SPELL_CAST_START",
			["source"] = "Anub'ar Webspinner",
			["npcID"] = 29335,
		},
		[8814] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Shadowforge Geologist",
			["npcID"] = 7030,
		},
		[15982] = {
			["source"] = "Spirestone Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 9198,
		},
		[12675] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Seeth'rel",
			["npcID"] = 9038,
		},
		[85710] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alliance Fox Hunter",
			["npcID"] = 44432,
		},
		[87861] = {
			["encounterName"] = "Glubtok",
			["source"] = "Glubtok",
			["npcID"] = 47162,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1064,
		},
		[50198] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mage Hunter Initiate",
			["npcID"] = 26728,
		},
		[15242] = {
			["source"] = "Pusillin",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 14354,
		},
		[7896] = {
			["source"] = "Wildspawn Betrayer",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11454,
		},
		[43667] = {
			["encounterName"] = "Prince Keleseth",
			["source"] = "Prince Keleseth",
			["npcID"] = 23953,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 571,
		},
		[16429] = {
			["source"] = "Thuzadin Shadowcaster",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 10398,
		},
		[31600] = {
			["source"] = "Crypt Stalker",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8555,
		},
		[48878] = {
			["encounterName"] = "King Dred",
			["source"] = "King Dred",
			["npcID"] = 27483,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 373,
		},
		[42772] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonflayer Strategist",
			["npcID"] = 23956,
		},
		[42669] = {
			["encounterName"] = "Ingvar the Plunderer",
			["source"] = "Ingvar the Plunderer",
			["npcID"] = 23954,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 575,
		},
		[7279] = {
			["source"] = "The Reak",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8212,
		},
		[57825] = {
			["source"] = "Eldreth Apparition",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11471,
		},
		[9573] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hurley Blackbreath",
			["npcID"] = 9537,
		},
		[32735] = {
			["source"] = "Mo'arg Forgefiend",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 16946,
		},
		[6917] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Wildthorn Venomspitter",
			["npcID"] = 3820,
		},
		[49668] = {
			["encounterName"] = "Novos the Summoner",
			["source"] = "Crystal Handler",
			["npcID"] = 26627,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 371,
		},
		[7948] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Alzzin the Wildshaper",
			["npcID"] = 11492,
		},
		[13608] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Silverbrook Trapper",
			["npcID"] = 26679,
		},
		[53322] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Anub'ar Crypt Fiend",
			["npcID"] = 29097,
		},
		[50504] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Arcane Serpent",
			["npcID"] = 25721,
		},
		[77576] = {
			["source"] = "Deatheye",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 8302,
		},
		[11836] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gahz'rilla",
			["npcID"] = 7273,
		},
		[31975] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unliving Stalker",
			["npcID"] = 18501,
		},
		[30851] = {
			["source"] = "Shadowmoon Summoner",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 17395,
		},
		[84333] = {
			["source"] = "Dreadmaul Mauler",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 5977,
		},
		[49106] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Ymirjar Berserker",
			["npcID"] = 26696,
		},
		[55624] = {
			["source"] = "Drakkari God Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29820,
		},
		[93857] = {
			["encounterName"] = "Baron Silverlaine",
			["source"] = "Baron Silverlaine",
			["npcID"] = 3887,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 1070,
		},
		[11892] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Grimlok",
			["npcID"] = 4854,
		},
		[52209] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Dragonflayer Flamebinder",
			["npcID"] = 27259,
		},
		[80750] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Balnazzar",
			["npcID"] = 10813,
		},
		[49537] = {
			["encounterName"] = "The Prophet Tharon'ja",
			["source"] = "The Prophet Tharon'ja",
			["npcID"] = 26632,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 375,
		},
		[33417] = {
			["source"] = "Stormwind Mage",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 18949,
		},
		[86620] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Hogger",
			["npcID"] = 46254,
		},
		[47696] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Crazed Mana-Surge",
			["npcID"] = 26737,
		},
		[59146] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Willey Hopebreaker",
			["npcID"] = 10997,
		},
		[52705] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Charged Sentry Totem",
			["npcID"] = 28938,
		},
		[54524] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Zuramat the Obliterator",
			["npcID"] = 29314,
		},
		[51363] = {
			["encounterName"] = "Novos the Summoner",
			["source"] = "Risen Shadowcaster",
			["npcID"] = 27600,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 371,
		},
		[4971] = {
			["source"] = "Razorfen Totemic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 4440,
		},
		[14034] = {
			["source"] = "Pimgib",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 14349,
		},
		[4979] = {
			["source"] = "Bloodscalp Mystic",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 701,
		},
		[86633] = {
			["source"] = "Lord Overheat",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 46264,
		},
		[47731] = {
			["encounterName"] = "Grand Magus Telestra",
			["source"] = "Grand Magus Telestra",
			["npcID"] = 26929,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 520,
		},
		[71657] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Mechachicken",
			["npcID"] = 38224,
		},
		[23381] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Lady Anacondra",
			["npcID"] = 3671,
		},
		[74613] = {
			["source"] = "Vilebranch Shadow Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 2645,
		},
		[15228] = {
			["source"] = "Wildspawn Hellcaller",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 11457,
		},
		[17950] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Darkmaster Gandling",
			["npcID"] = 1853,
		},
		[7057] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Haunted Servitor",
			["npcID"] = 3875,
		},
		[32863] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Auchenai Necromancer",
			["npcID"] = 18702,
		},
		[21067] = {
			["source"] = "Poison Sprite",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 12216,
		},
		[50900] = {
			["encounterName"] = "Sjonnir the Ironshaper",
			["source"] = "Forged Iron Trogg",
			["npcID"] = 27979,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 569,
		},
		[48258] = {
			["encounterName"] = "Svala Sorrowgrave",
			["source"] = "Svala Sorrowgrave",
			["npcID"] = 26668,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 577,
		},
		[52780] = {
			["encounterName"] = "Ionar",
			["source"] = "Ionar",
			["encounterID"] = 559,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28546,
		},
		[52770] = {
			["encounterName"] = "Ionar",
			["source"] = "Ionar",
			["encounterID"] = 559,
			["event"] = "SPELL_CAST_START",
			["npcID"] = 28546,
		},
		[15537] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Master Necromancer",
			["npcID"] = 27732,
		},
		[52524] = {
			["encounterName"] = "Krik'thir the Gatewatcher",
			["source"] = "Watcher Narjil",
			["npcID"] = 28729,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 216,
		},
		[55625] = {
			["source"] = "Drakkari God Hunter",
			["event"] = "SPELL_CAST_START",
			["npcID"] = 29820,
		},
		[61353] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Garl Grimgrizzle",
			["npcID"] = 32710,
		},
		[81026] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gnash",
			["npcID"] = 40987,
		},
		[79413] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Gilblin Collector",
			["npcID"] = 41017,
		},
		[57799] = {
			["encounterName"] = "Herald Volazj",
			["source"] = "Twisted Visage",
			["npcID"] = 30621,
			["event"] = "SPELL_CAST_START",
			["encounterID"] = 215,
		},
		[34302] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Unstable Voidwalker",
			["npcID"] = 20145,
		},
		[86405] = {
			["event"] = "SPELL_CAST_START",
			["source"] = "Warden Azjakir",
			["npcID"] = 41530,
		},
	},
	["performance_units"] = {
		[176920] = true,
		[214441] = true,
		[211306] = true,
		[196642] = true,
		[167999] = true,
		[189707] = true,
	},
	["InterruptableSpells"] = {
		[32846] = true,
		[96231] = true,
		[32747] = true,
		[11972] = true,
		[6552] = true,
		[57994] = true,
		[1766] = true,
		[97547] = true,
		[56730] = true,
		[47528] = true,
		[26090] = true,
		[91807] = true,
		[31935] = true,
		[15615] = true,
		[93985] = true,
		[7074] = true,
		[2139] = true,
		[19647] = true,
		[42708] = true,
	},
	["profiles"] = {
		["Default"] = {
			["focus_as_target_alpha"] = true,
			["show_softinteract_icons"] = false,
			["aura_show_only_short_dispellable_on_players"] = true,
			["aura_x_offset"] = 0,
			["saved_cvars_last_change"] = {
				["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:4295",
				["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:4296",
				["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:4297",
				["nameplateShowEnemies"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"NAMEPLATES\"]:6: in function <[string \"NAMEPLATES\"]:1>\n",
				["nameplateNotSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:4298",
				["nameplateRemovalAnimation"] = "Interface/AddOns/Plater/Plater.lua:4299",
			},
			["health_selection_overlay_color"] = {
				0, -- [1]
				0.458823561668396, -- [2]
			},
			["transparency_behavior"] = 3,
			["hover_highlight_alpha"] = 0.1499999910593033,
			["indicator_raidmark_scale"] = 0.9999999403953552,
			["stacking_nameplates_enabled"] = false,
			["aura2_y_offset"] = 5,
			["aura_timer_text_anchor"] = {
				["side"] = 1,
			},
			["plate_config"] = {
				["global_health_height"] = 7,
				["friendlyplayer"] = {
					["actorname_use_friends_color"] = false,
					["spellpercent_text_font"] = "FORCED SQUARE",
					["actorname_use_class_color"] = true,
					["big_actortitle_text_font"] = "FORCED SQUARE",
					["cast"] = {
						nil, -- [1]
						4, -- [2]
					},
					["percent_text_ooc"] = true,
					["big_actortitle_text_size"] = 9,
					["big_actortitle_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["cast_incombat"] = {
						nil, -- [1]
						24, -- [2]
					},
					["spellname_text_outline"] = "OUTLINE",
					["big_actorname_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["big_actortitle_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["percent_text_anchor"] = {
						["y"] = 0.5999984741210938,
					},
					["level_text_font"] = "FORCED SQUARE",
					["actorname_text_font"] = "FORCED SQUARE",
					["big_actorname_text_outline"] = "OUTLINE",
					["big_actorname_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["quest_color_neutral"] = {
						0, -- [1]
						1, -- [2]
						0.0784313753247261, -- [3]
						1, -- [4]
					},
					["mana_incombat"] = {
						nil, -- [1]
						4, -- [2]
					},
					["percent_text_enabled"] = true,
					["actorname_use_guild_color"] = false,
					["all_names"] = true,
					["actorname_text_outline"] = "NONE",
					["percent_show_health"] = true,
					["quest_color_enemy"] = {
						0.01176470704376698, -- [1]
						1, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["big_actortitle_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 8,
					["percent_text_font"] = "FORCED SQUARE",
					["buff_frame_y_offset"] = 0,
					["spellname_text_font"] = "FORCED SQUARE",
					["quest_enabled"] = true,
					["mana"] = {
						nil, -- [1]
						4, -- [2]
					},
					["big_actorname_text_size"] = 9,
					["quest_color_enabled"] = true,
					["health_incombat"] = {
						80, -- [1]
						7, -- [2]
					},
					["health"] = {
						80, -- [1]
						7, -- [2]
					},
					["big_actorname_text_font"] = "FORCED SQUARE",
					["actorname_text_anchor"] = {
						["side"] = 4,
					},
					["actorname_text_size"] = 9,
					["level_text_alpha"] = 1,
					["level_text_enabled"] = true,
				},
				["global_health_width"] = 80,
				["enemynpc"] = {
					["actorname_text_font"] = "FORCED SQUARE",
					["big_actorname_text_size"] = 9,
					["spellpercent_text_font"] = "FORCED SQUARE",
					["quest_color_neutral"] = {
						0.458823561668396, -- [1]
						0, -- [2]
						1, -- [3]
					},
					["level_text_size"] = 10,
					["big_actortitle_text_font"] = "FORCED SQUARE",
					["cast"] = {
						80, -- [1]
						4, -- [2]
					},
					["spellpercent_text_size"] = 10,
					["big_actortitle_text_size"] = 9,
					["level_text_alpha"] = 1,
					["spellpercent_text_enabled"] = false,
					["actorname_text_spacing"] = 8,
					["percent_text_font"] = "FORCED SQUARE",
					["cast_incombat"] = {
						80, -- [1]
						8, -- [2]
					},
					["quest_color_enemy"] = {
						nil, -- [1]
						0, -- [2]
						0.9058824181556702, -- [3]
					},
					["actorname_text_size"] = 9,
					["health_incombat"] = {
						80, -- [1]
						7, -- [2]
					},
					["health"] = {
						80, -- [1]
						7, -- [2]
					},
					["spellname_text_size"] = 10,
					["spellname_text_font"] = "FORCED SQUARE",
					["percent_text_anchor"] = {
						["y"] = 0.5999984741210938,
					},
					["level_text_font"] = "FORCED SQUARE",
					["big_actorname_text_font"] = "FORCED SQUARE",
				},
				["enemyplayer"] = {
					["cast"] = {
						80, -- [1]
					},
					["cast_incombat"] = {
						80, -- [1]
					},
					["health"] = {
						80, -- [1]
						7, -- [2]
					},
					["health_incombat"] = {
						80, -- [1]
						7, -- [2]
					},
				},
				["friendlynpc"] = {
					["actorname_use_friends_color"] = false,
					["spellpercent_text_font"] = "FORCED SQUARE",
					["show_guild_name"] = false,
					["actorname_use_class_color"] = true,
					["big_actortitle_text_font"] = "FORCED SQUARE",
					["cast"] = {
						80, -- [1]
						4, -- [2]
					},
					["percent_text_ooc"] = true,
					["big_actortitle_text_size"] = 9,
					["fixed_class_color"] = {
						0, -- [1]
						1, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["big_actorname_text_color"] = {
						0, -- [1]
						nil, -- [2]
						0.9725490808486938, -- [3]
						1, -- [4]
					},
					["cast_incombat"] = {
						80, -- [1]
						24, -- [2]
					},
					["spellname_text_outline"] = "OUTLINE",
					["click_through"] = true,
					["percent_text_anchor"] = {
						["y"] = 0.5999984741210938,
					},
					["level_text_font"] = "FORCED SQUARE",
					["actorname_text_font"] = "FORCED SQUARE",
					["quest_color_neutral"] = {
						0, -- [1]
						1, -- [2]
						0.0784313753247261, -- [3]
						1, -- [4]
					},
					["actorname_text_size"] = 6,
					["percent_text_enabled"] = true,
					["actorname_use_guild_color"] = false,
					["percent_show_health"] = true,
					["actorname_text_spacing"] = 5,
					["only_damaged"] = false,
					["quest_color_enemy"] = {
						0.01176470704376698, -- [1]
						1, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["actorname_guild_color"] = {
						0.498039, -- [1]
						1, -- [2]
						0.2, -- [3]
						1, -- [4]
					},
					["only_thename"] = false,
					["spellname_text_font"] = "FORCED SQUARE",
					["actorname_friend_color"] = {
						0.71, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["big_actorname_text_size"] = 8,
					["health_incombat"] = {
						50, -- [1]
						1, -- [2]
					},
					["health"] = {
						50, -- [1]
						1, -- [2]
					},
					["percent_text_font"] = "FORCED SQUARE",
					["big_actorname_text_font"] = "FORCED SQUARE",
					["actorname_text_anchor"] = {
						["side"] = 4,
					},
					["level_text_alpha"] = 1,
					["level_text_enabled"] = true,
				},
			},
			["aura_y_offset"] = 5,
			["use_ui_parent"] = true,
			["aura_tracker"] = {
				["buff_tracked"] = {
					[209859] = true,
				},
			},
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Hide Neutral Units"] = 1,
				["Cast Bar Icon Config"] = 2,
				["Execute Range"] = 1,
				["Combo Points"] = 6,
				["Attacking Specific Unit"] = 2,
				["Target Color"] = 3,
				["Aura Reorder"] = 3,
				["Extra Border"] = 2,
			},
			["expansion_triggerwipe"] = {
				[3] = true,
			},
			["focus_texture"] = "Blizzard",
			["update_throttle"] = 0.09558455646038055,
			["color_override_colors"] = {
				[3] = {
					0.917647123336792, -- [1]
					0.05882353335618973, -- [2]
					0, -- [3]
				},
			},
			["resources_settings"] = {
				["chr"] = {
					["Player-4476-05973846"] = "ComboPoints",
					["Player-4476-05996225"] = "ArcaneCharges",
					["Player-4467-04A86427"] = "ComboPoints",
				},
			},
			["npc_cache"] = {
				[13601] = {
					"Tinkerer Gizlock", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[4511] = {
					"Agam'ar", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4515] = {
					"Death's Head Acolyte", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4517] = {
					"Death's Head Priest", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4519] = {
					"Death's Head Seer", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[7076] = {
					"Earthen Guardian", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[4523] = {
					"Razorfen Groundshaker", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4525] = {
					"Razorfen Earthbreaker", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[46260] = {
					"Searing Destroyer", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[6575] = {
					"Scarlet Trainee", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[13142] = {
					"Deeprot Tangler", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[5048] = {
					"Deviate Adder", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[4539] = {
					"Greater Kraul Bat", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4541] = {
					"Blood of Agamaggan", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4543] = {
					"Bloodmage Thalnos", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[5056] = {
					"Deviate Dreadfang", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[510] = {
					"Wasserelementar", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[46963] = {
					"Lord Walden", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[3560] = {
					"Healing Ward", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[12216] = {
					"Poison Sprite", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[12220] = {
					"Constrictor Vine", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[46261] = {
					"Enraged Fire Elemental", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[13282] = {
					"Noxxion", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[48417] = {
					"Defias Blood Wizard", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[46964] = {
					"Lord Godfrey", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[4623] = {
					"Quilguard Champion", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4625] = {
					"Death's Head Ward Keeper", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[11793] = {
					"Celebrian Dryad", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[51659] = {
					"Scarlet Monk", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[47140] = {
					"Sorcerous Skeleton", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[11318] = {
					"Ragefire Trogg", -- [1]
					"Ragefire Chasm", -- [2]
					"enUS", -- [3]
				},
				[11322] = {
					"Searing Blade Cultist", -- [1]
					"Ragefire Chasm", -- [2]
					"enUS", -- [3]
				},
				[7206] = {
					"Ancient Stone Keeper", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[46262] = {
					"Rumbling Earth", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[48338] = {
					"Mine Bunny", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[48418] = {
					"Defias Envoker", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[7228] = {
					"Ironaya", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[48450] = {
					"Sunwing Squawker", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[51660] = {
					"Scarlet Chaplain", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[47141] = {
					"Dread Scryer", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[3636] = {
					"Deviate Ravager", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[3637] = {
					"Deviate Guardian", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[3640] = {
					"Evolving Ectoplasm", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[46263] = {
					"Slag Fury", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[5755] = {
					"Deviate Viper", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[46375] = {
					"Rowdy Troublemaker", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[5761] = {
					"Deviate Shambler", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[5763] = {
					"Nightmare Ectoplasm", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[3653] = {
					"Kresh", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[3654] = {
					"Mutanus the Devourer", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[5775] = {
					"Verdan the Everliving", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[7320] = {
					"Stonevault Mauler", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[3669] = {
					"Lord Cobrahn", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[3670] = {
					"Lord Pythas", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[3671] = {
					"Lady Anacondra", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[3673] = {
					"Lord Serpentis", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[3674] = {
					"Skum", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[4278] = {
					"Commander Springvale", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[3680] = {
					"Serpentbloom Snake", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[4799] = {
					"Fallenroot Hellcaller", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4290] = {
					"Scarlet Guardsman", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4292] = {
					"Scarlet Protector", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4294] = {
					"Scarlet Sorcerer", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4807] = {
					"Blackfathom Myrmidon", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4809] = {
					"Twilight Acolyte", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4300] = {
					"Scarlet Wizard", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4813] = {
					"Twilight Shadowmage", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4815] = {
					"Murkshallow Snapclaw", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4306] = {
					"Scarlet Torturer", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4819] = {
					"Blindlight Muckdweller", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4821] = {
					"Skittering Crustacean", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4823] = {
					"Barbed Crustacean", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4825] = {
					"Aku'mai Snapjaw", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4827] = {
					"Deep Pool Threshfin", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4829] = {
					"Aku'mai", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[47143] = {
					"Spitebone Skeleton", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[48229] = {
					"Kobold Digger", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[7396] = {
					"Earthen Stonebreaker", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[4847] = {
					"Shadowforge Relic Hunter", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[4849] = {
					"Shadowforge Archaeologist", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[4853] = {
					"Stonevault Geomancer", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[4855] = {
					"Stonevault Brawler", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[4857] = {
					"Stone Keeper", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[4861] = {
					"Shrike Bat", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[6907] = {
					"Eric \"The Swift\"", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[50561] = {
					"Bloodthirsty Ghoul", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[11790] = {
					"Putridus Satyr", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[11794] = {
					"Sister of Celebras", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[4887] = {
					"Ghamoo-Ra", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[6426] = {
					"Anguished Dead", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[11319] = {
					"Ragefire Shaman", -- [1]
					"Ragefire Chasm", -- [2]
					"enUS", -- [3]
				},
				[11323] = {
					"Searing Blade Enforcer", -- [1]
					"Ragefire Chasm", -- [2]
					"enUS", -- [3]
				},
				[48262] = {
					"Ogre Bodyguard", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[48278] = {
					"Mining Monkey", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[46250] = {
					"Riverpaw Poacher", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[12876] = {
					"Baron Aquanis", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4420] = {
					"Overlord Ramtusk", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4422] = {
					"Agathelos the Raging", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4424] = {
					"Aggem Thorncurse", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[48502] = {
					"Defias Enforcer", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[4428] = {
					"Death Speaker Jargba", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4436] = {
					"Razorfen Quilguard", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4438] = {
					"Razorfen Spearhide", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4440] = {
					"Razorfen Totemic", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4442] = {
					"Razorfen Defender", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[6490] = {
					"Azshir the Sleepless", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[47145] = {
					"Spitebone Guardian", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[7011] = {
					"Earthen Rocksmasher", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[48279] = {
					"Goblin Overseer", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[46251] = {
					"Riverpaw Looter", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[4977] = {
					"Murkshallow Softshell", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[7023] = {
					"Obsidian Sentinel", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[46379] = {
					"Vicious Thug", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[6017] = {
					"Lava Spout Totem", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[11519] = {
					"Bazzalan", -- [1]
					"Ragefire Chasm", -- [2]
					"enUS", -- [3]
				},
				[6035] = {
					"Razorfen Stalker", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[8996] = {
					"Voidwalker Minion", -- [1]
					"Ragefire Chasm", -- [2]
					"enUS", -- [3]
				},
				[47146] = {
					"Spitebone Flayer", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[47162] = {
					"Glubtok", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[4516] = {
					"Death's Head Adept", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4518] = {
					"Death's Head Sage", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4520] = {
					"Razorfen Geomancer", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4522] = {
					"Razorfen Dustweaver", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4526] = {
					"Wind Howler", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4528] = {
					"Stone Rumbler", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4530] = {
					"Razorfen Handler", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4538] = {
					"Kraul Bat", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4540] = {
					"Scarlet Monk", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4542] = {
					"High Inquisitor Fairbanks", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[5055] = {
					"Deviate Lasher", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[48440] = {
					"Mining Monkey", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[47626] = {
					"Admiral Ripsnarl", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[47131] = {
					"Frantic Geist", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[12218] = {
					"Vile Larva", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[12222] = {
					"Creeping Sludge", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[43778] = {
					"Foe Reaper 5000", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[12258] = {
					"Razorlash", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[3840] = {
					"Druid of the Fang", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[46381] = {
					"Shifty Thief", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[48441] = {
					"Mining Monkey", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[48505] = {
					"Defias Shadowguard", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[48521] = {
					"Defias Squallshaper", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[11791] = {
					"Putridus Trickster", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[47132] = {
					"Dark Creeper", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[11320] = {
					"Earthborer", -- [1]
					"Ragefire Chasm", -- [2]
					"enUS", -- [3]
				},
				[11324] = {
					"Searing Blade Warlock", -- [1]
					"Ragefire Chasm", -- [2]
					"enUS", -- [3]
				},
				[47739] = {
					"\"Captain\" Cookie", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[48266] = {
					"Defias Cannon", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[3864] = {
					"Fel Steed", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[46254] = {
					"Hogger", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[50869] = {
					"Razorclaw the Butcher", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[3870] = {
					"Stone Sleeper", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[3872] = {
					"Deathsworn Captain", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[47404] = {
					"Defias Watcher", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[3875] = {
					"Haunted Servitor", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[3877] = {
					"Wailing Guardsman", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[48522] = {
					"Defias Pirate", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[3887] = {
					"Baron Silverlaine", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[6243] = {
					"Gelihast", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[5756] = {
					"Deviate Venomwing", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[46383] = {
					"Randolph Moloch", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[5762] = {
					"Deviate Moccasin", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[11520] = {
					"Taragaman the Hungerer", -- [1]
					"Ragefire Chasm", -- [2]
					"enUS", -- [3]
				},
				[7309] = {
					"Earthen Custodian", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[47134] = {
					"Corpse Eater", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[48284] = {
					"Mining Powder", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[13141] = {
					"Deeprot Stomper", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[4283] = {
					"Scarlet Sentry", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[46249] = {
					"Riverpaw Slayer", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[4798] = {
					"Fallenroot Shadowstalker", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4289] = {
					"Scarlet Evoker", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4291] = {
					"Scarlet Diviner", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4293] = {
					"Scarlet Scryer", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4295] = {
					"Scarlet Myrmidon", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[47403] = {
					"Defias Reaper", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[4810] = {
					"Twilight Reaver", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4812] = {
					"Twilight Loreseeker", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4814] = {
					"Twilight Elementalist", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4286] = {
					"Scarlet Soldier", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4818] = {
					"Blindlight Murloc", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4820] = {
					"Blindlight Oracle", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4822] = {
					"Snapping Crustacean", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4824] = {
					"Aku'mai Fisher", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[47714] = {
					"Vapor", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[4831] = {
					"Lady Sarevess", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4830] = {
					"Old Serra'kis", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4832] = {
					"Twilight Lord Kelris", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4308] = {
					"Unfettered Spirit", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4304] = {
					"Scarlet Tracking Hound", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[46962] = {
					"Baron Ashbury", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[12219] = {
					"Barbed Lasher", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[7397] = {
					"Earthen Stonecarver", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[4299] = {
					"Scarlet Chaplain", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4298] = {
					"Scarlet Defender", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4848] = {
					"Shadowforge Darkcaster", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[7405] = {
					"Deadly Cleft Scorpid", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[5874] = {
					"Strength of Earth Totem", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[4854] = {
					"Grimlok", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[6016] = {
					"Elemental Protection Totem", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4531] = {
					"Razorfen Beast Trainer", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4860] = {
					"Stone Steward", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[6906] = {
					"Baelog", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[6908] = {
					"Olaf", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[48445] = {
					"Oaf Lackey", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[4512] = {
					"Rotting Agam'ar", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[4303] = {
					"Scarlet Abbot", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[13533] = {
					"Spewed Larva", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[3974] = {
					"Houndmaster Loksey", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[3975] = {
					"Herod", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[3976] = {
					"Scarlet Commander Mograine", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[3977] = {
					"High Inquisitor Whitemane", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[11792] = {
					"Putridus Shadowstalker", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[4302] = {
					"Scarlet Champion", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[6910] = {
					"Revelosh", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[46264] = {
					"Lord Overheat", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[7022] = {
					"Venomlash Scorpid", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[3983] = {
					"Interrogator Vishas", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[6427] = {
					"Haunting Phantasm", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4805] = {
					"Blackfathom Sea Witch", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[5053] = {
					"Deviate Crocolisk", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[4287] = {
					"Scarlet Gallant", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[11321] = {
					"Molten Elemental", -- [1]
					"Ragefire Chasm", -- [2]
					"enUS", -- [3]
				},
				[4535] = {
					"Tamed Battleboar", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[47232] = {
					"Ghostly Cook", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[3873] = {
					"Tormented Officer", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[48230] = {
					"Ogre Henchman", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[48421] = {
					"Defias Overseer", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[47296] = {
					"Helix Gearbreaker", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[46382] = {
					"Petty Criminal", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[4301] = {
					"Scarlet Centurion", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4958] = {
					"Haunting Spirit", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[4811] = {
					"Twilight Aquamancer", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[6487] = {
					"Arcanist Doan", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[12902] = {
					"Lorgus Jett", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[5950] = {
					"Flametongue Totem", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[4288] = {
					"Scarlet Beastmaster", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4421] = {
					"Charlga Razorflank", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[47297] = {
					"Lumbering Oaf", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[47138] = {
					"Pustulant Monstrosity", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[4427] = {
					"Ward Guardian", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[24830] = {
					"Stonevault Pillager", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[47136] = {
					"Unstable Ravager", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[12236] = {
					"Lord Vyletongue", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[4435] = {
					"Razorfen Warrior", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[46248] = {
					"Riverpaw Basher", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[6047] = {
					"Aqua Guardian", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[4514] = {
					"Raging Agam'ar", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[2992] = {
					"Healing Ward V", -- [1]
					"Razorfen Kraul", -- [2]
					"enUS", -- [3]
				},
				[48420] = {
					"Defias Digger", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[47137] = {
					"Mindless Horror", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[6493] = {
					"Illusionary Phantasm", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[8886] = {
					"Deviate Python", -- [1]
					"Wailing Caverns", -- [2]
					"enUS", -- [3]
				},
				[11518] = {
					"Jergosh the Invoker", -- [1]
					"Ragefire Chasm", -- [2]
					"enUS", -- [3]
				},
				[46252] = {
					"Riverpaw Shaman", -- [1]
					"Stormwind Stockade", -- [2]
					"enUS", -- [3]
				},
				[7012] = {
					"Earthen Sculptor", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[48419] = {
					"Defias Miner", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[4852] = {
					"Stonevault Oracle", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[3865] = {
					"Shadow Charger", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[7175] = {
					"Stonevault Ambusher", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[4978] = {
					"Aku'mai Servant", -- [1]
					"Blackfathom Deeps", -- [2]
					"enUS", -- [3]
				},
				[50834] = {
					"Rethilgore", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[48351] = {
					"Mine Bunny", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[7078] = {
					"Cleft Scorpid", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[7030] = {
					"Shadowforge Geologist", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[47135] = {
					"Fetid Ghoul", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[12217] = {
					"Corruptor", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[4296] = {
					"Scarlet Adept", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[48447] = {
					"Monstrous Parrot", -- [1]
					"Deadmines", -- [2]
					"enUS", -- [3]
				},
				[4850] = {
					"Stonevault Cave Lurker", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[7290] = {
					"Shadowforge Sharpshooter", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[11517] = {
					"Oggleflint", -- [1]
					"Ragefire Chasm", -- [2]
					"enUS", -- [3]
				},
				[47231] = {
					"Shadowy Attendant", -- [1]
					"Shadowfang Keep", -- [2]
					"enUS", -- [3]
				},
				[7291] = {
					"Galgann Firehammer", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[7209] = {
					"Obsidian Shard", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[4863] = {
					"Jadespine Basilisk", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[7321] = {
					"Stonevault Flameweaver", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[2748] = {
					"Archaedas", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[10120] = {
					"Vault Warder", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
			},
			["tocversion"] = 40400,
			["focus_color"] = {
				nil, -- [1]
				0.2039215862751007, -- [2]
				1, -- [3]
				1, -- [4]
			},
			["hide_name_on_game_objects"] = false,
			["aura_timer_text_font"] = "Fira Sans Black",
			["aura_show_dispellable"] = false,
			["transparency_behavior_on_friendlies"] = true,
			["not_affecting_combat_alpha"] = 0.4799999892711639,
			["aura_show_important"] = false,
			["aura_height"] = 10,
			["non_targeted_alpha_enabled"] = true,
			["target_highlight_alpha"] = 1,
			["aura2_x_offset"] = 0,
			["target_indicator"] = "Arrow",
			["hook_data"] = {
				{
					["Enabled"] = false,
					["Revision"] = 50,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Kastfall-Azralon",
					["Name"] = "Color Automation [Plater]",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1547392935,
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["HooksTemp"] = {
					},
				}, -- [1]
				{
					["Enabled"] = false,
					["Revision"] = 73,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["Name"] = "Hide Neutral Units [Plater]",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1541606242,
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["race"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1990989,
					["HooksTemp"] = {
					},
				}, -- [2]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Options"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Name"] = "Reorder Nameplate [Plater]",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["version"] = -1,
					["Time"] = 1596791840,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = 574574,
					["HooksTemp"] = {
					},
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 59,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["Name"] = "Don't Have Aura [Plater]",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
					},
					["Time"] = 1554138845,
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 136207,
					["HooksTemp"] = {
					},
				}, -- [4]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Tecno-Azralon",
					["Name"] = "Extra Border [Plater]",
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1547409079,
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 133689,
					["HooksTemp"] = {
					},
				}, -- [5]
				{
					["Enabled"] = false,
					["Revision"] = 93,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["Name"] = "Current Target Color [Plater]",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1552354619,
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 878211,
					["HooksTemp"] = {
					},
				}, -- [6]
				{
					["Enabled"] = false,
					["Revision"] = 348,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Options"] = {
						{
							["Type"] = 5,
							["Name"] = "Icon Settings",
							["Value"] = "Icon Settings:",
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Name"] = "Show Icon",
							["Value"] = true,
							["Key"] = "showIcon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Name"] = "Icon on Left Side",
							["Value"] = true,
							["Key"] = "iconOnLeftSide",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useFullSize",
							["Value"] = false,
							["Name"] = "Use Big Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0,
							["Name"] = "Icon Size Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "iconSizeOffset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Name"] = "Icon Padding",
							["Value"] = 0,
							["Key"] = "iconPadding",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Name"] = "Interrupt Texture",
							["Value"] = "Can't Interrupt Texture:",
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Show Texture",
							["Value"] = true,
							["Key"] = "showTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Name"] = "Texture Path",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Key"] = "iconTexturePath",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Texture Desaturated",
							["Value"] = true,
							["Key"] = "desaturatedTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.3056715726852417, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 10,
							["Name"] = "Texture Width",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureWidth",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Name"] = "Texture Height Mod",
							["Value"] = 0,
							["Key"] = "textureHeightMod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Texture Position",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "texturePosition",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [16]
					},
					["Author"] = "Ditador-Azralon",
					["Name"] = "Cast Bar Icon Settings [P]",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["Hooks"] = {
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["version"] = -1,
					["Time"] = 1597097268,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["HooksTemp"] = {
					},
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Ahwa-Azralon",
					["Name"] = "Execute Range [Plater]",
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1547406548,
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["role"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135358,
					["HooksTemp"] = {
					},
				}, -- [8]
				{
					["Enabled"] = false,
					["Revision"] = 363,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "color",
							["Value"] = {
								0.5019607843137255, -- [1]
								0.5019607843137255, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "changeBarColor",
							["Value"] = true,
							["Name"] = "Change Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "changeBorderColor",
							["Value"] = false,
							["Name"] = "Change Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "resetColors",
							["Value"] = true,
							["Name"] = "Reset Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
					},
					["Author"] = "Kastfall-Azralon",
					["Name"] = "Attacking Specific Unit [Plater]",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
					},
					["version"] = -1,
					["Time"] = 1620377377,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["affix"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["HooksTemp"] = {
					},
				}, -- [9]
				{
					["Enabled"] = false,
					["Revision"] = 284,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Options"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Name"] = "Combo Points [Plater]",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["version"] = -1,
					["Time"] = 1621935143,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = 135426,
					["HooksTemp"] = {
					},
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Author"] = "Izimode-Azralon",
					["Name"] = "Players Targeting a Target [Plater]",
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Time"] = 1548278227,
					["version"] = -1,
					["PlaterCore"] = 1,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["race"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["role"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1966587,
					["HooksTemp"] = {
					},
				}, -- [11]
				{
					["Enabled"] = false,
					["Revision"] = 356,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Options"] = {
					},
					["Author"] = "Ditador-Azralon",
					["Name"] = "Aura Reorder [Plater]",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["version"] = -1,
					["Time"] = 1608663128,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["PlaterCore"] = 1,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["HooksTemp"] = {
					},
				}, -- [12]
			},
			["aura_width2"] = 10,
			["aura_stack_size"] = 6,
			["target_shady_alpha"] = 0.5799999833106995,
			["aura_width"] = 10,
			["aura_height2"] = 10,
			["saved_cvars"] = {
				["nameplateShowOnlyNames"] = "1",
				["nameplateSelectedAlpha"] = "1",
				["nameplateLargeTopInset"] = "0.10000000149012",
				["nameplateRemovalAnimation"] = "0",
				["nameplateOverlapV"] = "0.59999996423721",
				["nameplateShowEnemyMinions"] = "1",
				["nameplateShowDebuffsOnFriendly"] = "0",
				["nameplateShowFriendlyNPCs"] = "1",
				["nameplateSelectedScale"] = "1.75",
				["nameplateShowFriends"] = "1",
				["nameplateTargetRadialPosition"] = "1",
				["nameplateOtherTopInset"] = "0.10000000149012",
				["nameplateMinAlpha"] = "0.90135484",
				["nameplateMinAlphaDistance"] = "-158489.31924611",
				["nameplateMotion"] = "0",
				["clampTargetNameplateToScreen"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMaxDistance"] = "41",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateOtherAtBase"] = "0",
				["nameplateTargetBehindMaxDistance"] = "37",
				["nameplatePlayerMaxDistance"] = "0",
				["nameplateOtherBottomInset"] = "0.10000000149012",
				["nameplateOccludedAlphaMult"] = "1",
				["nameplateShowFriendlyGuardians"] = "0",
				["nameplateShowEnemies"] = "1",
				["nameplateNotSelectedAlpha"] = "1",
				["nameplateLargeBottomInset"] = "0.10000000149012",
			},
			["login_counter"] = 298,
			["aura_show_aura_by_other_players"] = true,
			["auto_toggle_friendly"] = {
				["cities"] = false,
				["world"] = false,
			},
			["quick_hide"] = true,
			["aura_consolidate"] = true,
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
			},
			["script_auto_imported"] = {
				["Unit - Show Energy"] = 11,
				["Cast - Important Target [P]"] = 2,
				["Aura - Buff Alert"] = 15,
				["Cast - Alert + Timer [P]"] = 4,
				["Cast - Effect After Cast [P]"] = 2,
				["Cast - Very Important"] = 15,
				["Cast - Circular Swipe"] = 4,
				["Cast - Shield Interrupt"] = 2,
				["Aura - Debuff Alert"] = 12,
				["Cast - Ultra Important"] = 14,
				["Add - Warning [P]"] = 5,
				["Cast - Castbar is Timer [P]"] = 2,
				["Aura While Casting [P]"] = 1,
				["Cast - Big Alert"] = 14,
				["Add - Explode on Die [P]"] = 1,
				["Cast - Small Alert"] = 12,
				["Spiteful Affix"] = 3,
				["Countdown"] = 11,
				["Add - Important [P]"] = 4,
				["Add - Tag Number [P]"] = 2,
				["Add - Non Elite Trash [P]"] = 4,
				["Aura - Blink Time Left"] = 13,
				["Cast - On Going Cast [P]"] = 2,
				["Cast - Stop Casting"] = 4,
				["Fixate by Unit Buff [P]"] = 2,
				["Auto Set Skull"] = 11,
				["Fixate"] = 11,
				["Cast - Glowing [P]"] = 10,
				["Cast - Quick Flash"] = 2,
				["Explosion Affix M+"] = 14,
				["Fixate On You"] = 11,
			},
			["target_highlight_color"] = {
				1, -- [1]
				0.7960785031318665, -- [2]
				0, -- [3]
			},
			["range_check_in_range_or_target_alpha"] = 1,
			["aura_timer_text_size"] = 7,
			["aura_stack_font"] = "Fira Sans Black",
			["not_affecting_combat_enabled"] = true,
			["number_region_first_run"] = true,
			["use_player_combat_state"] = true,
			["ghost_auras"] = {
				["auras"] = {
					["WARLOCK"] = {
						{
							[172] = true,
							[980] = true,
						}, -- [1]
					},
					["PRIEST"] = {
						[3] = {
							[589] = true,
							[34914] = true,
						},
					},
				},
			},
			["range_check_alpha"] = 1,
			["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator1",
			["range_check_alpha_friendlies"] = 1,
			["ui_parent_scale_tune"] = 1.309999942779541,
			["transparency_behavior_on_enemies"] = false,
			["profile_name"] = "Default",
			["target_highlight_height"] = 8,
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 0.800000011920929,
				},
			},
			["dps"] = {
				["colors"] = {
					["aggro"] = {
						nil, -- [1]
						0.03921568766236305, -- [2]
					},
					["solo"] = {
						1, -- [1]
						0.01960784383118153, -- [2]
						0, -- [3]
					},
					["noaggro"] = {
						1, -- [1]
						0.0313725508749485, -- [2]
						0, -- [3]
					},
					["pulling"] = {
						nil, -- [1]
						0.0784313753247261, -- [2]
					},
				},
			},
			["aura_stack_anchor"] = {
				["side"] = 5,
			},
			["patch_version"] = 37,
			["indicator_friendlyclass"] = true,
			["indicator_friendlyspec"] = true,
			["health_selection_overlay_alpha"] = 0.09999999403953552,
			["tank"] = {
				["colors"] = {
					["pulling_from_tank"] = {
						nil, -- [1]
						0.6235294342041016, -- [2]
					},
					["anothertank"] = {
						0.1450980454683304, -- [1]
						1, -- [2]
						0, -- [3]
					},
					["aggro"] = {
						1, -- [1]
						0.05882353335618973, -- [2]
						0, -- [3]
					},
					["noaggro"] = {
						0.960784375667572, -- [1]
						1, -- [2]
						0.9098039865493774, -- [3]
					},
					["nocombat"] = {
						0.5058823823928833, -- [1]
						0.003921568859368563, -- [2]
					},
					["pulling"] = {
						nil, -- [1]
						0.0313725508749485, -- [2]
					},
				},
			},
			["auto_toggle_stacking"] = {
				["party"] = false,
				["raid"] = false,
				["arena"] = false,
				["world"] = false,
			},
			["first_run3"] = true,
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 632,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Add the buff name in the trigger box.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						398151, -- [1]
						377738, -- [2]
						378149, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Buff Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1671066705,
					["url"] = "",
					["Icon"] = 134229,
					["Enabled"] = false,
					["Revision"] = 37,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						191284, -- [1]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Effect After Cast [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
					["Time"] = 1670201853,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = true,
					["Revision"] = 533,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						240446, -- [1]
						385339, -- [2]
						198077, -- [3]
						210261, -- [4]
						360857, -- [5]
						389446, -- [6]
					},
					["PlaterCore"] = 1,
					["Name"] = "Explosion Affix M+ [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 3,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 5,
							["Name"] = "Arrow:",
							["Value"] = "Arrow:",
							["Key"] = "option6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "arrowAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Name"] = "Arrow Width",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "arrowWidth",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [8]
						{
							["Type"] = 6,
							["Name"] = "Option 13",
							["Value"] = 0,
							["Key"] = "option13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Name"] = "Dot Animation:",
							["Value"] = "Dot Animation:",
							["Key"] = "option12",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Name"] = "Dot Color",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 4,
							["Key"] = "xOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [13]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "Option 18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Nameplate Color",
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Color",
							["Value"] = false,
							["Key"] = "useNameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.1843137294054031, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Health Bar Color",
						}, -- [17]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 368,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Desc"] = "Add the debuff name in the trigger box.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Debuff Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Glow Enabled",
							["Value"] = false,
							["Key"] = "glowEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Glow Color",
							["Value"] = {
								0.403921568627451, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "glowColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Name"] = "Dots Enabled",
							["Value"] = true,
							["Key"] = "dotsEnabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.3215686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203758,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1213,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Alert + Timer [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Cast start animation settings",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Name"] = "Cast Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670790652,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = true,
					["Revision"] = 694,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						383823, -- [1]
						382670, -- [2]
						388537, -- [3]
						372851, -- [4]
						200682, -- [5]
						192307, -- [6]
						196838, -- [7]
						193827, -- [8]
						194043, -- [9]
						209410, -- [10]
						211464, -- [11]
						361180, -- [12]
						156718, -- [13]
						395859, -- [14]
						358320, -- [15]
						374045, -- [16]
						386757, -- [17]
						367500, -- [18]
						370225, -- [19]
						376200, -- [20]
						372107, -- [21]
						388923, -- [22]
						376934, -- [23]
						384899, -- [24]
						373960, -- [25]
						374724, -- [26]
						385551, -- [27]
						259732, -- [28]
						373424, -- [29]
						373084, -- [30]
						87618, -- [31]
						255041, -- [32]
						428926, -- [33]
						76634, -- [34]
						200050, -- [35]
						197546, -- [36]
						198079, -- [37]
						199193, -- [38]
						266181, -- [39]
						253544, -- [40]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Ultra Important [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 3,
							["Name"] = "Health Bar Height Mod",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Use Cast Bar Color",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above Use Cast Bar Color",
						}, -- [8]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.431372, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast Bar Color",
						}, -- [9]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Name"] = "Show Arrow",
							["Value"] = true,
							["Key"] = "showArrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 0.5,
							["Name"] = "Arrow Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Fraction"] = false,
							["Value"] = 8,
							["Key"] = "arrowWidth",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Width",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Key"] = "arrowHeight",
							["Value"] = 8,
							["Name"] = "Arrow Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [15]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.615686274509804, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [18]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [19]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [20]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"200682", -- [1]
									"darkslateblue", -- [2]
								}, -- [1]
								{
									"192307", -- [1]
									"goldenrod", -- [2]
								}, -- [2]
								{
									"196838", -- [1]
									"maroon", -- [2]
								}, -- [3]
								{
									"193827", -- [1]
									"darkgreen", -- [2]
								}, -- [4]
								{
									"194043", -- [1]
									"darkgreen", -- [2]
								}, -- [5]
								{
									"156718", -- [1]
									"DRUID", -- [2]
								}, -- [6]
								{
									"395859", -- [1]
									"ROGUE", -- [2]
								}, -- [7]
							},
							["Name"] = "Color List by SpellId",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
						}, -- [21]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1669325410,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 662,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						376851, -- [1]
						396044, -- [2]
						381517, -- [3]
						373932, -- [4]
						397801, -- [5]
						208165, -- [6]
						392576, -- [7]
						198750, -- [8]
						387843, -- [9]
						387411, -- [10]
						211299, -- [11]
						198595, -- [12]
						198934, -- [13]
						198962, -- [14]
						156722, -- [15]
						350554, -- [16]
						348513, -- [17]
						351779, -- [18]
						328180, -- [19]
						319898, -- [20]
						281420, -- [21]
						274383, -- [22]
						259092, -- [23]
						367521, -- [24]
						374544, -- [25]
						385039, -- [26]
						382474, -- [27]
						369823, -- [28]
						377500, -- [29]
						260879, -- [30]
						186269, -- [31]
						378818, -- [32]
						371875, -- [33]
						372225, -- [34]
						200658, -- [35]
						266036, -- [36]
						265407, -- [37]
						164965, -- [38]
						429176, -- [39]
						428526, -- [40]
						418200, -- [41]
						407124, -- [42]
						200630, -- [43]
						415437, -- [44]
						264050, -- [45]
						267824, -- [46]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Small Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Option 1",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Plays a small animation when the cast start.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Option 3",
							["Value"] = 0,
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Flash Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "flashColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670423785,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 572,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["NpcNames"] = {
						"196548", -- [1]
						"195580", -- [2]
						"195820", -- [3]
						"195821", -- [4]
						"189886", -- [5]
						"75966", -- [6]
						"102019", -- [7]
						"187159", -- [8]
						"194897", -- [9]
						"104251", -- [10]
						"101326", -- [11]
						"189669", -- [12]
						"192464", -- [13]
						190381, -- [14]
						92538, -- [15]
						192464, -- [16]
						131009, -- [17]
						127315, -- [18]
						133361, -- [19]
						136330, -- [20]
						214117, -- [21]
						212483, -- [22]
						101008, -- [23]
						194745, -- [24]
						190426, -- [25]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Important [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.5254901960784314, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Name"] = "Nameplate Size Offset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "nameplateSizeOffset",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.7137255072593689, -- [2]
								0, -- [3]
								0.5631310641765594, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dot Color",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Extra Texture",
							["Name"] = "Extra Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Extra Texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Name"] = "Show Extra Texture",
							["Value"] = false,
							["Key"] = "showExtraTexture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Extra Texture",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.4627450980392157, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "skullAlpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Scale",
							["Min"] = 0.4,
							["Name"] = "Scale",
							["Value"] = 0.6,
							["Key"] = "skullScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 7,
							["Name"] = "Npc Color By NpcID",
							["Value"] = {
								{
									"196548", -- [1]
									"forestgreen", -- [2]
								}, -- [1]
								{
									"195580", -- [1]
									"forestgreen", -- [2]
								}, -- [2]
								{
									"195820", -- [1]
									"forestgreen", -- [2]
								}, -- [3]
								{
									"195821", -- [1]
									"forestgreen", -- [2]
								}, -- [4]
								{
									"189886", -- [1]
									"forestgreen", -- [2]
								}, -- [5]
								{
									"75966", -- [1]
									"forestgreen", -- [2]
								}, -- [6]
								{
									"102019 ", -- [1]
									"forestgreen", -- [2]
								}, -- [7]
								{
									"187159", -- [1]
									"forestgreen", -- [2]
								}, -- [8]
								{
									"194897", -- [1]
									"forestgreen", -- [2]
								}, -- [9]
								{
									"104251", -- [1]
									"forestgreen", -- [2]
								}, -- [10]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the npcID, value is the color name",
						}, -- [15]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1626382829,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = true,
					["Revision"] = 375,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "blinkEnabled",
							["Value"] = true,
							["Name"] = "Blink Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = true,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = false,
							["Name"] = "Change NamePlate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Fraction"] = true,
							["Value"] = 3,
							["Key"] = "timeleftToBlink",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Timeleft to Blink",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Fraction"] = true,
							["Value"] = 1,
							["Key"] = "blinkSpeed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Speed",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.6,
							["Key"] = "blinkMaxAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Max Alpha",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0.2862745098039216, -- [1]
								0.00392156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option10",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "timerColorEnabled",
							["Value"] = true,
							["Name"] = "Timer Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Warning",
							["Value"] = 8,
							["Key"] = "timeLeftWarning",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Name"] = "Time Left Critical",
							["Value"] = 3,
							["Key"] = "timeLeftCritical",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [15]
						{
							["Type"] = 1,
							["Key"] = "warningColor",
							["Value"] = {
								1, -- [1]
								0.8705882352941177, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Warning Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "criticalColor",
							["Value"] = {
								1, -- [1]
								0.07450980392156863, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Critical Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1669340442,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/add_id_icon",
					["Enabled"] = false,
					["Revision"] = 161,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
					["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
					["NpcNames"] = {
						"195138", -- [1]
						"192955", -- [2]
						"190294", -- [3]
						"76518", -- [4]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Tag Number [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514190,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = true,
					["Revision"] = 547,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show a different animation for the cast bar.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						376644, -- [1]
						386781, -- [2]
						384823, -- [3]
						385536, -- [4]
						392398, -- [5]
						375596, -- [6]
						387135, -- [7]
						360850, -- [8]
						212784, -- [9]
						199033, -- [10]
						199034, -- [11]
						200969, -- [12]
						394512, -- [13]
						397881, -- [14]
						396020, -- [15]
						374430, -- [16]
						384353, -- [17]
						265376, -- [18]
						193941, -- [19]
						411002, -- [20]
						169445, -- [21]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Glowing [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Name"] = "Cast Color by SpellID",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1669339628,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["Enabled"] = true,
					["Revision"] = 878,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight the target name",
					["NpcNames"] = {
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Important Target [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shows the target name in a separate box",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Name"] = "Flash Duration",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Name"] = "Shake Amplitude",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Dot X Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot Y Offset",
							["Value"] = 3,
							["Key"] = "yOffset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Name"] = "Option 27",
							["Value"] = 0,
							["Key"] = "option27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Name"] = "Option 28",
							["Value"] = "Target Options",
							["Key"] = "option28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 14,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetNameSize",
						}, -- [29]
						{
							["Type"] = 4,
							["Name"] = "Use Class Color",
							["Value"] = true,
							["Key"] = "colorByClass",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Name"] = "Text Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Name"] = "Background Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.9846720322966576, -- [4]
							},
							["Key"] = "targetBgColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Name"] = "Border Color",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetBgBorderColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Name"] = "Frame Width",
							["Value"] = 90,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "targetFrameWidth",
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Key"] = "targetFrameHeight",
							["Value"] = 20,
							["Name"] = "Frame Height",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [35]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1673994690,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = true,
					["Revision"] = 828,
					["semver"] = "",
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
						350687, -- [18]
						372735, -- [19]
						373017, -- [20]
						350687, -- [21]
						392488, -- [22]
						257732, -- [23]
						256060, -- [24]
						257899, -- [25]
						384633, -- [26]
						374339, -- [27]
						395694, -- [28]
						391634, -- [29]
						372701, -- [30]
						369328, -- [31]
						265487, -- [32]
						413044, -- [33]
						183526, -- [34]
						88194, -- [35]
						87762, -- [36]
						413385, -- [37]
						411001, -- [38]
						378282, -- [39]
						384161, -- [40]
						259572, -- [41]
						255371, -- [42]
						427460, -- [43]
						429172, -- [44]
						426500, -- [45]
						413607, -- [46]
						412922, -- [47]
						417481, -- [48]
						201399, -- [49]
						411994, -- [50]
						415770, -- [51]
						260907, -- [52]
						260703, -- [53]
						260741, -- [54]
						265876, -- [55]
						263959, -- [56]
						266225, -- [57]
						253517, -- [58]
						377488, -- [59]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Very Important [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a big animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Flash Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Name"] = "Shake",
							["Value"] = "Shake:",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Name"] = "Shake Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 5,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.5647058823529412, -- [1]
								0.5647058823529412, -- [2]
								0.5647058823529412, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Name"] = "Dot X Offset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "xOffset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Name"] = "Dot Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Name"] = "blank",
							["Value"] = 0,
							["Key"] = "option18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.4117647058823529, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
					["Time"] = 1670427654,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/exclamation_64",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Change the color of  add",
					["NpcNames"] = {
						"190187", -- [1]
						"189893", -- [2]
						"99922", -- [3]
						"104822", -- [4]
						129758, -- [5]
						186696, -- [6]
						101075, -- [7]
						100818, -- [8]
						98081, -- [9]
						52019, -- [10]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Warning [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								1, -- [1]
								0.4392157196998596, -- [2]
								0.458823561668396, -- [3]
								1, -- [4]
							},
							["Key"] = "healthBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Flash Nameplate",
							["Value"] = true,
							["Key"] = "useFlash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Flash Nameplate",
						}, -- [4]
						{
							["Type"] = 7,
							["Name"] = "NpcID to Color",
							["Value"] = {
								{
									"189893", -- [1]
									"olivedrab", -- [2]
								}, -- [1]
								{
									"190187", -- [1]
									"olivedrab", -- [2]
								}, -- [2]
								{
									"99922", -- [1]
									"olivedrab", -- [2]
								}, -- [3]
								{
									"153285", -- [1]
									"olivedrab", -- [2]
								}, -- [4]
								{
									"104822", -- [1]
									"olivedrab", -- [2]
								}, -- [5]
							},
							["Key"] = "npcColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
						}, -- [5]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
				}, -- [14]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
					["Time"] = 1673726734,
					["url"] = "",
					["Icon"] = 236209,
					["Enabled"] = true,
					["Revision"] = 18,
					["semver"] = "",
					["Author"] = "Tiranaa-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						372743, -- [1]
						372749, -- [2]
						384933, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Aura While Casting [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203603,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1194,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						396640, -- [1]
						372743, -- [2]
						377389, -- [3]
						396812, -- [4]
						388392, -- [5]
						387955, -- [6]
						386546, -- [7]
						377503, -- [8]
						384808, -- [9]
						386024, -- [10]
						387615, -- [11]
						387606, -- [12]
						225100, -- [13]
						211401, -- [14]
						211470, -- [15]
						215433, -- [16]
						192563, -- [17]
						198959, -- [18]
						152818, -- [19]
						156776, -- [20]
						398206, -- [21]
						153524, -- [22]
						396073, -- [23]
						396018, -- [24]
						345202, -- [25]
						377950, -- [26]
						372223, -- [27]
						350421, -- [28]
						352158, -- [29]
						349985, -- [30]
						329239, -- [31]
						328400, -- [32]
						384194, -- [33]
						392451, -- [34]
						392924, -- [35]
						397889, -- [36]
						209413, -- [37]
						207980, -- [38]
						257397, -- [39]
						257736, -- [40]
						382787, -- [41]
						374699, -- [42]
						377402, -- [43]
						369602, -- [44]
						369465, -- [45]
						369400, -- [46]
						381593, -- [47]
						265091, -- [48]
						265433, -- [49]
						382791, -- [50]
						376780, -- [51]
						225573, -- [52]
						278444, -- [53]
						164887, -- [54]
						168082, -- [55]
						76813, -- [56]
						227913, -- [57]
						265368, -- [58]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Big Alert [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Name"] = "Flash Duration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "flashDuration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Name"] = "Cast Bar Height Mod",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "castBarHeight",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Name"] = "Shake Duration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeDuration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Fraction"] = false,
							["Value"] = 8,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeAmplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Fraction"] = false,
							["Value"] = 40,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "shakeFrequency",
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1670428019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
					["Enabled"] = true,
					["Revision"] = 162,
					["semver"] = "",
					["Author"] = "Butazzul-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						385916, -- [1]
						386063, -- [2]
						388822, -- [3]
						373087, -- [4]
						397785, -- [5]
						106864, -- [6]
						193660, -- [7]
						198263, -- [8]
						387910, -- [9]
						370766, -- [10]
						375591, -- [11]
						384336, -- [12]
						209404, -- [13]
						209378, -- [14]
						210875, -- [15]
						396001, -- [16]
						397899, -- [17]
						386559, -- [18]
						382555, -- [19]
						258672, -- [20]
						258777, -- [21]
						257756, -- [22]
						257784, -- [23]
						256405, -- [24]
						256589, -- [25]
						393793, -- [26]
						388046, -- [27]
						375079, -- [28]
						390290, -- [29]
						369811, -- [30]
						369703, -- [31]
						226287, -- [32]
						410999, -- [33]
						372561, -- [34]
						256882, -- [35]
						172578, -- [36]
						412063, -- [37]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Circle AoE [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 0.3,
							["Desc"] = "Rotation Duration",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.15,
							["Name"] = "Rotation Duration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "rotationDuration",
						}, -- [1]
						{
							["Type"] = 6,
							["Name"] = "Option 5",
							["Value"] = 0,
							["Key"] = "option5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1.5,
							["Desc"] = "Animation Start Duration",
							["Min"] = 0,
							["Name"] = "Animation Start Duration",
							["Value"] = 0.3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "animStartDuration",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
							["Min"] = 0,
							["Key"] = "textureStartAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Start Alpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "Texture Scale",
							["Min"] = 0.6,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Name"] = "Texture Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureScale",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 1,
							["Name"] = "Texture Alpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "textureAlpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Name"] = "Texture Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Key"] = "textureColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Time"] = 1611844883,
					["url"] = "",
					["Icon"] = 135945,
					["Enabled"] = true,
					["Revision"] = 186,
					["semver"] = "",
					["Author"] = "Symantec-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Time to die Spiteful affix",
					["NpcNames"] = {
						"174773", -- [1]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "M+ Spiteful",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Time to Die",
							["Name"] = "Time to Die",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 10,
							["Key"] = "bgWidth",
							["Value"] = 27,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Width",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "bgColor",
							["Value"] = {
								0.5058823529411764, -- [1]
								0.07058823529411765, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 24,
							["Desc"] = "",
							["Min"] = 7,
							["Key"] = "textSize",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Size",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								0.5843137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 7",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option11",
							["Value"] = "Targeting",
							["Name"] = "Targeting",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Name"] = "Show Target instead of Name",
							["Value"] = true,
							["Key"] = "switchTargetName",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Name"] = "Change Color if targeting You",
							["Value"] = true,
							["Key"] = "useTargetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 1,
							["Name"] = "Color if targeting You",
							["Value"] = {
								0.07058823529411765, -- [1]
								0.6196078431372549, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "targetingColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 6,
							["Key"] = "option11",
							["Value"] = 0,
							["Name"] = "Option 11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1669324381,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
					["Enabled"] = true,
					["Revision"] = 887,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["Desc"] = "Play a very fast flash when the cast start",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						392640, -- [1]
						397888, -- [2]
						209033, -- [3]
						385029, -- [4]
						374563, -- [5]
						377341, -- [6]
						369675, -- [7]
						369365, -- [8]
						369411, -- [9]
						278961, -- [10]
						202108, -- [11]
						88186, -- [12]
						255824, -- [13]
						252781, -- [14]
						250096, -- [15]
						200248, -- [16]
						197797, -- [17]
						264520, -- [18]
						418202, -- [19]
						201839, -- [20]
						412012, -- [21]
						411958, -- [22]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Quick Flash [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Name"] = "Option 2",
							["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "Option 3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Name"] = "Blank Space",
							["Value"] = 0,
							["Key"] = "option4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Name"] = "Cast Bar Color Enabled",
							["Value"] = true,
							["Key"] = "useCastbarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Name"] = "Cast Bar Color",
							["Value"] = {
								1, -- [1]
								0.4313725490196079, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Key"] = "castBarColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Name"] = "Blank Line",
							["Value"] = 0,
							["Key"] = "option7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Fraction"] = true,
							["Value"] = 0.2,
							["Key"] = "flashDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Fraction"] = false,
							["Value"] = 0,
							["Key"] = "castBarHeight",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Fraction"] = true,
							["Value"] = 0.1,
							["Key"] = "shakeDuration",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Name"] = "Shake Amplitude",
							["Value"] = 25,
							["Key"] = "shakeAmplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Name"] = "Shake Frequency",
							["Value"] = 30,
							["Key"] = "shakeFrequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [12]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
					["Time"] = 1670427838,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/duck_64",
					["Enabled"] = true,
					["Revision"] = 111,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["NpcNames"] = {
						"194622", -- [1]
						"190205", -- [2]
						"197398", -- [3]
						"77006", -- [4]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Non Elite Trash [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = false,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0.062745101749897, -- [1]
								0.062745101749897, -- [2]
								0.0941176563501358, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Name"] = "Change Nameplate Scale",
							["Value"] = true,
							["Key"] = "useNameplateScale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Scale",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Nameplate Scale",
							["Min"] = 0,
							["Fraction"] = true,
							["Value"] = 0.8,
							["Key"] = "scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Nameplate Scale",
						}, -- [5]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669325411,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
					["Enabled"] = true,
					["Revision"] = 101,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						373688, -- [1]
						391050, -- [2]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Shield Interrupt [P]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1676905232,
					["url"] = "",
					["Icon"] = 4038101,
					["Enabled"] = true,
					["Revision"] = 73,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						388886, -- [1]
						209676, -- [2]
						377912, -- [3]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - On Going Cast [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Dots Color",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.4166216850280762, -- [4]
							},
							["Key"] = "dotColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dots Color",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dots X Offset",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots Y Offset",
							["Min"] = -10,
							["Fraction"] = false,
							["Value"] = 0,
							["Name"] = "Dots Y Offset",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "yOffset",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust how fast the blinking occurs",
							["Min"] = 0.2,
							["Name"] = "Blink Speed",
							["Value"] = 0.4,
							["Key"] = "speed",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Min amount of transparency the blink can have",
							["Min"] = 0,
							["Name"] = "Blink Min Alpha",
							["Value"] = 0,
							["Key"] = "minAlpha",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Max amount of transparency the blink can have",
							["Min"] = 0,
							["Key"] = "maxAlpha",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Max Alpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								0.01960784383118153, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the blinking texture",
						}, -- [8]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
				}, -- [22]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604354364,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
					["Enabled"] = true,
					["Revision"] = 206,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
					["NpcNames"] = {
						"164427", -- [1]
						"164414", -- [2]
						"164185", -- [3]
						"164567", -- [4]
						"165408", -- [5]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Countdown",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [23]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1668886509,
					["url"] = "",
					["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
					["Enabled"] = true,
					["Revision"] = 33,
					["semver"] = "",
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						426662, -- [1]
						426663, -- [2]
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate by Unit Buff [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 1,
							["Name"] = "Nameplate Color",
							["Value"] = {
								0, -- [1]
								0.5568627450980392, -- [2]
								0.03529411764705882, -- [3]
								1, -- [4]
							},
							["Key"] = "nameplateColor",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
						}, -- [1]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
				}, -- [24]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Time"] = 1604696441,
					["url"] = "",
					["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
					["Enabled"] = false,
					["Revision"] = 63,
					["semver"] = "",
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Auto set skull marker",
					["NpcNames"] = {
						"163520", -- [1]
						"163618", -- [2]
						"164506", -- [3]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Auto Set Skull",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Auto set a raid target Skull on the unit.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "onlyInCombat",
							["Value"] = false,
							["Name"] = "Only in Combat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set the mark only if the unit is in combat.",
						}, -- [3]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
				}, -- [25]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669340350,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/radio_64",
					["Enabled"] = true,
					["Revision"] = 106,
					["semver"] = "",
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "",
					["NpcNames"] = {
						"194895", -- [1]
						"105703", -- [2]
						"59598", -- [3]
						"58319", -- [4]
						200388, -- [5]
						189299, -- [6]
						131402, -- [7]
						135052, -- [8]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Add - Explode on Die [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useReverse",
							["Value"] = false,
							["Name"] = "Reverse Health Bar",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "useShake",
							["Value"] = false,
							["Name"] = "Enable Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "How strong is the shake.",
							["Min"] = 0.05,
							["Key"] = "shakeAmplitude",
							["Value"] = 0.2,
							["Name"] = "Shake Amplitude",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 70,
							["Name"] = "Shake Frequency",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = true,
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "useBackground",
							["Value"] = true,
							["Name"] = "Show Red Background",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Red Background",
						}, -- [7]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
				}, -- [26]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604357453,
					["url"] = "",
					["Icon"] = 136048,
					["Enabled"] = true,
					["Revision"] = 233,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Show the energy amount above the nameplate.",
					["NpcNames"] = {
						"164406", -- [1]
						"164407", -- [2]
						"162100", -- [3]
						"162099", -- [4]
						"162329", -- [5]
						"164558", -- [6]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Unit - Show Energy [Plater]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Name"] = "script desc",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Name"] = "add trigger",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Key"] = "option3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showLater",
							["Value"] = true,
							["Name"] = "Show at 80% of Energy",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Name"] = "Option 2",
							["Value"] = 0,
							["Key"] = "option2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Name"] = "Text Size",
							["Value"] = 16,
							["Key"] = "fontSize",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Fraction"] = false,
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "fontColor",
							["Value"] = {
								0.803921568627451, -- [1]
								0.803921568627451, -- [2]
								0.803921568627451, -- [3]
								1, -- [4]
							},
							["Name"] = "Font Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Enable Text Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
				}, -- [27]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514185,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 506,
					["semver"] = "",
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Desc"] = "Just stop casting",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
						200291, -- [5]
						268202, -- [6]
					},
					["PlaterCore"] = 1,
					["Name"] = "Cast - Stop Casting [P]",
					["version"] = -1,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Fraction"] = false,
							["Value"] = 20,
							["Name"] = "Amount of Segments",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Key"] = "segmentsAmount",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.9568627450980391, -- [1]
								1, -- [2]
								0.9882352941176471, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.8588235294117647, -- [1]
								0.4313725490196079, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
				}, -- [28]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Time"] = 1604239880,
					["url"] = "",
					["Icon"] = 1029718,
					["Enabled"] = true,
					["Revision"] = 269,
					["semver"] = "",
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["Desc"] = "Show above the nameplate who is the player fixated",
					["NpcNames"] = {
						"165560", -- [1]
					},
					["SpellIds"] = {
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate [Plater]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [29]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604087921,
					["url"] = "",
					["Icon"] = 841383,
					["Enabled"] = true,
					["Revision"] = 266,
					["semver"] = "",
					["Author"] = "Tecno-Azralon",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["NpcNames"] = {
					},
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["PlaterCore"] = 1,
					["Name"] = "Fixate On You [Plater]",
					["version"] = -1,
					["Options"] = {
					},
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
				}, -- [30]
			},
			["auto_toggle_enemy"] = {
				["party"] = false,
				["raid"] = false,
				["arena"] = false,
				["world"] = false,
			},
		},
		["MyNewProfile"] = {
			["focus_as_target_alpha"] = true,
			["aura_breakline_space"] = 1,
			["aura_sort"] = true,
			["bossmod_support_bars_text_enabled"] = false,
			["saved_cvars_last_change"] = {
				["nameplateShowOnlyNames"] = "Interface/AddOns/Plater/Plater.lua:1581",
				["nameplateLargeTopInset"] = "Interface/AddOns/Plater/options/Plater_O_Advanced.lua:278",
				["nameplateShowEnemyMinus"] = "Interface/AddOns/Plater/Plater.lua:1581",
				["NamePlateClassificationScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
				["nameplateShowFriendlyTotems"] = "Interface/AddOns/Plater/Plater.lua:1581",
				["nameplateShowFriendlyPets"] = "Interface/AddOns/Plater/Plater.lua:1581",
				["nameplatePersonalShowInCombat"] = "Interface/AddOns/Plater/Plater.lua:1581",
				["nameplateTargetRadialPosition"] = "Interface/AddOns/Plater/Plater.lua:1581",
				["nameplateMinAlpha"] = "Interface/AddOns/Plater/Plater.lua:4295",
				["nameplateNotSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:4298",
				["clampTargetNameplateToScreen"] = "Interface/AddOns/Plater/Plater.lua:1581",
				["nameplateShowAll"] = "Interface/AddOns/Plater/Plater.lua:1581",
				["nameplateMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:1581",
				["nameplateShowFriendlyMinions"] = "Interface/AddOns/Blizzard_SharedXML/CvarUtil.lua:72",
				["nameplateOtherBottomInset"] = "Interface/AddOns/Plater/options/Plater_O_Advanced.lua:304",
				["nameplateShowEnemies"] = "Interface/AddOns/Plater/Plater.lua:8692",
				["NamePlateVerticalScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
				["nameplateSelectedAlpha"] = "Interface/AddOns/Plater/Plater.lua:4297",
				["nameplatePersonalShowAlways"] = "Interface/AddOns/Plater/Plater.lua:1581",
				["nameplateShowEnemyMinions"] = "Interface/AddOns/Plater/Plater.lua:1581",
				["nameplateShowFriendlyNPCs"] = "Interface/AddOns/Plater/Plater.lua:1581",
				["nameplateSelectedScale"] = "Interface/AddOns/Plater/Plater_OptionsPanel.lua:5288",
				["nameplateShowFriends"] = "[string \"=[C]\"]: in function `SetCVar'\n[string \"FRIENDNAMEPLATES\"]:6: in function <[string \"FRIENDNAMEPLATES\"]:1>\n",
				["nameplateMotion"] = "Interface/AddOns/Plater/Plater.lua:1581",
				["nameplateOtherTopInset"] = "Interface/AddOns/Plater/options/Plater_O_Advanced.lua:277",
				["nameplateRemovalAnimation"] = "Interface/AddOns/Plater/Plater.lua:4299",
				["nameplatePlayerMaxDistance"] = "Interface/AddOns/Plater/Plater.lua:1581",
				["nameplateShowFriendlyGuardians"] = "Interface/AddOns/Plater/Plater.lua:1581",
				["NamePlateHorizontalScale"] = "Interface/AddOns/Plater/Plater.lua:1581",
				["ShowNamePlateLoseAggroFlash"] = "Interface/AddOns/Plater/Plater.lua:1581",
				["nameplatePersonalShowWithTarget"] = "Interface/AddOns/Plater/Plater.lua:1581",
				["nameplateMinAlphaDistance"] = "Interface/AddOns/Plater/Plater.lua:4296",
				["nameplateLargeBottomInset"] = "Interface/AddOns/Plater/options/Plater_O_Advanced.lua:305",
			},
			["url"] = "https://wago.io/l6ocscKfv/1",
			["show_shield_prediction"] = false,
			["stacking_nameplates_enabled"] = false,
			["aura2_y_offset"] = 0,
			["aura_timer_text_anchor"] = {
				["y"] = 9,
				["x"] = 3,
				["side"] = 5,
			},
			["expansion_triggerwipe"] = {
				[10] = true,
				[3] = true,
			},
			["hide_blizzard_castbar"] = true,
			["npc_cache"] = {
				[8156] = {
					"Servant of Antu'sul", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[11197] = {
					"Mindless Skeleton", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[39705] = {
					"Ascendant Lord Obsidius", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[28580] = {
					"Hardened Steel Skycaller", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[26550] = {
					"Dragonflayer Deathseeker", -- [1]
					"Utgarde Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[9199] = {
					"Spirestone Enforcer", -- [1]
					"Blackrock Spire", -- [2]
					"enUS", -- [3]
				},
				[11261] = {
					"Doctor Theolen Krastinov", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[13323] = {
					"Subterranean Diemetradon", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[14354] = {
					"Pusillin", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[17455] = {
					"Bonechewer Beastmaster", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
					"enUS", -- [3]
				},
				[14370] = {
					"Cadaverous Worm", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[26694] = {
					"Ymirjar Dusk Shaman", -- [1]
					"Utgarde Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[14386] = {
					"Wandering Eye of Kilrogg", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[18558] = {
					"Phasing Sorcerer", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
					"enUS", -- [3]
				},
				[7209] = {
					"Obsidian Shard", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[28836] = {
					"Stormforged Runeshaper", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[9319] = {
					"Houndmaster Grebmar", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[10382] = {
					"Mangled Cadaver", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10390] = {
					"Skeletal Guardian", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10398] = {
					"Thuzadin Shadowcaster", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10406] = {
					"Ghoul Ravener", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10414] = {
					"Patchwork Horror", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10422] = {
					"Risen Sorcerer", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[11453] = {
					"Wildspawn Trickster", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[10438] = {
					"Maleki the Pallid", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[11469] = {
					"Eldreth Seether", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[11477] = {
					"Rotting Highborne", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[10470] = {
					"Scholomance Neophyte", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[11501] = {
					"King Gordok", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[10486] = {
					"Risen Warrior", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[30179] = {
					"Twilight Apostle", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[10502] = {
					"Lady Illucia Barov", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[7309] = {
					"Earthen Custodian", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[39994] = {
					"Conflagration", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[5271] = {
					"Atal'ai Deathwalker", -- [1]
					"Sunken Temple", -- [2]
					"enUS", -- [3]
				},
				[7321] = {
					"Stonevault Flameweaver", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[7329] = {
					"Withered Quilguard", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[7333] = {
					"Withered Battle Boar", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[5291] = {
					"Hakkari Frostwing", -- [1]
					"Sunken Temple", -- [2]
					"enUS", -- [3]
				},
				[7341] = {
					"Skeletal Frostweaver", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[7345] = {
					"Splinterbone Captain", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[7349] = {
					"Tomb Fiend", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[7353] = {
					"Freezing Spirit", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[7357] = {
					"Mordresh Fire Eye", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[4292] = {
					"Scarlet Protector", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4300] = {
					"Scarlet Wizard", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[10678] = {
					"Plagued Hatchling", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[17264] = {
					"Bonechewer Ravener", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
					"enUS", -- [3]
				},
				[7397] = {
					"Earthen Stonecarver", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[7405] = {
					"Deadly Cleft Scorpid", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[28581] = {
					"Stormforged Tactician", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[18431] = {
					"Ethereal Beacon", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
					"enUS", -- [3]
				},
				[11789] = {
					"Deep Borer", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[18495] = {
					"Auchenai Vindicator", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
					"enUS", -- [3]
				},
				[27734] = {
					"Crypt Fiend", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[26727] = {
					"Mage Hunter Ascendant", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[28837] = {
					"Stormforged Sentinel", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[30963] = {
					"Azure Mage Slayer", -- [1]
					"Violet Hold", -- [2]
					"enUS", -- [3]
				},
				[28965] = {
					"Titanium Thunderer", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[17728] = {
					"Murkblood Tribesman", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[27974] = {
					"Eroded Shardling", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[8896] = {
					"Shadowforge Peasant", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8904] = {
					"Shadowforge Senator", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8912] = {
					"Twilight's Hammer Torturer", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8920] = {
					"Weapon Technician", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[13036] = {
					"Gordok Mastiff", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[40923] = {
					"Unstable Corruption", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[11030] = {
					"Mindless Undead", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[11054] = {
					"Risen Rifleman", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[9016] = {
					"Bael'Gar", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[9040] = {
					"Dope'rel", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[9056] = {
					"Fineous Darkvire", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[7605] = {
					"Raven", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[11142] = {
					"Undead Postman", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[13196] = {
					"Phase Lasher", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[27431] = {
					"Drakkari Commander", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[12221] = {
					"Noxious Slime", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[17281] = {
					"Bonechewer Ripper", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
					"enUS", -- [3]
				},
				[575] = {
					"Fire Elemental", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[13276] = {
					"Wildspawn Imp", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[9200] = {
					"Spirestone Reaver", -- [1]
					"Blackrock Spire", -- [2]
					"enUS", -- [3]
				},
				[14323] = {
					"Guard Slip'kik", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[26632] = {
					"The Prophet Tharon'ja", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[9240] = {
					"Smolderthorn Shadow Priest", -- [1]
					"Blackrock Spire", -- [2]
					"enUS", -- [3]
				},
				[14371] = {
					"Shen'dralar Provisioner", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[26696] = {
					"Ymirjar Berserker", -- [1]
					"Utgarde Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[26728] = {
					"Mage Hunter Initiate", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[17537] = {
					"Vazruden", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
					"enUS", -- [3]
				},
				[29829] = {
					"Drakkari Earthshaker", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[26792] = {
					"Crystalline Protector", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[26824] = {
					"Drakkari Raptor Mount", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[10383] = {
					"Broken Cadaver", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10391] = {
					"Skeletal Berserker", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10399] = {
					"Thuzadin Acolyte", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10407] = {
					"Fleshflayer Ghoul", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[27975] = {
					"Maiden of Grief", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[10423] = {
					"Risen Priest", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[11454] = {
					"Wildspawn Betrayer", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[10439] = {
					"Ramstein the Gorger", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[11470] = {
					"Eldreth Sorcerer", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[7789] = {
					"Sandfury Cretin", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[10463] = {
					"Shrieking Banshee", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10471] = {
					"Scholomance Acolyte", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[10487] = {
					"Risen Protector", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[10495] = {
					"Diseased Ghoul", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[10503] = {
					"Jandice Barov", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[28167] = {
					"Stratholme Citizen", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[28199] = {
					"Tomb Stalker", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[28231] = {
					"Crystalline Tender", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[11582] = {
					"Scholomance Dark Summoner", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[11622] = {
					"Rattlegore", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[8585] = {
					"Frost Spectre", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[39679] = {
					"Corla, Herald of Twilight", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[4848] = {
					"Shadowforge Darkcaster", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[4852] = {
					"Stonevault Oracle", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[26553] = {
					"Dragonflayer Fanatic", -- [1]
					"Utgarde Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[6906] = {
					"Baelog", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[6910] = {
					"Revelosh", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[28695] = {
					"Molten Golem", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[18497] = {
					"Auchenai Monk", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
					"enUS", -- [3]
				},
				[27736] = {
					"Patchwork Construct", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[26729] = {
					"Steward", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[29830] = {
					"Living Mojo", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[19632] = {
					"Lykul Stinger", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[40447] = {
					"Chains of Woe", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[17730] = {
					"Murkblood Healer", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[8889] = {
					"Anvilrage Overseer", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8897] = {
					"Doomforge Craftsman", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8905] = {
					"Warbringer Construct", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8913] = {
					"Twilight Emissary", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[7022] = {
					"Venomlash Scorpid", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[8929] = {
					"Princess Moira Bronzebeard", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[7030] = {
					"Shadowforge Geologist", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[42973] = {
					"Eye of Naxxramas", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[17938] = {
					"Coilfang Observer", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[28200] = {
					"Dark Necromancer", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[30278] = {
					"Ahn'kahar Spell Flinger", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[9017] = {
					"Lord Incendius", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[9033] = {
					"General Angerforge", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[9041] = {
					"Warder Stilgiss", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[13141] = {
					"Deeprot Stomper", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[20208] = {
					"Mennu's Healing Ward", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[9097] = {
					"Scarshield Legionnaire", -- [1]
					"Blackrock Spire", -- [2]
					"enUS", -- [3]
				},
				[13197] = {
					"Fel Lash", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[12206] = {
					"Primordial Behemoth", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[12222] = {
					"Creeping Sludge", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[28584] = {
					"Unbound Firestorm", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[13285] = {
					"Death Lash", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[14324] = {
					"Cho'Rush the Observer", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[17395] = {
					"Shadowmoon Summoner", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
					"enUS", -- [3]
				},
				[29735] = {
					"Savage Worg", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[9257] = {
					"Scarshield Warlock", -- [1]
					"Blackrock Spire", -- [2]
					"enUS", -- [3]
				},
				[17491] = {
					"Laughing Skull Rogue", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
					"enUS", -- [3]
				},
				[27737] = {
					"Risen Zombie", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[14396] = {
					"Eye of Immol'thar", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[7206] = {
					"Ancient Stone Keeper", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[26794] = {
					"Ormorok the Tree-Shaper", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[28920] = {
					"Stormforged Giant", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[10384] = {
					"Spectral Citizen", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[7246] = {
					"Sandfury Shadowhunter", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[10400] = {
					"Thuzadin Necromancer", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10408] = {
					"Rockwing Gargoyle", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10416] = {
					"Bile Spewer", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10424] = {
					"Risen Gallant", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[11455] = {
					"Wildspawn Felsworn", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[7274] = {
					"Sandfury Executioner", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[17827] = {
					"Claw", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[13533] = {
					"Spewed Larva", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[7286] = {
					"Zul'Farrak Zombie", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[10480] = {
					"Unstable Corpse", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[10488] = {
					"Risen Construct", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[42975] = {
					"Plague Ghoul", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[28169] = {
					"Stratholme Resident", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[11551] = {
					"Necrofiend", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[29240] = {
					"Stormforged Lieutenant", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[30279] = {
					"Deep Crawler", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[5280] = {
					"Nightmare Wyrmkin", -- [1]
					"Sunken Temple", -- [2]
					"enUS", -- [3]
				},
				[9537] = {
					"Hurley Blackbreath", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[7334] = {
					"Battle Boar Horror", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[7342] = {
					"Skeletal Summoner", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[7346] = {
					"Splinterbone Centurion", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[4289] = {
					"Scarlet Evoker", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4297] = {
					"Scarlet Conjuror", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4301] = {
					"Scarlet Centurion", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[28585] = {
					"Slag", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[18371] = {
					"Shirrak the Dead Watcher", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
					"enUS", -- [3]
				},
				[17380] = {
					"Broggok", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
					"enUS", -- [3]
				},
				[20465] = {
					"Underbog Frenzy", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[11783] = {
					"Theradrim Shardling", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[11791] = {
					"Putridus Trickster", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[18499] = {
					"Unliving Sorcerer", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
					"enUS", -- [3]
				},
				[29768] = {
					"Unyielding Constrictor", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[10808] = {
					"Timmy the Cruel", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[26731] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[26763] = {
					"Anomalus", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[28825] = {
					"Cyclone", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[28921] = {
					"Hadronox", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[17732] = {
					"Lykul Wasp", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[27978] = {
					"Sjonnir The Ironshaper", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[8890] = {
					"Anvilrage Warden", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8898] = {
					"Anvilrage Marshal", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8906] = {
					"Ragereaver Golem", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8914] = {
					"Twilight Bodyguard", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8922] = {
					"Bloodhound Mastiff", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[2748] = {
					"Archaedas", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[17940] = {
					"Coilfang Technician", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[11032] = {
					"Commander Malor", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[9018] = {
					"High Interrogator Gerstahn", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[9034] = {
					"Hate'rel", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[9042] = {
					"Verek", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[13142] = {
					"Deeprot Tangler", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[10081] = {
					"Dustwraith", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[7606] = {
					"Oro Eyegouge", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[11120] = {
					"Risen Hammersmith", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[9098] = {
					"Scarshield Spellbinder", -- [1]
					"Blackrock Spire", -- [2]
					"enUS", -- [3]
				},
				[12207] = {
					"Thessala Hydra", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[27483] = {
					"King Dred", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[17269] = {
					"Bleeding Hollow Darkcaster", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
					"enUS", -- [3]
				},
				[9178] = {
					"Burning Spirit", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[28586] = {
					"General Bjarngrim", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[17381] = {
					"The Maker", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
					"enUS", -- [3]
				},
				[17397] = {
					"Shadowmoon Adept", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
					"enUS", -- [3]
				},
				[26620] = {
					"Drakkari Guardian", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[17429] = {
					"Fel Orc Neophyte", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
					"enUS", -- [3]
				},
				[5648] = {
					"Sandfury Shadowcaster", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[26668] = {
					"Svala Sorrowgrave", -- [1]
					"Utgarde Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[9258] = {
					"Scarshield Raider", -- [1]
					"Blackrock Spire", -- [2]
					"enUS", -- [3]
				},
				[14389] = {
					"Netherwalker", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[14397] = {
					"Mana Burst", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[28826] = {
					"Stormfury Revenant", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[44841] = {
					"Blight Beast", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[10413] = {
					"Crypt Beast", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[17653] = {
					"Shadowmoon Channeler", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
					"enUS", -- [3]
				},
				[24830] = {
					"Stonevault Pillager", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[10385] = {
					"Ghostly Citizen", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[52761] = {
					"Gordok Reaver", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[44648] = {
					"Unyielding Behemoth", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[5720] = {
					"Weaver", -- [1]
					"Sunken Temple", -- [2]
					"enUS", -- [3]
				},
				[10417] = {
					"Venom Belcher", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10425] = {
					"Risen Battle Mage", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10433] = {
					"Marduk Blackpool", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[11464] = {
					"Warpwood Tangler", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[11472] = {
					"Eldreth Spirit", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[11480] = {
					"Arcane Aberration", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[11488] = {
					"Illyanna Ravenoak", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[11496] = {
					"Immol'thar", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[10481] = {
					"Reanimated Corpse", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[10489] = {
					"Risen Guard", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[44715] = {
					"Vicious Mindlasher", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[10505] = {
					"Instructor Malicia", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[17941] = {
					"Mennu the Betrayer", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[17957] = {
					"Coilfang Champion", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[11473] = {
					"Eldreth Spectre", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[40925] = {
					"Tainted Sentry", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[40788] = {
					"Mindbender Ghur'sha", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[40825] = {
					"Erunak Stonespeaker", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[40936] = {
					"Faceless Watcher", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[30329] = {
					"Savage Cave Beast", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[9554] = {
					"Hammered Patron", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[11462] = {
					"Warpwood Treant", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[18702] = {
					"Auchenai Necromancer", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
					"enUS", -- [3]
				},
				[40765] = {
					"Commander Ulthok", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[44404] = {
					"Naz'jar Tempest Witch", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[40633] = {
					"Naz'jar Honor Guard", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[28619] = {
					"Web Wrap", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[40579] = {
					"Deep Murloc Hunter", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[40634] = {
					"Naz'jar Tempest Witch", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[40577] = {
					"Naz'jar Sentinel", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[41096] = {
					"Naz'jar Spiritmender", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[45620] = {
					"Naz'jar Soldier", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[39616] = {
					"Naz'jar Invader", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[40817] = {
					"Shadow of Obsidius", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[17270] = {
					"Bleeding Hollow Archer", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
					"enUS", -- [3]
				},
				[10697] = {
					"Bile Slime", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[24078] = {
					"Dragonflayer Metalworker", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[4849] = {
					"Shadowforge Archaeologist", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[4853] = {
					"Stonevault Geomancer", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[4857] = {
					"Stone Keeper", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[4861] = {
					"Shrike Bat", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[28587] = {
					"Volkhan", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[17398] = {
					"Nascent Fel Orc", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
					"enUS", -- [3]
				},
				[11784] = {
					"Theradrim Guardian", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[3975] = {
					"Herod", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[3977] = {
					"High Inquisitor Whitemane", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[26669] = {
					"Ymirjar Savage", -- [1]
					"Utgarde Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[17478] = {
					"Bleeding Hollow Scryer", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
					"enUS", -- [3]
				},
				[40013] = {
					"Buster", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[7291] = {
					"Galgann Firehammer", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[26687] = {
					"Gortok Palehoof", -- [1]
					"Utgarde Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[40023] = {
					"Defiled Earth Rager", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[29834] = {
					"Drakkari Frenzy", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[40017] = {
					"Twilight Element Warden", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[40021] = {
					"Incendiary Spark", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[24080] = {
					"Dragonflayer Weaponsmith", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[39698] = {
					"Karsh Steelbender", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[17370] = {
					"Laughing Skull Enforcer", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
					"enUS", -- [3]
				},
				[26861] = {
					"King Ymiron", -- [1]
					"Utgarde Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[28923] = {
					"Loken", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[10419] = {
					"Risen Conjuror", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[39990] = {
					"Twilight Zealot", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[7247] = {
					"Sandfury Soul Eater", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[17734] = {
					"Underbog Lord", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[39665] = {
					"Rom'ogg Bonecrusher", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[8891] = {
					"Anvilrage Guardsman", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8899] = {
					"Doomforge Dragoon", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8907] = {
					"Wrath Hammer Construct", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[9938] = {
					"Magmus", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[7023] = {
					"Obsidian Sentinel", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[11459] = {
					"Ironbark Protector", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[39980] = {
					"Twilight Sadist", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[39978] = {
					"Twilight Torturer", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[39708] = {
					"Twilight Flame Caller", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[29306] = {
					"Gal'darah", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[40935] = {
					"Gilgoblin Hunter", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[17942] = {
					"Quagmirran", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[17958] = {
					"Coilfang Defender", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[40008] = {
					"Lucky", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[17990] = {
					"Underbog Mushroom", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[29051] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[9019] = {
					"Emperor Dagran Thaurissan", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[30418] = {
					"Bound Air Elemental", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[9035] = {
					"Anger'rel", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[29637] = {
					"Crafty Snake", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[26746] = {
					"Crazed Mana-Wraith", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[29573] = {
					"Drakkari Elemental", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[29832] = {
					"Drakkari Golem", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[11121] = {
					"Black Guard Swordsmith", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[9039] = {
					"Doom'rel", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[29305] = {
					"Moorabi", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[27389] = {
					"Dalronn the Controller", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[8138] = {
					"Sul'lithuz Broodling", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[27979] = {
					"Forged Iron Trogg", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[28838] = {
					"Titanium Vanguard", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[28583] = {
					"Blistering Steamrager", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[28582] = {
					"Stormforged Mender", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[12216] = {
					"Poison Sprite", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[17271] = {
					"Bonechewer Destroyer", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
					"enUS", -- [3]
				},
				[5719] = {
					"Morphaz", -- [1]
					"Sunken Temple", -- [2]
					"enUS", -- [3]
				},
				[27977] = {
					"Krystallus", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[5711] = {
					"Ogom the Wretched", -- [1]
					"Sunken Temple", -- [2]
					"enUS", -- [3]
				},
				[7273] = {
					"Gahz'rilla", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[28249] = {
					"Devouring Ghoul", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[27597] = {
					"Hulking Corpse", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[14326] = {
					"Guard Mol'dar", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[17399] = {
					"Seductress", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
					"enUS", -- [3]
				},
				[7175] = {
					"Stonevault Ambusher", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[28684] = {
					"Krik'thir the Gatewatcher", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[29304] = {
					"Slad'ran", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[26670] = {
					"Ymirjar Flesh Hunter", -- [1]
					"Utgarde Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[28732] = {
					"Anub'ar Warrior", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[14382] = {
					"Lorekeeper Mykos", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[28201] = {
					"Bile Golem", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[14398] = {
					"Eldreth Darter", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[29819] = {
					"Drakkari Lancer", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[27963] = {
					"Dark Rune Theurgist", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[26782] = {
					"Crystalline Keeper", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[18179] = {
					"Corrupted Nova Totem", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[45412] = {
					"Lord Aurius Rivendare", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[26830] = {
					"Risen Drakkari Death Knight", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[27965] = {
					"Dark Rune Shaper", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[29931] = {
					"Drakkari Rhino", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[28924] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[1557] = {
					"HerrNilsson", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10394] = {
					"Black Guard Sentry", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[27949] = {
					"Alliance Commander", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[17735] = {
					"Wrathfin Warrior", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[10418] = {
					"Risen Guardsman", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10426] = {
					"Risen Inquisitor", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[7267] = {
					"Chief Ukorz Sandscalp", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[11465] = {
					"Warpwood Stomper", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[7275] = {
					"Shadowpriest Sezz'ziz", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[30660] = {
					"Portal Guardian", -- [1]
					"Violet Hold", -- [2]
					"enUS", -- [3]
				},
				[11489] = {
					"Tendris Warpwood", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[13021] = {
					"Warpwood Crusher", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[10482] = {
					"Risen Lackey", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[32593] = {
					"Skittering Swarmer", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[10498] = {
					"Spectral Tutor", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[10506] = {
					"Kirtonos the Herald", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[30283] = {
					"Plague Walker", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[9499] = {
					"Plugger Spazzring", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[5273] = {
					"Atal'ai High Priest", -- [1]
					"Sunken Temple", -- [2]
					"enUS", -- [3]
				},
				[17991] = {
					"Rokmar the Crackler", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[5277] = {
					"Nightmare Scalebane", -- [1]
					"Sunken Temple", -- [2]
					"enUS", -- [3]
				},
				[7327] = {
					"Withered Warrior", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[29209] = {
					"Carrion Beetle", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[9547] = {
					"Guzzling Patron", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[31010] = {
					"Azure Mage Slayer", -- [1]
					"Violet Hold", -- [2]
					"enUS", -- [3]
				},
				[7343] = {
					"Splinterbone Skeleton", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[7347] = {
					"Boneflayer Ghoul", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[7351] = {
					"Tomb Reaver", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[7355] = {
					"Tuten'kash", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[4290] = {
					"Scarlet Guardsman", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4294] = {
					"Scarlet Sorcerer", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4298] = {
					"Scarlet Defender", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[4302] = {
					"Scarlet Champion", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[14349] = {
					"Pimgib", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[28730] = {
					"Watcher Gashra", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[51660] = {
					"Scarlet Chaplain", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[40586] = {
					"Lady Naz'jar", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[18373] = {
					"Exarch Maladaar", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
					"enUS", -- [3]
				},
				[27962] = {
					"Dark Rune Elementalist", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[18311] = {
					"Ethereal Crypt Raider", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
					"enUS", -- [3]
				},
				[29874] = {
					"Drakkari Inciter", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[18343] = {
					"Tavarok", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
					"enUS", -- [3]
				},
				[10478] = {
					"Splintered Skeleton", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[27960] = {
					"Dark Rune Warrior", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[30667] = {
					"Azure Sorcerer", -- [1]
					"Violet Hold", -- [2]
					"enUS", -- [3]
				},
				[26639] = {
					"Drakkari Shaman", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[17400] = {
					"Felguard Annihilator", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
					"enUS", -- [3]
				},
				[26623] = {
					"Scourge Brute", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[11793] = {
					"Celebrian Dryad", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[27964] = {
					"Dark Rune Scholar", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[40011] = {
					"Spot", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[18503] = {
					"Phantasmal Possessor", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
					"enUS", -- [3]
				},
				[30666] = {
					"Azure Captain", -- [1]
					"Violet Hold", -- [2]
					"enUS", -- [3]
				},
				[27742] = {
					"Infinite Adversary", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[26735] = {
					"Azure Scale-Binder", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[29820] = {
					"Drakkari God Hunter", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[29836] = {
					"Drakkari Battle Rider", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[24200] = {
					"Skarvald the Constructor", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[27753] = {
					"Drakkari Invader", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[26730] = {
					"Mage Slayer", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[17624] = {
					"Laughing Skull Warden", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
					"enUS", -- [3]
				},
				[26621] = {
					"Ghoul Tormentor", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[18309] = {
					"Ethereal Scavenger", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
					"enUS", -- [3]
				},
				[28925] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[24849] = {
					"Proto-Drake Rider", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[17826] = {
					"Swamplord Musel'ek", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[11456] = {
					"Wildspawn Shadowstalker", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[8876] = {
					"Sandfury Acolyte", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[27982] = {
					"Forged Iron Dwarf", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[8892] = {
					"Anvilrage Footman", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8900] = {
					"Doomforge Arcanasmith", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8908] = {
					"Molten War Golem", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[17816] = {
					"Bogstrok", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[23970] = {
					"Vrykul Skeleton", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[8932] = {
					"Borer Beetle", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[29117] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[26622] = {
					"Drakkari Bat", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[11448] = {
					"Gordok Warlock", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[44999] = {
					"Shen'dralar Watcher", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[18500] = {
					"Unliving Cleric", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
					"enUS", -- [3]
				},
				[24082] = {
					"Proto-Drake Handler", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[17960] = {
					"Coilfang Soothsayer", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[28579] = {
					"Hardened Steel Berserker", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[11058] = {
					"Ezra Grimm", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[30284] = {
					"Bonegrinder", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[28547] = {
					"Storming Vortex", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[4860] = {
					"Stone Steward", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[29309] = {
					"Elder Nadox", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[26638] = {
					"Risen Drakkari Bat Rider", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[30338] = {
					"Ahn'kahar Swarmer", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[17377] = {
					"Keli'dan the Breaker", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
					"enUS", -- [3]
				},
				[13160] = {
					"Carrion Swarmer", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[4542] = {
					"High Inquisitor Fairbanks", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[14861] = {
					"Blood Steward of Kirtonos", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[7797] = {
					"Ruuzlu", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[11457] = {
					"Wildspawn Hellcaller", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[18894] = {
					"Felguard Brute", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
					"enUS", -- [3]
				},
				[7358] = {
					"Amnennar the Coldbringer", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[11445] = {
					"Gordok Captain", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[12201] = {
					"Princess Theradras", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[18501] = {
					"Unliving Stalker", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
					"enUS", -- [3]
				},
				[12217] = {
					"Corruptor", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[9156] = {
					"Ambassador Flamelash", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[18312] = {
					"Ethereal Spellbinder", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
					"enUS", -- [3]
				},
				[26918] = {
					"Chaotic Rift", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[18344] = {
					"Nexus-Prince Shaffar", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
					"enUS", -- [3]
				},
				[13280] = {
					"Hydrospawn", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[30277] = {
					"Ahn'kahar Slasher", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[30668] = {
					"Azure Raider", -- [1]
					"Violet Hold", -- [2]
					"enUS", -- [3]
				},
				[14327] = {
					"Lethtendris", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[17401] = {
					"Felhound Manastalker", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
					"enUS", -- [3]
				},
				[26624] = {
					"Wretched Belcher", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[14351] = {
					"Gordok Bushwacker", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[5649] = {
					"Sandfury Blood Drinker", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[26672] = {
					"Bloodthirsty Tundra Wolf", -- [1]
					"Utgarde Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[28734] = {
					"Anub'ar Skirmisher", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[14383] = {
					"Lorekeeper Kildrath", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[27743] = {
					"Infinite Hunter", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[14399] = {
					"Arcane Torrent", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[30625] = {
					"Dúmass", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[27871] = {
					"Flesheating Ghoul", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[17477] = {
					"Hellfire Imp", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
					"enUS", -- [3]
				},
				[26800] = {
					"Alliance Berserker", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[12224] = {
					"Cavern Shambler", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[11490] = {
					"Zevrim Thornhoof", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[8317] = {
					"Atal'ai Deathwalker's Spirit", -- [1]
					"Sunken Temple", -- [2]
					"enUS", -- [3]
				},
				[17731] = {
					"Fen Ray", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[28926] = {
					"Spark of Ionar", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[10387] = {
					"Vengeful Phantom", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[29214] = {
					"Anub'ar Assassin", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[26928] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[10411] = {
					"Eye of Naxxramas", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[27983] = {
					"Dark Rune Protector", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[11450] = {
					"Gordok Reaver", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[10435] = {
					"Magistrate Barthilas", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[11466] = {
					"Highborne Summoner", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[7787] = {
					"Sandfury Slave", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[9436] = {
					"Spawn of Bael'Gar", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[7795] = {
					"Hydromancer Velratha", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[10475] = {
					"Scholomance Student", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[6575] = {
					"Scarlet Trainee", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[10491] = {
					"Risen Bonewarder", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[10499] = {
					"Spectral Researcher", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[10507] = {
					"The Ravenian", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[24083] = {
					"Enslaved Proto-Drake", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[17961] = {
					"Coilfang Enchantress", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[29097] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[19016] = {
					"Hellfire Familiar", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
					"enUS", -- [3]
				},
				[30285] = {
					"Eye of Taldaram", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[23954] = {
					"Ingvar the Plunderer", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[21126] = {
					"Coilfang Scale-Healer", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[29310] = {
					"Jedoga Shadowseeker", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[8916] = {
					"Arena Spectator", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[13022] = {
					"Whip Lasher", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[18105] = {
					"Ghaz'an", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[7335] = {
					"Death's Head Geomancer", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[10477] = {
					"Scholomance Necromancer", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[7796] = {
					"Nekrum Gutchewer", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[28067] = {
					"Dark Iron Brewer", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[11476] = {
					"Skeletal Highborne", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[28733] = {
					"Anub'ar Shadowcaster", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[11460] = {
					"Alzzin's Minion", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[29308] = {
					"Prince Taldaram", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[11444] = {
					"Gordok Mage-Lord", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[5722] = {
					"Hazzas", -- [1]
					"Sunken Temple", -- [2]
					"enUS", -- [3]
				},
				[17725] = {
					"Underbog Lurker", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[27600] = {
					"Risen Shadowcaster", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[18313] = {
					"Ethereal Sorcerer", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
					"enUS", -- [3]
				},
				[17306] = {
					"Watchkeeper Gargolmar", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
					"enUS", -- [3]
				},
				[4850] = {
					"Stonevault Cave Lurker", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[4854] = {
					"Grimlok", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[29630] = {
					"Fanged Pit Viper", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[6908] = {
					"Olaf", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[10504] = {
					"Lord Alexei Barov", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[18700] = {
					"Reanimated Bones", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
					"enUS", -- [3]
				},
				[26625] = {
					"Darkweb Recluse", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[26641] = {
					"Drakkari Gutripper", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[29096] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[40015] = {
					"Runty", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[10811] = {
					"Instructor Galford", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[29774] = {
					"Spitting Cobra", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[27744] = {
					"Infinite Agent", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[26737] = {
					"Crazed Mana-Surge", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[26529] = {
					"Meathook", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[29838] = {
					"Drakkari Rhino", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[11794] = {
					"Sister of Celebras", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[30893] = {
					"Portal Keeper", -- [1]
					"Violet Hold", -- [2]
					"enUS", -- [3]
				},
				[18176] = {
					"Tainted Earthgrab Totem", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[17626] = {
					"Laughing Skull Legionnaire", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
					"enUS", -- [3]
				},
				[28731] = {
					"Watcher Silthik", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[28729] = {
					"Watcher Narjil", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[17770] = {
					"Hungarfen", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[8909] = {
					"Fireguard", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[29982] = {
					"Drakkari Raider", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[26929] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[18524] = {
					"Angered Skeleton", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
					"enUS", -- [3]
				},
				[27984] = {
					"Dark Rune Stormcaller", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[8893] = {
					"Anvilrage Soldier", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8901] = {
					"Anvilrage Reservist", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[10955] = {
					"Summoned Water Elemental", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[23956] = {
					"Dragonflayer Strategist", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[17414] = {
					"Shadowmoon Technician", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
					"enUS", -- [3]
				},
				[9956] = {
					"Shadowforge Flame Keeper", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[29119] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[17882] = {
					"The Black Stalker", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[6017] = {
					"Lava Spout Totem", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[17727] = {
					"Wrathfin Sentry", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[40943] = {
					"Gilgoblin Aquamage", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[24084] = {
					"Tunneling Ghoul", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[17962] = {
					"Coilfang Collaborator", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[11043] = {
					"Risen Monk", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[29311] = {
					"Herald Volazj", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[30286] = {
					"Frostbringer", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[8095] = {
					"Sul'lithuz Sandcrawler", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[7076] = {
					"Earthen Guardian", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[9037] = {
					"Gloom'rel", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[9045] = {
					"Scarshield Acolyte", -- [1]
					"Blackrock Spire", -- [2]
					"enUS", -- [3]
				},
				[11486] = {
					"Prince Tortheldrin", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[30414] = {
					"Forgotten One", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[11471] = {
					"Eldreth Apparition", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[28368] = {
					"Ymirjar Necromancer", -- [1]
					"Utgarde Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[8127] = {
					"Antu'sul", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[17729] = {
					"Murkblood Spearman", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[17871] = {
					"Underbog Shambler", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[3560] = {
					"Healing Ward", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[12218] = {
					"Vile Larva", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[28578] = {
					"Hardened Steel Reaver", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[24201] = {
					"Dalronn the Controller", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[30622] = {
					"Bigflats", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[17259] = {
					"Bonechewer Hungerer", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
					"enUS", -- [3]
				},
				[12258] = {
					"Razorlash", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[18314] = {
					"Nexus Stalker", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
					"enUS", -- [3]
				},
				[17307] = {
					"Vazruden the Herald", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
					"enUS", -- [3]
				},
				[26530] = {
					"Salramm the Fleshcrafter", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[8179] = {
					"Greater Healing Ward", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[12219] = {
					"Barbed Lasher", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[17371] = {
					"Shadowmoon Warlock", -- [1]
					"Hellfire Citadel: The Blood Furnace", -- [2]
					"enUS", -- [3]
				},
				[28922] = {
					"Anub'ar Crusher", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[23953] = {
					"Prince Keleseth", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[26626] = {
					"Scourge Reanimator", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[28736] = {
					"Skittering Infector", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[39985] = {
					"Mad Prisoner", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[14368] = {
					"Lorekeeper Lydros", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[26690] = {
					"Ymirjar Warrior", -- [1]
					"Utgarde Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[27729] = {
					"Enraging Ghoul", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[26722] = {
					"Azure Magus", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[14400] = {
					"Arcane Feedback", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[4286] = {
					"Scarlet Soldier", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[26793] = {
					"Crystalline Frayer", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[26930] = {
					"Grand Magus Telestra", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[26802] = {
					"Alliance Ranger", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[27969] = {
					"Dark Rune Giant", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[7228] = {
					"Ironaya", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[24079] = {
					"Dragonflayer Forge Master", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[10420] = {
					"Risen Initiate", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[17771] = {
					"Murkblood Oracle", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[30111] = {
					"Twilight Worshipper", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[10476] = {
					"Scholomance Necrolyte", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[17723] = {
					"Bog Giant", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[10412] = {
					"Crypt Crawler", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[27985] = {
					"Iron Golem Custodian", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[11451] = {
					"Wildspawn Satyr", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[10436] = {
					"Baroness Anastari", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[7272] = {
					"Theka the Martyr", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[11475] = {
					"Eldreth Phantasm", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[11483] = {
					"Mana Remnant", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[9545] = {
					"Grim Patron", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[29120] = {
					"Anub'arak", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[28384] = {
					"Lesser Air Elemental", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[24069] = {
					"Dragonflayer Bonecrusher", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[10500] = {
					"Spectral Teacher", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[10508] = {
					"Ras Frostwhisper", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[10516] = {
					"The Unforgiven", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[17963] = {
					"Wastewalker Slave", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[5270] = {
					"Atal'ai Corpse Eater", -- [1]
					"Sunken Temple", -- [2]
					"enUS", -- [3]
				},
				[7320] = {
					"Stonevault Mauler", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[30287] = {
					"Plundering Geist", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[7328] = {
					"Withered Reaver", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[9541] = {
					"Blackbreath Crony", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[21128] = {
					"Coilfang Ray", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[30624] = {
					"Gobbledes", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[7344] = {
					"Splinterbone Warrior", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[7348] = {
					"Thorn Eater Ghoul", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[7352] = {
					"Frozen Soul", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[26734] = {
					"Azure Enforcer", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[21127] = {
					"Coilfang Tempest", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[4295] = {
					"Scarlet Myrmidon", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[17964] = {
					"Wastewalker Worker", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[4303] = {
					"Scarlet Abbot", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[7271] = {
					"Witch Doctor Zum'rah", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[14303] = {
					"Petrified Guardian", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[1853] = {
					"Darkmaster Gandling", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[30176] = {
					"Ahn'kahar Guardian", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[19306] = {
					"Mana Leech", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
					"enUS", -- [3]
				},
				[7396] = {
					"Earthen Stonebreaker", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[18315] = {
					"Ethereal Theurgist", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
					"enUS", -- [3]
				},
				[17308] = {
					"Omor the Unscarred", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
					"enUS", -- [3]
				},
				[30623] = {
					"Raynna", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[14308] = {
					"Ferra", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[10464] = {
					"Wailing Banshee", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[8336] = {
					"Hakkari Sapper", -- [1]
					"Sunken Temple", -- [2]
					"enUS", -- [3]
				},
				[7332] = {
					"Withered Spearhide", -- [1]
					"Kalimdor", -- [2]
					"enUS", -- [3]
				},
				[29680] = {
					"Slad'ran Viper", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[26627] = {
					"Crystal Handler", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[6907] = {
					"Eric \"The Swift\"", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[39987] = {
					"Evolved Twilight Zealot", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[40019] = {
					"Twilight Obsidian Borer", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[26691] = {
					"Ymirjar Witch Doctor", -- [1]
					"Utgarde Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[23961] = {
					"Dragonflayer Ironhelm", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[26723] = {
					"Keristrasza", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[12220] = {
					"Constrictor Vine", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[18341] = {
					"Pandemonius", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
					"enUS", -- [3]
				},
				[11467] = {
					"Tsu'zee", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[28961] = {
					"Titanium Siegebreaker", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[9267] = {
					"Smolderthorn Axe Thrower", -- [1]
					"Blackrock Spire", -- [2]
					"enUS", -- [3]
				},
				[18331] = {
					"Ethereal Darkcaster", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
					"enUS", -- [3]
				},
				[42971] = {
					"Rockwing Gargoyle", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10876] = {
					"Undead Scarab", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[7012] = {
					"Earthen Sculptor", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[11461] = {
					"Warpwood Guardian", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[17817] = {
					"Greater Bogstrok", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[31007] = {
					"Azure Binder", -- [1]
					"Violet Hold", -- [2]
					"enUS", -- [3]
				},
				[17724] = {
					"Underbat", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[27970] = {
					"Raging Construct", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[26716] = {
					"Azure Warder", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[8894] = {
					"Anvilrage Medic", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8902] = {
					"Shadowforge Citizen", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8910] = {
					"Blazing Fireguard", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[39700] = {
					"Beauty", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[17280] = {
					"Shattered Hand Warhound", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
					"enUS", -- [3]
				},
				[28410] = {
					"Dragonflayer Spiritualist", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[11082] = {
					"Stratholme Courier", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[54303] = {
					"Doomguard", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[29153] = {
					"Animated Bones", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[9239] = {
					"Smolderthorn Mystic", -- [1]
					"Blackrock Spire", -- [2]
					"enUS", -- [3]
				},
				[8477] = {
					"Skeletal Servant", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[5283] = {
					"Nightmare Wanderer", -- [1]
					"Sunken Temple", -- [2]
					"enUS", -- [3]
				},
				[29217] = {
					"Anub'ar Venomancer", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[7290] = {
					"Shadowforge Sharpshooter", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[29216] = {
					"Anub'ar Guardian", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[40084] = {
					"Bellows Slave", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[30319] = {
					"Twilight Darkcaster", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[24085] = {
					"Dragonflayer Overseer", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[9038] = {
					"Seeth'rel", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[31134] = {
					"Cyanigosa", -- [1]
					"Violet Hold", -- [2]
					"enUS", -- [3]
				},
				[7268] = {
					"Sandfury Guardian", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[7604] = {
					"Sergeant Bly", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[7608] = {
					"Murta Grimgut", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[30416] = {
					"Bound Fire Elemental", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[18498] = {
					"Unliving Soldier", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
					"enUS", -- [3]
				},
				[7011] = {
					"Earthen Rocksmasher", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[7337] = {
					"Death's Head Necromancer", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[8921] = {
					"Bloodhound", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[18506] = {
					"Raging Soul", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
					"enUS", -- [3]
				},
				[26674] = {
					"Darkweb Hatchling", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[12203] = {
					"Landslide", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[23965] = {
					"Frost Tomb", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[19307] = {
					"Nexus Terror", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
					"enUS", -- [3]
				},
				[44752] = {
					"Faceless Sapper", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[28546] = {
					"Ionar", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[17309] = {
					"Hellfire Watcher", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
					"enUS", -- [3]
				},
				[26532] = {
					"Chrono-Lord Epoch", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[13282] = {
					"Noxxion", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[9198] = {
					"Spirestone Mystic", -- [1]
					"Blackrock Spire", -- [2]
					"enUS", -- [3]
				},
				[14321] = {
					"Guard Fengus", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[7269] = {
					"Scarab", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[11458] = {
					"Petrified Treant", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[26628] = {
					"Drakkari Scytheclaw", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[29713] = {
					"Slad'ran Constrictor", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[5650] = {
					"Sandfury Witch Doctor", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[14369] = {
					"Shen'dralar Zealot", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[26692] = {
					"Ymirjar Harpooner", -- [1]
					"Utgarde Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[27731] = {
					"Acolyte", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[17517] = {
					"Hellfire Sentry", -- [1]
					"Hellfire Citadel: Ramparts", -- [2]
					"enUS", -- [3]
				},
				[18556] = {
					"Phasing Soldier", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
					"enUS", -- [3]
				},
				[29340] = {
					"Anub'ar Brood Keeper", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[18177] = {
					"Tainted Stoneskin Totem", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[18521] = {
					"Raging Skeleton", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
					"enUS", -- [3]
				},
				[7078] = {
					"Cleft Scorpid", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[5721] = {
					"Dreamscythe", -- [1]
					"Sunken Temple", -- [2]
					"enUS", -- [3]
				},
				[8440] = {
					"Avatar of Hakkar", -- [1]
					"Sunken Temple", -- [2]
					"enUS", -- [3]
				},
				[8319] = {
					"Nightmare Whelp", -- [1]
					"Sunken Temple", -- [2]
					"enUS", -- [3]
				},
				[11492] = {
					"Alzzin the Wildshaper", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[10381] = {
					"Ravaged Cadaver", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[5710] = {
					"Jammal'an the Prophet", -- [1]
					"Sunken Temple", -- [2]
					"enUS", -- [3]
				},
				[30621] = {
					"Dúmass", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[10405] = {
					"Plague Ghoul", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[27971] = {
					"Unrelenting Construct", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[10421] = {
					"Risen Defender", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[11452] = {
					"Wildspawn Rogue", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[10437] = {
					"Nerub'enkan", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[29098] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[7788] = {
					"Sandfury Drudge", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[11484] = {
					"Residual Monstrosity", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[10469] = {
					"Scholomance Adept", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[32191] = {
					"Azure Stalker", -- [1]
					"Violet Hold", -- [2]
					"enUS", -- [3]
				},
				[10485] = {
					"Risen Aberration", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[10472] = {
					"Scholomance Occultist", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[29063] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[24071] = {
					"Dragonflayer Heartsplitter", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[29064] = {
					"Anub'ar Necromancer", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[9502] = {
					"Phalanx", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[29118] = {
					"Anub'ar Crypt Fiend", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[50284] = {
					"Twilight Zealot", -- [1]
					"Blackrock Caverns", -- [2]
					"enUS", -- [3]
				},
				[8915] = {
					"Twilight's Hammer Ambassador", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[13456] = {
					"Noxxion's Spawn", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
				[29128] = {
					"Anub'ar Prime Guard", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[29314] = {
					"Zuramat the Obliterator", -- [1]
					"Violet Hold", -- [2]
					"enUS", -- [3]
				},
				[26635] = {
					"Risen Drakkari Warrior", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[5709] = {
					"Shade of Eranikus", -- [1]
					"Sunken Temple", -- [2]
					"enUS", -- [3]
				},
				[30385] = {
					"Twilight Volunteer", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[29213] = {
					"Anub'ar Darter", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[8567] = {
					"Glutton", -- [1]
					"Razorfen Downs", -- [2]
					"enUS", -- [3]
				},
				[30276] = {
					"Ahn'kahar Web Winder", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[51659] = {
					"Scarlet Monk", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[28419] = {
					"Frenzied Geist", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[29335] = {
					"Anub'ar Webspinner", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[11257] = {
					"Scholomance Handler", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[27709] = {
					"Drakkari Invader", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[44658] = {
					"Deep Murloc Invader", -- [1]
					"Throne of the Tides", -- [2]
					"enUS", -- [3]
				},
				[30419] = {
					"Bound Water Elemental", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[11441] = {
					"Gordok Brute", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[9036] = {
					"Vile'rel", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[18317] = {
					"Ethereal Priest", -- [1]
					"Auchindoun: Mana-Tombs", -- [2]
					"enUS", -- [3]
				},
				[4847] = {
					"Shadowforge Relic Hunter", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[26533] = {
					"Mal'Ganis", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[4855] = {
					"Stonevault Brawler", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[29062] = {
					"Anub'ar Champion", -- [1]
					"Azjol-Nerub", -- [2]
					"enUS", -- [3]
				},
				[4863] = {
					"Jadespine Basilisk", -- [1]
					"Uldaman", -- [2]
					"enUS", -- [3]
				},
				[27966] = {
					"Dark Rune Controller", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[26636] = {
					"Risen Drakkari Soulmage", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[10409] = {
					"Rockwing Screecher", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[3976] = {
					"Scarlet Commander Mograine", -- [1]
					"Scarlet Monastery", -- [2]
					"enUS", -- [3]
				},
				[26630] = {
					"Trollgore", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[18493] = {
					"Auchenai Soulpriest", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
					"enUS", -- [3]
				},
				[26693] = {
					"Skadi the Ruthless", -- [1]
					"Utgarde Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[27732] = {
					"Master Necromancer", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[10813] = {
					"Balnazzar", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[18557] = {
					"Phasing Cleric", -- [1]
					"Auchindoun: Auchenai Crypts", -- [2]
					"enUS", -- [3]
				},
				[29826] = {
					"Drakkari Medicine Man", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[27598] = {
					"Fetid Troll Corpse", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[28835] = {
					"Stormforged Construct", -- [1]
					"Halls of Lightning", -- [2]
					"enUS", -- [3]
				},
				[26805] = {
					"Alliance Cleric", -- [1]
					"The Nexus", -- [2]
					"enUS", -- [3]
				},
				[26631] = {
					"Novos the Summoner", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[9416] = {
					"Scarshield Worg", -- [1]
					"Blackrock Spire", -- [2]
					"enUS", -- [3]
				},
				[26637] = {
					"Risen Drakkari Handler", -- [1]
					"Drak'Tharon Keep", -- [2]
					"enUS", -- [3]
				},
				[30961] = {
					"Azure Invader", -- [1]
					"Violet Hold", -- [2]
					"enUS", -- [3]
				},
				[17959] = {
					"Coilfang Slavehandler", -- [1]
					"Coilfang: The Slave Pens", -- [2]
					"enUS", -- [3]
				},
				[10901] = {
					"Lorekeeper Polkelt", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[31009] = {
					"Azure Spellbreaker", -- [1]
					"Violet Hold", -- [2]
					"enUS", -- [3]
				},
				[17726] = {
					"Wrathfin Myrmidon", -- [1]
					"Coilfang: The Underbog", -- [2]
					"enUS", -- [3]
				},
				[27972] = {
					"Lightning Construct", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[30695] = {
					"Portal Keeper", -- [1]
					"Violet Hold", -- [2]
					"enUS", -- [3]
				},
				[8895] = {
					"Anvilrage Officer", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8903] = {
					"Anvilrage Captain", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[8911] = {
					"Fireguard Destroyer", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[23960] = {
					"Dragonflayer Runecaster", -- [1]
					"Utgarde Keep", -- [2]
					"enUS", -- [3]
				},
				[30114] = {
					"Twilight Initiate", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[29307] = {
					"Drakkari Colossus", -- [1]
					"Gundrak", -- [2]
					"enUS", -- [3]
				},
				[10432] = {
					"Vectus", -- [1]
					"Scholomance", -- [2]
					"enUS", -- [3]
				},
				[10997] = {
					"Willey Hopebreaker", -- [1]
					"Stratholme", -- [2]
					"enUS", -- [3]
				},
				[30178] = {
					"Ahn'kahar Swarmer ", -- [1]
					"Ahn'kahet: The Old Kingdom", -- [2]
					"enUS", -- [3]
				},
				[27961] = {
					"Dark Rune Worker", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[11487] = {
					"Magister Kalendris", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[8983] = {
					"Golem Lord Argelmach", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[26536] = {
					"Mindless Servant", -- [1]
					"Utgarde Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[26554] = {
					"Dragonflayer Seer", -- [1]
					"Utgarde Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[26555] = {
					"Scourge Hulk", -- [1]
					"Utgarde Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[26684] = {
					"Ravenous Furbolg", -- [1]
					"Utgarde Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[26685] = {
					"Massive Jormungar", -- [1]
					"Utgarde Pinnacle", -- [2]
					"enUS", -- [3]
				},
				[9031] = {
					"Anub'shiah", -- [1]
					"Blackrock Depths", -- [2]
					"enUS", -- [3]
				},
				[29315] = {
					"Erekem", -- [1]
					"Violet Hold", -- [2]
					"enUS", -- [3]
				},
				[14325] = {
					"Captain Kromcrush", -- [1]
					"Dire Maul", -- [2]
					"enUS", -- [3]
				},
				[6066] = {
					"Earthgrab Totem", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[28340] = {
					"Stratholme Citizen", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[8120] = {
					"Sul'lithuz Abomination", -- [1]
					"Zul'Farrak", -- [2]
					"enUS", -- [3]
				},
				[29395] = {
					"Erekem Guard", -- [1]
					"Violet Hold", -- [2]
					"enUS", -- [3]
				},
				[27733] = {
					"Ghoul Minion", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[27973] = {
					"Crystalline Shardling", -- [1]
					"Halls of Stone", -- [2]
					"enUS", -- [3]
				},
				[28341] = {
					"Stratholme Resident", -- [1]
					"The Culling of Stratholme", -- [2]
					"enUS", -- [3]
				},
				[12223] = {
					"Cavern Lurker", -- [1]
					"Maraudon", -- [2]
					"enUS", -- [3]
				},
			},
			["indicator_anchor"] = {
				["x"] = 0,
				["side"] = 7,
			},
			["hide_name_on_game_objects"] = false,
			["aura_width2"] = 16,
			["aura_stack_size"] = 8,
			["class_colors"] = {
				["DEATHKNIGHT"] = {
					["colorStr"] = "ffc31d3a",
				},
				["WARRIOR"] = {
					["colorStr"] = "ffc69a6d",
				},
				["PALADIN"] = {
					["colorStr"] = "fff48bb9",
				},
				["WARLOCK"] = {
					["colorStr"] = "ff8687ed",
				},
				["DEMONHUNTER"] = {
					["colorStr"] = "ffa22fc8",
				},
				["ROGUE"] = {
					["colorStr"] = "fffff467",
				},
				["DRUID"] = {
					["colorStr"] = "ffff7c09",
				},
				["EVOKER"] = {
					["colorStr"] = "ff33937e",
				},
				["SHAMAN"] = {
					["colorStr"] = "ff006fdd",
				},
			},
			["script_auto_imported"] = {
				["Aura - Is Cast Bar [P]"] = 1,
				["Aura - Buff Alert"] = 15,
				["Cast - Effect After Cast [P]"] = 2,
				["Cast - Circular Swipe"] = 4,
				["Aura - Debuff Alert"] = 12,
				["Cast - Castbar is Timer [P]"] = 2,
				["Cast - Ultra Important"] = 14,
				["Add - Health Markers [P]"] = 3,
				["Cast - Small Alert"] = 12,
				["Add - Important [P]"] = 4,
				["Aura - Blink Time Left"] = 13,
				["Add - Tag Number [P]"] = 2,
				["Cast - Special Ability [P]"] = 3,
				["Cast - Heroic Leap [P]"] = 3,
				["Cast - Spark Color [P]"] = 2,
				["Cast - Heal Stun [P]"] = 2,
				["Fixate On You"] = 11,
				["Cast - Shining Green [P]"] = 3,
				["Cast - Important Target [P]"] = 2,
				["Explosion Affix M+"] = 14,
				["Cast - Important by Color [P]"] = 2,
				["Fixate"] = 11,
				["Cast - Quick Flash"] = 2,
				["Cast - AoE Hit All [P]"] = 3,
				["Cast - On Going Cast [P]"] = 2,
				["Fixate by Unit Buff [P]"] = 2,
				["Aura is Shield [P]"] = 5,
				["Cast - Debuff [P]"] = 2,
				["Cast - Simple Interrupt [P]"] = 2,
				["Aura While Casting [P]"] = 1,
				["Cast - Big Alert"] = 14,
				["Cast - Ongoing Cast [P]"] = 4,
				["Cast - Stop Casting"] = 4,
				["Cast - Heal Cut [P]"] = 3,
				["Spiteful Affix"] = 3,
				["Auto Set Skull"] = 11,
				["Cast - Alert + Timer [P]"] = 4,
				["Add - Non Elite Trash [P]"] = 4,
				["Add - Warning [P]"] = 5,
				["Cast - Glowing [P]"] = 10,
				["Cast - Voidzone [P]"] = 2,
				["Cast - AoE With Range [P]"] = 2,
				["Cast - Frontal Cone"] = 17,
				["Add - Explode on Die [P]"] = 1,
				["Countdown"] = 11,
				["Cast - Very Important"] = 15,
				["Cast - Shield Interrupt"] = 2,
				["Unit - Show Energy"] = 11,
			},
			["show_healthbars_on_softinteract"] = false,
			["extra_icon_anchor"] = {
				["x"] = 100,
			},
			["extra_icon_wide_icon"] = false,
			["range_check_alpha"] = 1,
			["semver"] = "1.0.0",
			["aura_frame2_anchor"] = {
				["y"] = 0,
				["side"] = 3,
			},
			["use_name_translit"] = true,
			["aura_alpha"] = 1,
			["auto_toggle_friendly"] = {
				["cities"] = false,
				["world"] = false,
			},
			["aura_cooldown_edge_texture"] = "Interface\\Cooldown\\edge",
			["transparency_behavior"] = 3,
			["aura_consolidate"] = true,
			["extra_icon_width"] = 8,
			["hook_auto_imported"] = {
				["Reorder Nameplate"] = 4,
				["Dont Have Aura"] = 1,
				["Players Targetting Amount"] = 4,
				["Color Automation"] = 1,
				["Extra Border"] = 2,
				["Cast Bar Icon Config"] = 2,
				["Attacking Specific Unit"] = 2,
				["Combo Points"] = 6,
				["Hide Neutral Units"] = 1,
				["Target Color"] = 3,
				["Execute Range"] = 1,
				["Aura Reorder"] = 3,
			},
			["aura_frame1_anchor"] = {
				["y"] = 14,
				["side"] = 3,
			},
			["auto_toggle_enemy_enabled"] = true,
			["honor_blizzard_plate_alpha"] = true,
			["aura_timer_text_font"] = "FORCED SQUARE",
			["aura_show_dispellable"] = false,
			["extra_icon_stack_font"] = "Fira Sans Black",
			["non_targeted_alpha_enabled"] = true,
			["aura2_x_offset"] = 0,
			["target_indicator"] = "Arrow Thin",
			["aura_show_buff_by_the_unit"] = false,
			["opt_out_auto_accept_npc_colors"] = false,
			["saved_cvars"] = {
				["nameplateShowOnlyNames"] = "0",
				["ShowNamePlateLoseAggroFlash"] = "1",
				["nameplateShowEnemyMinus"] = "1",
				["NamePlateClassificationScale"] = "1",
				["nameplateShowFriendlyTotems"] = "0",
				["nameplateShowFriendlyPets"] = "1",
				["nameplatePersonalShowInCombat"] = "1",
				["nameplatePersonalShowWithTarget"] = "1",
				["nameplateMinAlpha"] = "0.90135484",
				["nameplateResourceOnTarget"] = "0",
				["nameplateNotSelectedAlpha"] = "1",
				["clampTargetNameplateToScreen"] = "1",
				["nameplateShowAll"] = "1",
				["nameplateMaxDistance"] = "60",
				["nameplateShowFriendlyMinions"] = "0",
				["nameplateSelfScale"] = "1.6799999475479",
				["nameplateOtherBottomInset"] = "0.10000000149012",
				["SoftTargetInteract"] = "0",
				["nameplateShowEnemies"] = "1",
				["NamePlateVerticalScale"] = "1",
				["nameplateSelectedAlpha"] = "1",
				["nameplateShowSelf"] = "1",
				["nameplatePersonalShowAlways"] = "1",
				["nameplateShowEnemyMinions"] = "1",
				["nameplateShowFriendlyNPCs"] = "1",
				["nameplateSelectedScale"] = "1.75",
				["nameplateRemovalAnimation"] = "0",
				["nameplateLargeBottomInset"] = "0.10000000149012",
				["nameplateMotion"] = "0",
				["nameplateMinAlphaDistance"] = "-158489.31924611",
				["nameplateLargeTopInset"] = "0.10000000149012",
				["nameplateTargetRadialPosition"] = "1",
				["nameplateOtherTopInset"] = "0.10000000149012",
				["NamePlateHorizontalScale"] = "1",
				["nameplateSelfBottomInset"] = "0.4",
				["nameplatePlayerMaxDistance"] = "60",
				["nameplateShowFriendlyGuardians"] = "0",
				["nameplateSelfAlpha"] = "1",
				["SoftTargetNameplateInteract"] = "0",
				["SoftTargetIconGameObject"] = "0",
				["nameplateSelfTopInset"] = "0.59",
				["nameplateShowFriends"] = "1",
			},
			["aura_consolidate_timeleft_lower"] = false,
			["login_counter"] = 608,
			["extra_icon_caster_name"] = false,
			["aura_show_aura_by_other_players"] = true,
			["aura_timer_text_outline"] = "THICKOUTLINE",
			["bossmod_aura_height"] = 8,
			["aura_stack_font"] = "FORCED SQUARE",
			["blizzard_nameplate_font"] = "FORCED SQUARE",
			["hide_enemy_castbars"] = true,
			["OptionsPanelDB"] = {
				["PlaterOptionsPanelFrame"] = {
					["scale"] = 0.75,
				},
			},
			["bossmod_cooldown_text_enabled"] = false,
			["target_highlight_texture"] = "Interface\\AddOns\\Plater\\images\\selection_indicator5",
			["blizzard_nameplate_large_font"] = "FORCED SQUARE",
			["hover_highlight_alpha"] = 0.099999994039536,
			["plate_config"] = {
				["player"] = {
					["spellpercent_text_font"] = "FORCED SQUARE",
					["cast"] = {
						120, -- [1]
					},
					["castbar_enabled"] = false,
					["power_percent_text_enabled"] = false,
					["power_enabled"] = false,
					["healthbar_color"] = {
						0.3098039329052, -- [1]
						0.93333339691162, -- [2]
						0, -- [3]
					},
					["cast_incombat"] = {
						120, -- [1]
					},
					["health_incombat"] = {
						124, -- [1]
					},
					["spellname_text_font"] = "FORCED SQUARE",
					["power_percent_text_font"] = "FORCED SQUARE",
					["spellpercent_text_size"] = 12,
					["spellpercent_text_enabled"] = false,
					["percent_text_font"] = "FORCED SQUARE",
					["buff_frame_y_offset"] = -15,
					["percent_text_show_decimals"] = false,
					["click_through"] = true,
					["healthbar_color_by_hp"] = true,
					["spellname_text_size"] = 12,
					["health"] = {
						124, -- [1]
					},
					["power_percent_text_size"] = 12,
					["percent_text_size"] = 12,
				},
				["friendlyplayer"] = {
					["big_actorname_text_size"] = 10,
					["level_text_size"] = 14,
					["actorname_use_class_color"] = true,
					["cast"] = {
						50, -- [1]
						10, -- [2]
					},
					["big_actortitle_text_size"] = 10,
					["spellname_text_outline"] = "OUTLINE",
					["big_actorname_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["level_text_font"] = "FORCED SQUARE",
					["actorname_text_font"] = "FORCED SQUARE",
					["big_actorname_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["mana_incombat"] = {
						nil, -- [1]
						4, -- [2]
					},
					["all_names"] = true,
					["actorname_text_outline"] = "NONE",
					["big_actortitle_text_outline"] = "OUTLINE",
					["actorname_text_spacing"] = 13,
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["big_actortitle_text_font"] = "FORCED SQUARE",
					["spellpercent_text_size"] = 11,
					["level_text_anchor"] = {
						["y"] = 0,
						["side"] = 1,
					},
					["big_actortitle_text_shadow_color_offset"] = {
						1, -- [1]
						-1, -- [2]
					},
					["cast_incombat"] = {
						120, -- [1]
						24, -- [2]
					},
					["big_actortitle_text_shadow_color"] = {
						0, -- [1]
						0, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["spellname_text_font"] = "FORCED SQUARE",
					["big_actorname_text_outline"] = "OUTLINE",
					["percent_text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
					},
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["mana"] = {
						nil, -- [1]
						4, -- [2]
					},
					["percent_text_enabled"] = true,
					["level_text_alpha"] = 1,
					["percent_text_size"] = 16,
					["percent_text_ooc"] = true,
					["percent_text_font"] = "FORCED SQUARE",
					["buff_frame_y_offset"] = -15,
					["percent_text_outline"] = "NONE",
					["big_actorname_text_font"] = "FORCED SQUARE",
					["quest_color_enabled"] = true,
					["health_incombat"] = {
						120, -- [1]
						14, -- [2]
					},
					["health"] = {
						120, -- [1]
						14, -- [2]
					},
					["spellname_text_size"] = 12,
					["percent_show_health"] = true,
					["quest_enabled"] = true,
					["actorname_text_size"] = 14,
					["level_text_enabled"] = true,
				},
				["friendlynpc"] = {
					["actorname_use_friends_color"] = true,
					["show_guild_name"] = false,
					["level_text_size"] = 14,
					["actorname_use_class_color"] = true,
					["cast"] = {
						50, -- [1]
					},
					["fixed_class_color"] = {
						0, -- [1]
						1, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["spellname_text_outline"] = "OUTLINE",
					["click_through"] = true,
					["level_text_font"] = "FORCED SQUARE",
					["actorname_text_font"] = "FORCED SQUARE",
					["quest_color"] = {
						0.78823536634445, -- [1]
						0, -- [2]
						1, -- [3]
					},
					["actorname_use_guild_color"] = true,
					["actorname_text_spacing"] = 13,
					["only_damaged"] = true,
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["only_thename"] = false,
					["big_actortitle_text_font"] = "FORCED SQUARE",
					["spellpercent_text_size"] = 11,
					["level_text_anchor"] = {
						["y"] = 0,
						["side"] = 1,
					},
					["cast_incombat"] = {
						nil, -- [1]
						24, -- [2]
					},
					["percent_text_ooc"] = true,
					["spellname_text_font"] = "FORCED SQUARE",
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["actorname_text_size"] = 14,
					["percent_text_enabled"] = true,
					["percent_text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
					},
					["big_actorname_text_size"] = 10,
					["actorname_friend_color"] = {
						0.71, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["level_text_alpha"] = 1,
					["percent_text_size"] = 16,
					["big_actortitle_text_size"] = 10,
					["percent_text_font"] = "FORCED SQUARE",
					["buff_frame_y_offset"] = -15,
					["actorname_guild_color"] = {
						0.498039, -- [1]
						1, -- [2]
						0.2, -- [3]
						1, -- [4]
					},
					["percent_text_outline"] = "NONE",
					["percent_show_health"] = true,
					["relevance_state"] = 3,
					["health"] = {
						120, -- [1]
						14, -- [2]
					},
					["big_actorname_text_font"] = "FORCED SQUARE",
					["spellname_text_size"] = 12,
					["health_incombat"] = {
						nil, -- [1]
						14, -- [2]
					},
					["level_text_enabled"] = true,
				},
				["enemynpc"] = {
					["actorname_use_friends_color"] = true,
					["actorname_friend_color"] = {
						0.71, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["level_text_size"] = 6,
					["actorname_use_class_color"] = true,
					["cast"] = {
						60, -- [1]
						5, -- [2]
					},
					["fixed_class_color"] = {
						0, -- [1]
						1, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["click_through"] = true,
					["level_text_font"] = "FORCED SQUARE",
					["actorname_text_font"] = "FORCED SQUARE",
					["actorname_use_guild_color"] = true,
					["actorname_text_spacing"] = 5,
					["only_damaged"] = true,
					["quest_color_enemy"] = {
						0.47058826684952, -- [1]
						0, -- [2]
						1, -- [3]
					},
					["only_thename"] = false,
					["big_actortitle_text_font"] = "FORCED SQUARE",
					["level_text_anchor"] = {
						["y"] = 0,
						["side"] = 1,
					},
					["spellpercent_text_enabled"] = false,
					["cast_incombat"] = {
						nil, -- [1]
						11, -- [2]
					},
					["spellname_text_font"] = "FORCED SQUARE",
					["quest_color_neutral"] = {
						nil, -- [1]
						0, -- [2]
						0.74901962280273, -- [3]
					},
					["actorname_text_size"] = 6,
					["big_actorname_text_font"] = "FORCED SQUARE",
					["big_actorname_text_size"] = 6,
					["actorname_text_anchor"] = {
						["x"] = 12,
						["side"] = 1,
					},
					["percent_text_size"] = 8,
					["show_guild_name"] = false,
					["percent_text_font"] = "FORCED SQUARE",
					["buff_frame_y_offset"] = -15,
					["actorname_guild_color"] = {
						0.498039, -- [1]
						1, -- [2]
						0.2, -- [3]
						1, -- [4]
					},
					["percent_text_outline"] = "NONE",
					["big_actortitle_text_size"] = 6,
					["health_incombat"] = {
						nil, -- [1]
						14, -- [2]
					},
					["health"] = {
						60, -- [1]
						7, -- [2]
					},
					["percent_text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
					},
					["level_text_alpha"] = 1,
				},
				["global_health_width"] = 120,
				["enemyplayer"] = {
					["actorname_use_friends_color"] = true,
					["level_text_size"] = 14,
					["actorname_use_class_color"] = true,
					["cast"] = {
						50, -- [1]
					},
					["fixed_class_color"] = {
						nil, -- [1]
						0.41176474094391, -- [2]
						0, -- [3]
					},
					["spellname_text_outline"] = "OUTLINE",
					["click_through"] = true,
					["level_text_font"] = "FORCED SQUARE",
					["actorname_text_font"] = "FORCED SQUARE",
					["actorname_use_guild_color"] = true,
					["all_names"] = true,
					["actorname_text_spacing"] = 13,
					["only_damaged"] = true,
					["quest_color_enemy"] = {
						1, -- [1]
						0.369, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["only_thename"] = false,
					["big_actortitle_text_font"] = "FORCED SQUARE",
					["spellpercent_text_size"] = 11,
					["spellname_text_size"] = 12,
					["level_text_anchor"] = {
						["y"] = 0,
						["side"] = 1,
					},
					["cast_incombat"] = {
						nil, -- [1]
						24, -- [2]
					},
					["spellname_text_font"] = "FORCED SQUARE",
					["actorname_friend_color"] = {
						0.71, -- [1]
						1, -- [2]
						1, -- [3]
						1, -- [4]
					},
					["quest_color_neutral"] = {
						1, -- [1]
						0.65, -- [2]
						0, -- [3]
						1, -- [4]
					},
					["actorname_text_size"] = 14,
					["big_actorname_text_font"] = "FORCED SQUARE",
					["big_actorname_text_size"] = 10,
					["actorname_text_anchor"] = {
						["side"] = 8,
					},
					["spellpercent_text_enabled"] = false,
					["big_actortitle_text_size"] = 10,
					["percent_text_font"] = "FORCED SQUARE",
					["buff_frame_y_offset"] = -15,
					["actorname_guild_color"] = {
						0.498039, -- [1]
						1, -- [2]
						0.2, -- [3]
						1, -- [4]
					},
					["percent_text_outline"] = "NONE",
					["quest_enabled"] = true,
					["quest_color_enabled"] = true,
					["health_incombat"] = {
						nil, -- [1]
						14, -- [2]
					},
					["health"] = {
						120, -- [1]
						14, -- [2]
					},
					["percent_text_color"] = {
						1, -- [1]
						1, -- [2]
						1, -- [3]
					},
					["level_text_alpha"] = 1,
					["percent_text_size"] = 16,
				},
				["global_health_height"] = 14,
			},
			["aura_y_offset"] = 14,
			["use_ui_parent"] = true,
			["bossmod_aura_width"] = 8,
			["aura_width_personal"] = 18,
			["aura_show_tooltip"] = true,
			["resources_settings"] = {
				["global_settings"] = {
					["anchor"] = {
						["y"] = 45,
						["side"] = 4,
					},
					["show_depleted"] = false,
				},
				["chr"] = {
					["Player-3682-05CA08F0"] = "ComboPoints",
					["Player-4476-05973846"] = "ComboPoints",
					["Player-1598-0F980236"] = "ComboPoints",
					["Player-1598-0F980228"] = "SoulShards",
					["Player-1598-0F9555DB"] = "ArcaneCharges",
				},
			},
			["spell_animation_list"] = {
				[27285] = {
					["1"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.1,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["duration"] = 0.075,
						["scale_downY"] = 0.9,
						["scale_downX"] = 0.9,
						["scale_upY"] = 1.1,
					},
				},
				[188443] = {
					["1"] = {
						["scaleY"] = 0.6,
						["fade_out"] = 0.01,
						["absolute_sineX"] = false,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.2,
						["enabled"] = true,
						["amplitude"] = 0.45,
						["fade_in"] = 0.01,
						["duration"] = 0.2,
						["cooldown"] = 0,
						["frequency"] = 200,
					},
				},
				[46968] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.01,
						["absolute_sineX"] = false,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["enabled"] = true,
						["amplitude"] = 0.95,
						["fade_in"] = 0.01,
						["duration"] = 0.1,
						["cooldown"] = 0.1,
						["frequency"] = 120,
					},
				},
				[275779] = {
					["1"] = {
						["scaleY"] = -1,
						["fade_out"] = 0.02,
						["absolute_sineX"] = false,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["enabled"] = true,
						["amplitude"] = 1,
						["fade_in"] = 0.01,
						["duration"] = 0.12,
						["cooldown"] = 0.5,
						["frequency"] = 25,
					},
				},
				[11366] = {
					["1"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.15,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["duration"] = 0.05,
						["scale_downY"] = 0.8,
						["scale_downX"] = 0.8,
						["scale_upY"] = 1.15,
					},
					["2"] = {
						["enabled"] = true,
						["fade_out"] = 0.09,
						["absolute_sineX"] = false,
						["scaleY"] = 1,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["amplitude"] = 10,
						["critical_scale"] = 1,
						["fade_in"] = 0.01,
						["duration"] = 0.1,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
				},
				[228354] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.02,
						["absolute_sineX"] = false,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["enabled"] = true,
						["amplitude"] = 1,
						["fade_in"] = 0.01,
						["duration"] = 0.12,
						["cooldown"] = 0.5,
						["frequency"] = 25,
					},
				},
				[32645] = {
					["1"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.1000000238419,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["duration"] = 0.04,
						["scale_downY"] = 0.89999997615814,
						["scale_downX"] = 0.89999997615814,
						["scale_upY"] = 1.1999999284744,
					},
					["2"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.1799999922514,
						["absolute_sineX"] = false,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 1,
						["enabled"] = true,
						["amplitude"] = 4.0999999046326,
						["fade_in"] = 0.0099999997764826,
						["duration"] = 0.12000000476837,
						["cooldown"] = 0.5,
						["frequency"] = 2.6099998950958,
					},
				},
				[189112] = {
					["1"] = {
						["enabled"] = true,
						["fade_out"] = 0.34999999403954,
						["absolute_sineX"] = true,
						["scaleY"] = 1,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0,
						["amplitude"] = 1.8799999952316,
						["critical_scale"] = 1.05,
						["fade_in"] = 0,
						["duration"] = 0.40000000596046,
						["cooldown"] = 0.5,
						["frequency"] = 51.979999542236,
					},
				},
				[187874] = {
					["1"] = {
						["scaleY"] = 0.6,
						["fade_out"] = 0.01,
						["absolute_sineX"] = false,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.2,
						["enabled"] = true,
						["amplitude"] = 0.85,
						["fade_in"] = 0.01,
						["duration"] = 0.2,
						["cooldown"] = 0,
						["frequency"] = 100,
					},
				},
				[185763] = {
					["1"] = {
						["enabled"] = true,
						["fade_out"] = 0.25999999046326,
						["absolute_sineX"] = false,
						["scaleY"] = 1,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.099998474121094,
						["amplitude"] = 3.6583230495453,
						["critical_scale"] = 1.05,
						["fade_in"] = 0.0099999997764826,
						["duration"] = 0.15999999642372,
						["cooldown"] = 0.5,
						["frequency"] = 23.525663375854,
					},
					["2"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.0299999713898,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["duration"] = 0.05,
						["scale_downY"] = 0.96999996900559,
						["scale_downX"] = 0.96999996900559,
						["scale_upY"] = 1.0299999713898,
					},
				},
				[31661] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.01,
						["absolute_sineX"] = false,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.2,
						["enabled"] = true,
						["amplitude"] = 0.75,
						["fade_in"] = 0.01,
						["duration"] = 0.1,
						["cooldown"] = 0,
						["frequency"] = 200,
					},
				},
				[203782] = {
					["1"] = {
						["enabled"] = true,
						["fade_out"] = 0.089999996125698,
						["absolute_sineX"] = true,
						["scaleY"] = -1,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0,
						["amplitude"] = 1.5,
						["critical_scale"] = 1.05,
						["fade_in"] = 0.0099999997764826,
						["duration"] = 0.099999994039536,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
				},
				[100784] = {
					["1"] = {
						["enabled"] = true,
						["fade_out"] = 0.09,
						["absolute_sineX"] = false,
						["scaleY"] = 1,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 1,
						["amplitude"] = 3,
						["critical_scale"] = 1.05,
						["fade_in"] = 0.01,
						["duration"] = 0.099999994039536,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
				},
				[31935] = {
					["1"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.03,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["duration"] = 0.05,
						["scale_downY"] = 0.97,
						["scale_downX"] = 0.97,
						["scale_upY"] = 1.03,
					},
					["2"] = {
						["enabled"] = true,
						["fade_out"] = 0.09,
						["absolute_sineX"] = true,
						["scaleY"] = 1,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 1,
						["amplitude"] = 6,
						["critical_scale"] = 1,
						["fade_in"] = 0.01,
						["duration"] = 0.1,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
				},
				[53351] = {
					["1"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.0199999809265,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["duration"] = 0.050000000745058,
						["scale_downY"] = 1,
						["scale_downX"] = 0.97999995946884,
						["scale_upY"] = 1,
					},
					["2"] = {
						["scaleY"] = -1,
						["fade_out"] = 0.1799999922514,
						["absolute_sineX"] = false,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0,
						["enabled"] = true,
						["amplitude"] = 5.6999998092651,
						["fade_in"] = 0.0099999997764826,
						["duration"] = 0.050000000745058,
						["cooldown"] = 0.5,
						["frequency"] = 3.0999999046326,
					},
				},
				[257045] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.01,
						["absolute_sineX"] = false,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.2,
						["enabled"] = true,
						["amplitude"] = 0.75,
						["fade_in"] = 0.01,
						["duration"] = 0.1,
						["cooldown"] = 0,
						["frequency"] = 200,
					},
				},
				[107270] = {
					["1"] = {
						["enabled"] = true,
						["fade_out"] = 0.089999996125698,
						["absolute_sineX"] = false,
						["scaleY"] = 1,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.099998474121094,
						["amplitude"] = 0.1499999910593,
						["critical_scale"] = 1.05,
						["fade_in"] = 0.0099999997764826,
						["duration"] = 0.1499999910593,
						["cooldown"] = 0.5,
						["frequency"] = 200,
					},
				},
				[17364] = {
					["1"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.02,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["duration"] = 0.10000000745058,
						["scale_downY"] = 0.97,
						["scale_downX"] = 0.97,
						["scale_upY"] = 1.02,
					},
					["2"] = {
						["scaleY"] = -1,
						["fade_out"] = 0.11,
						["absolute_sineX"] = false,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0,
						["enabled"] = true,
						["amplitude"] = 2.5,
						["fade_in"] = 0,
						["duration"] = 0.1,
						["cooldown"] = 0.5,
						["frequency"] = 3.0999999046326,
					},
				},
				[49998] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.019999999552965,
						["absolute_sineX"] = false,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.099998474121094,
						["enabled"] = true,
						["amplitude"] = 1.0330086946487,
						["fade_in"] = 0.01,
						["duration"] = 0.050000000745058,
						["cooldown"] = 0.5,
						["frequency"] = 25,
					},
				},
				[7268] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.01,
						["absolute_sineX"] = false,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.2,
						["enabled"] = true,
						["amplitude"] = 0.75,
						["fade_in"] = 0.01,
						["duration"] = 0.1,
						["cooldown"] = 0,
						["frequency"] = 200,
					},
				},
				[206930] = {
					["1"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.0199999809265,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["duration"] = 0.050000000745058,
						["scale_downY"] = 1,
						["scale_downX"] = 0.97999995946884,
						["scale_upY"] = 1,
					},
					["2"] = {
						["scaleY"] = -1,
						["fade_out"] = 0.1799999922514,
						["absolute_sineX"] = false,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0,
						["enabled"] = true,
						["amplitude"] = 5.6999998092651,
						["fade_in"] = 0.0099999997764826,
						["duration"] = 0.050000000745058,
						["cooldown"] = 0.5,
						["frequency"] = 3.0999999046326,
					},
				},
				[196278] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.01,
						["absolute_sineX"] = false,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.2,
						["enabled"] = true,
						["amplitude"] = 0.75,
						["fade_in"] = 0.01,
						["duration"] = 0.05,
						["cooldown"] = 0,
						["frequency"] = 200,
					},
				},
				[162243] = {
					["1"] = {
						["enabled"] = true,
						["fade_out"] = 0.089999996125698,
						["absolute_sineX"] = false,
						["scaleY"] = 1,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.099998474121094,
						["amplitude"] = 1,
						["critical_scale"] = 1.05,
						["fade_in"] = 0.0099999997764826,
						["duration"] = 0.099999994039535,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
				},
				[196819] = {
					["1"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.1999999284744,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["duration"] = 0.04,
						["scale_downY"] = 0.89999997615814,
						["scale_downX"] = 0.89999997615814,
						["scale_upY"] = 1.2999999523163,
					},
					["2"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.1799999922514,
						["absolute_sineX"] = false,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 1,
						["enabled"] = true,
						["amplitude"] = 5,
						["fade_in"] = 0.0099999997764826,
						["duration"] = 0.21999999880791,
						["cooldown"] = 0.5,
						["frequency"] = 3.3099999427795,
					},
				},
				[264178] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.08,
						["absolute_sineX"] = false,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.2,
						["enabled"] = true,
						["amplitude"] = 2.5,
						["fade_in"] = 0.01,
						["duration"] = 0.12,
						["cooldown"] = 0.25,
						["frequency"] = 20,
					},
				},
				[199804] = {
					["1"] = {
						["enabled"] = true,
						["fade_out"] = 0.09,
						["absolute_sineX"] = false,
						["scaleY"] = 0.88999938964844,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 1,
						["amplitude"] = 1.1699999570847,
						["critical_scale"] = 1.05,
						["fade_in"] = 0.0099999997764826,
						["duration"] = 0.19999998807907,
						["cooldown"] = 0.5,
						["frequency"] = 23.525676727295,
					},
					["2"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.0499999523163,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["duration"] = 0.050000000745058,
						["scale_downY"] = 1,
						["scale_downX"] = 1,
						["scale_upY"] = 1.0499999523163,
					},
				},
				[187708] = {
					["1"] = {
						["scaleY"] = 0.6,
						["fade_out"] = 0.01,
						["absolute_sineX"] = false,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.2,
						["enabled"] = true,
						["amplitude"] = 0.45,
						["fade_in"] = 0.01,
						["duration"] = 0.2,
						["cooldown"] = 0,
						["frequency"] = 200,
					},
				},
				[185438] = {
					["1"] = {
						["enabled"] = true,
						["fade_out"] = 0.19999998807907,
						["absolute_sineX"] = false,
						["scaleY"] = -1,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.099998474121094,
						["amplitude"] = 6.460000038147,
						["critical_scale"] = 1.05,
						["fade_in"] = 0,
						["duration"] = 0.099999994039536,
						["cooldown"] = 0.5,
						["frequency"] = 25,
					},
					["2"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.0299999713898,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["duration"] = 0.05,
						["scale_downY"] = 0.96999996900559,
						["scale_downX"] = 0.96999996900559,
						["scale_upY"] = 1.0299999713898,
					},
				},
				[86040] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.1,
						["absolute_sineX"] = false,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["enabled"] = true,
						["amplitude"] = 2,
						["fade_in"] = 0.05,
						["duration"] = 0.15,
						["cooldown"] = 0.25,
						["frequency"] = 20,
					},
				},
				[52174] = {
					["1"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.15,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["duration"] = 0.075,
						["scale_downY"] = 0.8,
						["scale_downX"] = 0.8,
						["scale_upY"] = 1.15,
					},
					["2"] = {
						["enabled"] = true,
						["fade_out"] = 0.2,
						["absolute_sineX"] = false,
						["scaleY"] = 1,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.15,
						["amplitude"] = 6,
						["critical_scale"] = 1,
						["fade_in"] = 0.01,
						["duration"] = 0.3,
						["cooldown"] = 0.5,
						["frequency"] = 50,
					},
				},
				[2643] = {
					["1"] = {
						["scaleY"] = 0.6,
						["fade_out"] = 0.01,
						["absolute_sineX"] = false,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.2,
						["enabled"] = true,
						["amplitude"] = 0.45,
						["fade_in"] = 0.01,
						["duration"] = 0.2,
						["cooldown"] = 0,
						["frequency"] = 200,
					},
				},
				[324540] = {
					["1"] = {
						["enabled"] = true,
						["fade_out"] = 0.089999996125698,
						["absolute_sineX"] = false,
						["scaleY"] = 2,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.099998474121094,
						["amplitude"] = 0.89999997615814,
						["critical_scale"] = 1.05,
						["fade_in"] = 0.0099999997764826,
						["duration"] = 0.1499999910593,
						["cooldown"] = 0.5,
						["frequency"] = 25.650197982788,
					},
					["2"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.0299999713898,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["duration"] = 0.05,
						["scale_downY"] = 0.96999996900558,
						["scale_downX"] = 0.96999996900558,
						["scale_upY"] = 1.0299999713898,
					},
				},
				[53595] = {
					["1"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.03,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["duration"] = 0.05,
						["scale_downY"] = 0.97,
						["scale_downX"] = 0.97,
						["scale_upY"] = 1.03,
					},
					["2"] = {
						["enabled"] = true,
						["fade_out"] = 0.09,
						["absolute_sineX"] = false,
						["scaleY"] = 1,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["amplitude"] = 3,
						["critical_scale"] = 1,
						["fade_in"] = 0.01,
						["duration"] = 0.1,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
				},
				[108853] = {
					["1"] = {
						["scaleY"] = 1,
						["fade_out"] = 0.02,
						["absolute_sineX"] = false,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.1,
						["enabled"] = true,
						["amplitude"] = 1,
						["fade_in"] = 0.01,
						["duration"] = 0.12,
						["cooldown"] = 0.5,
						["frequency"] = 25,
					},
				},
				[204157] = {
					["1"] = {
						["enabled"] = true,
						["fade_out"] = 0.089999996125698,
						["absolute_sineX"] = false,
						["scaleY"] = 1,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 1,
						["amplitude"] = 6,
						["critical_scale"] = 1.05,
						["fade_in"] = 0.0099999997764826,
						["duration"] = 0.1,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
					["2"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.03,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["duration"] = 0.05,
						["scale_downY"] = 0.97,
						["scale_downX"] = 0.97,
						["scale_upY"] = 1.03,
					},
				},
				[228478] = {
					["1"] = {
						["enabled"] = true,
						["fade_out"] = 0.099999994039536,
						["absolute_sineX"] = true,
						["scaleY"] = 0.79999923706055,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.20000076293945,
						["amplitude"] = 2.5,
						["critical_scale"] = 1.05,
						["fade_in"] = 0,
						["duration"] = 0.099999994039535,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
					["2"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.0299999713898,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["duration"] = 0.05,
						["scale_downY"] = 0.96999996900559,
						["scale_downX"] = 0.96999996900559,
						["scale_upY"] = 1.0299999713898,
					},
				},
				[148135] = {
					["1"] = {
						["enabled"] = true,
						["fade_out"] = 0.09,
						["absolute_sineX"] = false,
						["scaleY"] = 1,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 1,
						["amplitude"] = 1.75,
						["critical_scale"] = 1.05,
						["fade_in"] = 0.01,
						["duration"] = 0.099999994039536,
						["cooldown"] = 0.5,
						["frequency"] = 60.874122619629,
					},
				},
				[199547] = {
					["1"] = {
						["enabled"] = true,
						["fade_out"] = 0.089999996125698,
						["absolute_sineX"] = false,
						["scaleY"] = 1,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.59999847412109,
						["amplitude"] = 3,
						["critical_scale"] = 1.05,
						["fade_in"] = 0.0099999997764826,
						["duration"] = 0.1,
						["cooldown"] = 0.5,
						["frequency"] = 1,
					},
					["2"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.039999961853,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["duration"] = 0.05,
						["scale_downY"] = 0.96999996900558,
						["scale_downX"] = 0.96999996900558,
						["scale_upY"] = 1.039999961853,
					},
				},
				[117418] = {
					["1"] = {
						["enabled"] = true,
						["fade_out"] = 0.1499999910593,
						["absolute_sineX"] = false,
						["scaleY"] = 1,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.099998474121094,
						["amplitude"] = 0.1499999910593,
						["critical_scale"] = 1.05,
						["fade_in"] = 0.0099999997764826,
						["duration"] = 0.1799999922514,
						["cooldown"] = 0.5,
						["frequency"] = 116.00999450684,
					},
				},
				[222024] = {
					["1"] = {
						["enabled"] = true,
						["scale_upX"] = 1,
						["duration"] = 0.050000000745058,
						["scale_downX"] = 1,
						["animation_type"] = "scale",
						["critical_scale"] = 1,
						["scale_downY"] = 0.89999997615814,
						["cooldown"] = 0.75,
						["scale_upY"] = 1.1000000238419,
					},
					["2"] = {
						["enabled"] = true,
						["fade_out"] = 0.019999999552965,
						["absolute_sineX"] = true,
						["scaleY"] = 1,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0,
						["amplitude"] = 1.7999999523163,
						["critical_scale"] = 1,
						["fade_in"] = 0.0099999997764826,
						["duration"] = 0.050000000745058,
						["cooldown"] = 0.5,
						["frequency"] = 11.14999961853,
					},
				},
				[155166] = {
					["1"] = {
						["scaleY"] = 0.6,
						["fade_out"] = 0.01,
						["absolute_sineX"] = false,
						["absolute_sineY"] = false,
						["animation_type"] = "frameshake",
						["scaleX"] = 0.2,
						["enabled"] = true,
						["amplitude"] = 0.45,
						["fade_in"] = 0.01,
						["duration"] = 0.2,
						["cooldown"] = 0,
						["frequency"] = 200,
					},
				},
				[8042] = {
					["1"] = {
						["animation_type"] = "scale",
						["scale_upX"] = 1.05,
						["enabled"] = true,
						["cooldown"] = 0.75,
						["duration"] = 0.060000000745058,
						["scale_downY"] = 0.95,
						["scale_downX"] = 0.95,
						["scale_upY"] = 1.05,
					},
					["2"] = {
						["scaleY"] = -1,
						["fade_out"] = 0.05,
						["absolute_sineX"] = false,
						["absolute_sineY"] = true,
						["animation_type"] = "frameshake",
						["scaleX"] = 0,
						["enabled"] = true,
						["amplitude"] = 7.5,
						["fade_in"] = 0.0099999997764826,
						["duration"] = 0.06,
						["cooldown"] = 0.5,
						["frequency"] = 3.0999999046326,
					},
				},
			},
			["indicator_scale"] = 0.9999999403953552,
			["focus_color"] = {
				0.12156863510609, -- [1]
				0.258823543787, -- [2]
				1, -- [3]
				0.50196081399918, -- [4]
			},
			["hook_data"] = {
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1725334269,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
					["Enabled"] = false,
					["Revision"] = 51,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "Nameplate Updated",
					["Name"] = "Color Automation [Plater]",
				}, -- [1]
				{
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
						["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
					},
					["Time"] = 1597097268,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
					["Enabled"] = false,
					["Revision"] = 348,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Icon Settings:",
							["Name"] = "Icon Settings",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "showIcon",
							["Value"] = true,
							["Name"] = "Show Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show the castbar icon when enabled",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "iconOnLeftSide",
							["Value"] = true,
							["Name"] = "Icon on Left Side",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useFullSize",
							["Value"] = false,
							["Name"] = "Use Big Icon",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Fine tune the icon size",
							["Min"] = 0,
							["Key"] = "iconSizeOffset",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Icon Size Offset",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 5,
							["Desc"] = "Space between the icon and the cast bar",
							["Min"] = -5,
							["Key"] = "iconPadding",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Icon Padding",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 5,
							["Key"] = "option5",
							["Value"] = "Can't Interrupt Texture:",
							["Name"] = "Interrupt Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "showTexture",
							["Value"] = true,
							["Name"] = "Show Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
						}, -- [9]
						{
							["Type"] = 3,
							["Key"] = "iconTexturePath",
							["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
							["Name"] = "Texture Path",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Insert the path for the texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Key"] = "desaturatedTexture",
							["Value"] = true,
							["Name"] = "Texture Desaturated",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enbaled, texture is shown in black & white",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "textureColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.30567157268524, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Select the color of the texture",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture width",
							["Min"] = 1,
							["Key"] = "textureWidth",
							["Value"] = 10,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Width",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 16,
							["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
							["Min"] = -16,
							["Key"] = "textureHeightMod",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Height Mod",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Adjust the texture position",
							["Min"] = -32,
							["Key"] = "texturePosition",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Position",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust the texture transparency",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [16]
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Name"] = "Cast Bar Icon Settings [P]",
				}, -- [2]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1725334335,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 1990989,
					["Enabled"] = false,
					["Revision"] = 78,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "Leave Combat",
					["Name"] = "Hide Neutral Units [Plater]",
				}, -- [3]
				{
					["Enabled"] = false,
					["Revision"] = 84,
					["semver"] = "",
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["Author"] = "Ahwa-Azralon",
					["HooksTemp"] = {
					},
					["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
					},
					["Time"] = 1547406548,
					["PlaterCore"] = 1,
					["version"] = -1,
					["url"] = "",
					["Icon"] = 135358,
					["Name"] = "Execute Range [Plater]",
				}, -- [4]
				{
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
					},
					["Time"] = 1596791840,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 574574,
					["Enabled"] = false,
					["Revision"] = 93,
					["Options"] = {
					},
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Name"] = "Reorder Nameplate [Plater]",
				}, -- [5]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
					},
					["Time"] = 1725334319,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 136207,
					["Enabled"] = false,
					["Revision"] = 60,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "Nameplate Updated",
					["Name"] = "Don't Have Aura [Plater]",
				}, -- [6]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
					},
					["Time"] = 1725334379,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
					["Enabled"] = false,
					["Revision"] = 364,
					["semver"] = "",
					["Author"] = "Kastfall-Azralon",
					["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "color",
							["Value"] = {
								0.50196078431373, -- [1]
								0.50196078431373, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 4,
							["Key"] = "changeBarColor",
							["Value"] = true,
							["Name"] = "Change Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "changeBorderColor",
							["Value"] = false,
							["Name"] = "Change Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "resetColors",
							["Value"] = true,
							["Name"] = "Reset Colors",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
					},
					["LastHookEdited"] = "",
					["Name"] = "Attacking Specific Unit [Plater]",
				}, -- [7]
				{
					["Enabled"] = false,
					["Revision"] = 176,
					["semver"] = "",
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["Author"] = "Tecno-Azralon",
					["HooksTemp"] = {
					},
					["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
					},
					["Time"] = 1547409079,
					["PlaterCore"] = 1,
					["version"] = -1,
					["url"] = "",
					["Icon"] = 133689,
					["Name"] = "Extra Border [Plater]",
				}, -- [8]
				{
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
						["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
						["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
						["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
					},
					["Time"] = 1621935143,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
							["Enabled"] = true,
							["DRUID"] = true,
							["ROGUE"] = true,
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
							["103"] = true,
							["Enabled"] = true,
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 135426,
					["Enabled"] = false,
					["Revision"] = 284,
					["Options"] = {
					},
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Name"] = "Combo Points [Plater]",
				}, -- [9]
				{
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					},
					["Time"] = 1608663128,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
					["Enabled"] = false,
					["Revision"] = 356,
					["Options"] = {
					},
					["Author"] = "Ditador-Azralon",
					["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["LastHookEdited"] = "",
					["Name"] = "Aura Reorder [Plater]",
				}, -- [10]
				{
					["Enabled"] = false,
					["Revision"] = 182,
					["semver"] = "",
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["Author"] = "Izimode-Azralon",
					["HooksTemp"] = {
					},
					["Desc"] = "Show how many raid members are targeting the unit",
					["Hooks"] = {
						["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
						["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
						["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
						["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
					},
					["Time"] = 1548278227,
					["PlaterCore"] = 1,
					["version"] = -1,
					["url"] = "",
					["Icon"] = 1966587,
					["Name"] = "Players Targeting a Target [Plater]",
				}, -- [11]
				{
					["OptionsValues"] = {
					},
					["HooksTemp"] = {
					},
					["Hooks"] = {
						["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
						["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
						["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
					},
					["Time"] = 1725334300,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["spec"] = {
						},
						["race"] = {
						},
						["encounter_ids"] = {
						},
						["affix"] = {
						},
					},
					["url"] = "",
					["Icon"] = 878211,
					["Enabled"] = false,
					["Revision"] = 94,
					["semver"] = "",
					["Author"] = "Izimode-Azralon",
					["Desc"] = "Changes the target color to the color set in the constructor script.",
					["Prio"] = 99,
					["version"] = -1,
					["PlaterCore"] = 1,
					["Options"] = {
					},
					["LastHookEdited"] = "Target Changed",
					["Name"] = "Current Target Color [Plater]",
				}, -- [12]
			},
			["aura_width"] = 16,
			["bossmod_support_enabled"] = false,
			["ghost_auras"] = {
				["auras"] = {
					["PRIEST"] = {
						[3] = {
							[589] = true,
							[34914] = true,
						},
					},
					["WARLOCK"] = {
						{
							[980] = true,
							[172] = true,
						}, -- [1]
					},
				},
			},
			["extra_icon_height"] = 8,
			["quick_hide"] = true,
			["bossmod_bw_castrename_enabled"] = false,
			["target_highlight_color"] = {
				0.8117647767067, -- [1]
				0.54117649793625, -- [2]
				0.24705883860588, -- [3]
			},
			["resources"] = {
				["y_offset"] = 20,
				["y_offset_target"] = 20,
				["y_offset_target_withauras"] = 0,
			},
			["aura2_grow_direction"] = 1,
			["range_check_in_range_or_target_alpha_friendlies"] = 1,
			["focus_texture"] = "Blizzard",
			["cast_statusbar_spark_alpha"] = 0,
			["not_affecting_combat_enabled"] = true,
			["aura_x_offset"] = 0,
			["range_check_alpha_friendlies"] = 0.5,
			["health_selection_overlay_color"] = {
				nil, -- [1]
				0, -- [2]
				0.16078431904316, -- [3]
			},
			["ui_parent_scale_tune"] = 1.111111140545504,
			["widget_bar_scale"] = 0.74525874853134,
			["indicator_raidmark_anchor"] = {
				["x"] = 0,
			},
			["tank"] = {
				["colors"] = {
					["aggro"] = {
						1, -- [1]
						0, -- [2]
						0.078431375324726, -- [3]
					},
					["noaggro"] = {
						0.94509810209274, -- [1]
						1, -- [2]
						0.96862751245499, -- [3]
					},
					["nocombat"] = {
						0.40392160415649, -- [1]
						0.0039215688593686, -- [2]
					},
				},
			},
			["aura_tracker"] = {
				["buff_banned"] = {
					["206150"] = true,
					["333553"] = true,
					["61574"] = true,
					["61573"] = true,
				},
				["buff_tracked"] = {
					["209859"] = true,
				},
			},
			["extra_icon_caster_font"] = "Fira Sans Black",
			["aura_show_buffs_personal"] = true,
			["tocversion"] = 110002,
			["extra_icon_timer_font"] = "Fira Sans Black",
			["not_affecting_combat_alpha"] = 1,
			["target_highlight_alpha"] = 1,
			["aura_height_personal"] = 18,
			["bossmod_icons_anchor"] = {
				["side"] = 4,
			},
			["target_highlight_height"] = 16,
			["version"] = 1,
			["script_data"] = {
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage(unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    self.BigSparkle = self.BigSparkle or Plater:CreateImage(self.FrameOverlay)\n    self.BigSparkle.texture = [[Interface\\AddOns\\Plater\\images\\cast_bar_vertical_spark.png]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    self.BigSparkle:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    self.BigSparkle:ClearAllPoints()\n    self.BigSparkle:SetPoint (\"topleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 0)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\nend\n\n\n\n\n",
					["Time"] = 1719711112,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_important_bycolor.png",
					["Enabled"] = true,
					["Revision"] = 831,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation changing the cast bar color.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "To get a list of color names, use: /plater colors",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Health Bar Height Mod",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = false,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254902, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above Use Cast Bar Color",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								1, -- [1]
								0.431372, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast Bar Color",
						}, -- [10]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.6156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 6,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [15]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
							},
							["Name"] = "Color List by SpellId",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
						}, -- [16]
					},
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    self.BigSparkle:Show()\n    self.BigSparkle:SetWidth(8)\n    self.BigSparkle:SetHeight(self:GetHeight() + unitFrame.healthBar:GetHeight())\n    self.BigSparkle:SetScale(1)\n    self.BigSparkle:SetVertexColor(1,1, 1, 1)\n    envTable.overlaySpark:Hide()\n    \n    self.Spark:Hide()\n    \n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.dotAnimation:SetPoint(\"bottomright\", self, \"bottomright\", scriptTable.config.xOffset, -scriptTable.config.yOffset)\n    \n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						432967, -- [1]
						446717, -- [2]
						451379, -- [3]
						451067, -- [4]
						448013, -- [5]
						448057, -- [6]
						322486, -- [7]
						341709, -- [8]
						321226, -- [9]
						429428, -- [10]
					},
					["Desc"] = "Used on casts that make the mob explode, summon or transform if the cast passes.",
					["Name"] = "Cast - Important by Color [P]",
					["NpcNames"] = {
					},
				}, -- [1]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Time"] = 1724724069,
					["url"] = "",
					["Temp_ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Temp_OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
					["Enabled"] = true,
					["Revision"] = 633,
					["semver"] = "",
					["Temp_Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Temp_UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
					["SpellIds"] = {
						398151, -- [1]
						377738, -- [2]
						378149, -- [3]
					},
					["Prio"] = 99,
					["Name"] = "Aura - Buff Alert [Plater]",
					["PlaterCore"] = 1,
					["version"] = -1,
					["Desc"] = "Add the buff name in the trigger box.",
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = false,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.40392156862745, -- [1]
								0.003921568627451, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "dotsEnabled",
							["Value"] = true,
							["Name"] = "Dots Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.32156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["NpcNames"] = {
					},
				}, -- [2]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1671066705,
					["url"] = "",
					["Icon"] = 134229,
					["Enabled"] = false,
					["Revision"] = 37,
					["Options"] = {
					},
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						191284, -- [1]
					},
					["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
					["Name"] = "Cast - Effect After Cast [P]",
					["NpcNames"] = {
					},
				}, -- [3]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
					["Time"] = 1670201853,
					["url"] = "",
					["Icon"] = 2175503,
					["Enabled"] = false,
					["Revision"] = 533,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254902, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showArrow",
							["Value"] = true,
							["Name"] = "Show Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Key"] = "arrowWidth",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Width",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Key"] = "arrowHeight",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.6156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [13]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "Option 18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Nameplate Color",
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = false,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.1843137294054, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Health Bar Color",
						}, -- [17]
					},
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						240446, -- [1]
						385339, -- [2]
						198077, -- [3]
						210261, -- [4]
						360857, -- [5]
						389446, -- [6]
					},
					["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
					["Name"] = "Explosion Affix M+ [Plater]",
					["NpcNames"] = {
					},
				}, -- [4]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["Time"] = 1669327144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
					["Enabled"] = true,
					["Revision"] = 368,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = false,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.40392156862745, -- [1]
								0.003921568627451, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "dotsEnabled",
							["Value"] = true,
							["Name"] = "Dots Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.32156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [8]
					},
					["Author"] = "Tercioo-Sylvanas",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
					["SpellIds"] = {
					},
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Name"] = "Aura - Debuff Alert [Plater]",
					["Desc"] = "Add the debuff name in the trigger box.",
					["NpcNames"] = {
					},
				}, -- [5]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1719711125,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_shining_green.png",
					["Enabled"] = true,
					["Revision"] = 873,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a big animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Key"] = "flashDuration",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Key"] = "shakeAmplitude",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.56470588235294, -- [1]
								0.56470588235294, -- [2]
								0.56470588235294, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.41176470588235, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\n    \nend",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						434802, -- [1]
						448248, -- [2]
						453840, -- [3]
						337249, -- [4]
						324293, -- [5]
						49184, -- [6]
						449455, -- [7]
					},
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["Name"] = "Cast - Shining Green [P]",
					["NpcNames"] = {
					},
				}, -- [6]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670790652,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
					["Enabled"] = false,
					["Revision"] = 694,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a special animation showing the explosion time.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the health bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Health Bar Height Mod",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254902, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above Use Cast Bar Color",
						}, -- [8]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								1, -- [1]
								0.431372, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast Bar Color",
						}, -- [9]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [11]
						{
							["Type"] = 4,
							["Key"] = "showArrow",
							["Value"] = true,
							["Name"] = "Show Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Key"] = "arrowWidth",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Width",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Key"] = "arrowHeight",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [15]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [16]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [17]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.6156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [18]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [19]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [20]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"200682", -- [1]
									"darkslateblue", -- [2]
								}, -- [1]
								{
									"192307", -- [1]
									"goldenrod", -- [2]
								}, -- [2]
								{
									"196838", -- [1]
									"maroon", -- [2]
								}, -- [3]
								{
									"193827", -- [1]
									"darkgreen", -- [2]
								}, -- [4]
								{
									"194043", -- [1]
									"darkgreen", -- [2]
								}, -- [5]
								{
									"156718", -- [1]
									"DRUID", -- [2]
								}, -- [6]
								{
									"395859", -- [1]
									"ROGUE", -- [2]
								}, -- [7]
							},
							["Name"] = "Color List by SpellId",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
						}, -- [21]
					},
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						383823, -- [1]
						382670, -- [2]
						388537, -- [3]
						372851, -- [4]
						200682, -- [5]
						192307, -- [6]
						196838, -- [7]
						193827, -- [8]
						194043, -- [9]
						209410, -- [10]
						211464, -- [11]
						361180, -- [12]
						156718, -- [13]
						395859, -- [14]
						358320, -- [15]
						374045, -- [16]
						386757, -- [17]
						367500, -- [18]
						370225, -- [19]
						376200, -- [20]
						372107, -- [21]
						388923, -- [22]
						376934, -- [23]
						384899, -- [24]
						373960, -- [25]
						374724, -- [26]
						385551, -- [27]
						259732, -- [28]
						373424, -- [29]
						373084, -- [30]
						87618, -- [31]
						255041, -- [32]
						428926, -- [33]
						76634, -- [34]
						200050, -- [35]
						197546, -- [36]
						198079, -- [37]
						199193, -- [38]
						266181, -- [39]
						253544, -- [40]
					},
					["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
					["Name"] = "Cast - Ultra Important [P]",
					["NpcNames"] = {
					},
				}, -- [7]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [214840] = {25}, --engorged crawler\n        \n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["Time"] = 1719452142,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
					["Enabled"] = true,
					["Revision"] = 156,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "indicatorColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Vertical Line Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Indicator color.",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Indicator alpha.",
							["Min"] = 0.1,
							["Key"] = "indicatorAlpha",
							["Value"] = 0.79,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Vertical Line Alpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "fillColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Fill Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Fill color.",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Fill alpha.",
							["Min"] = 0,
							["Key"] = "fillAlpha",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Fill Alpha",
						}, -- [7]
					},
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
					["Name"] = "Add - Health Markers [P]",
					["NpcNames"] = {
						"214840", -- [1]
					},
				}, -- [8]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
					["Time"] = 1669325410,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
					["Enabled"] = true,
					["Revision"] = 662,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a small animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Key"] = "flashDuration",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [6]
					},
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						376851, -- [1]
						396044, -- [2]
						381517, -- [3]
						373932, -- [4]
						397801, -- [5]
						208165, -- [6]
						392576, -- [7]
						198750, -- [8]
						387843, -- [9]
						387411, -- [10]
						211299, -- [11]
						198595, -- [12]
						198934, -- [13]
						198962, -- [14]
						156722, -- [15]
						350554, -- [16]
						348513, -- [17]
						351779, -- [18]
						328180, -- [19]
						319898, -- [20]
						281420, -- [21]
						274383, -- [22]
						259092, -- [23]
						367521, -- [24]
						374544, -- [25]
						385039, -- [26]
						382474, -- [27]
						369823, -- [28]
						377500, -- [29]
						260879, -- [30]
						186269, -- [31]
						378818, -- [32]
						371875, -- [33]
						372225, -- [34]
						200658, -- [35]
						266036, -- [36]
						265407, -- [37]
						164965, -- [38]
						429176, -- [39]
						428526, -- [40]
						418200, -- [41]
						407124, -- [42]
						200630, -- [43]
						415437, -- [44]
						264050, -- [45]
						267824, -- [46]
					},
					["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
					["Name"] = "Cast - Small Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [9]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
					["Time"] = 1670423785,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
					["Enabled"] = true,
					["Revision"] = 572,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "change to true to change the color",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								1, -- [1]
								0, -- [2]
								0.52549019607843, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "increase the nameplate height by this value",
							["Min"] = 0,
							["Key"] = "nameplateSizeOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Nameplate Size Offset",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "dotsColor",
							["Value"] = {
								1, -- [1]
								0.71372550725937, -- [2]
								0, -- [3]
								0.56313106417656, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dot Color",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option10",
							["Value"] = "Extra Texture",
							["Name"] = "Extra Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "Extra Texture",
						}, -- [10]
						{
							["Type"] = 4,
							["Key"] = "showExtraTexture",
							["Value"] = false,
							["Name"] = "Show Extra Texture",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Extra Texture",
						}, -- [11]
						{
							["Type"] = 1,
							["Key"] = "skullColor",
							["Value"] = {
								1, -- [1]
								0.46274509803922, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Alpha",
							["Min"] = 0,
							["Key"] = "skullAlpha",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Alpha",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 2,
							["Desc"] = "Scale",
							["Min"] = 0.4,
							["Key"] = "skullScale",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Scale",
						}, -- [14]
						{
							["Type"] = 7,
							["Key"] = "npcColor",
							["Value"] = {
								{
									"196548", -- [1]
									"forestgreen", -- [2]
								}, -- [1]
								{
									"195580", -- [1]
									"forestgreen", -- [2]
								}, -- [2]
								{
									"195820", -- [1]
									"forestgreen", -- [2]
								}, -- [3]
								{
									"195821", -- [1]
									"forestgreen", -- [2]
								}, -- [4]
								{
									"189886", -- [1]
									"forestgreen", -- [2]
								}, -- [5]
								{
									"75966", -- [1]
									"forestgreen", -- [2]
								}, -- [6]
								{
									"102019 ", -- [1]
									"forestgreen", -- [2]
								}, -- [7]
								{
									"187159", -- [1]
									"forestgreen", -- [2]
								}, -- [8]
								{
									"194897", -- [1]
									"forestgreen", -- [2]
								}, -- [9]
								{
									"104251", -- [1]
									"forestgreen", -- [2]
								}, -- [10]
							},
							["Name"] = "Npc Color By NpcID",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the npcID, value is the color name",
						}, -- [15]
					},
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
					["Name"] = "Add - Important [P]",
					["NpcNames"] = {
						"196548", -- [1]
						"195580", -- [2]
						"195820", -- [3]
						"195821", -- [4]
						"189886", -- [5]
						"75966", -- [6]
						"102019", -- [7]
						"187159", -- [8]
						"194897", -- [9]
						"104251", -- [10]
						"101326", -- [11]
						"189669", -- [12]
						"192464", -- [13]
						190381, -- [14]
						92538, -- [15]
						192464, -- [16]
						131009, -- [17]
						127315, -- [18]
						133361, -- [19]
						136330, -- [20]
						214117, -- [21]
						212483, -- [22]
						101008, -- [23]
						194745, -- [24]
						190426, -- [25]
					},
				}, -- [10]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
					["Time"] = 1626382829,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
					["Enabled"] = true,
					["Revision"] = 375,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 17",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "blinkEnabled",
							["Value"] = true,
							["Name"] = "Blink Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable blink",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "glowEnabled",
							["Value"] = true,
							["Name"] = "Glow Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable glows",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "changeNameplateColor",
							["Value"] = false,
							["Name"] = "Change NamePlate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'true' to enable nameplate color change",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the blink effect only",
							["Min"] = 1,
							["Key"] = "timeleftToBlink",
							["Value"] = 3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Timeleft to Blink",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "time to complete a blink loop",
							["Min"] = 0.5,
							["Key"] = "blinkSpeed",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Speed",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
							["Min"] = 0.1,
							["Key"] = "blinkMaxAlpha",
							["Value"] = 0.6,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Max Alpha",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color of the blink",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0.28627450980392, -- [1]
								0.003921568627451, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "nameplate color if ChangeNameplateColor is true",
						}, -- [11]
						{
							["Type"] = 6,
							["Key"] = "option10",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [12]
						{
							["Type"] = 4,
							["Key"] = "timerColorEnabled",
							["Value"] = true,
							["Name"] = "Timer Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "set to 'false' to disable changes in the color of the time left text",
						}, -- [13]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Key"] = "timeLeftWarning",
							["Value"] = 8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Time Left Warning",
						}, -- [14]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "in seconds, affects the color of the text",
							["Min"] = 1,
							["Key"] = "timeLeftCritical",
							["Value"] = 3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Time Left Critical",
						}, -- [15]
						{
							["Type"] = 1,
							["Key"] = "warningColor",
							["Value"] = {
								1, -- [1]
								0.87058823529412, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Warning Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left entered in a warning zone",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "criticalColor",
							["Value"] = {
								1, -- [1]
								0.074509803921569, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Critical Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "color when the time left is critical",
						}, -- [17]
					},
					["Author"] = "Izimode-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
					["Name"] = "Aura - Blink by Time Left [Plater]",
					["NpcNames"] = {
					},
				}, -- [11]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1669340442,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/add_id_icon",
					["Enabled"] = false,
					["Revision"] = 161,
					["Options"] = {
					},
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
					["Name"] = "Add - Tag Number [P]",
					["NpcNames"] = {
						"195138", -- [1]
						"192955", -- [2]
						"190294", -- [3]
						"76518", -- [4]
					},
				}, -- [12]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    --local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    --envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
					["Time"] = 1719788204,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_special_ability.png",
					["Enabled"] = true,
					["Revision"] = 613,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 6,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								1, -- [1]
								0.5843137254902, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Changes the cast bar color to this one.",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 5,
							["Key"] = "option6",
							["Value"] = "Arrow:",
							["Name"] = "Arrow:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showArrow",
							["Value"] = true,
							["Name"] = "Show Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Arrow alpha.",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Width.",
							["Min"] = 4,
							["Key"] = "arrowWidth",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Width",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 12,
							["Desc"] = "Arrow Height.",
							["Min"] = 4,
							["Key"] = "arrowHeight",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Height",
						}, -- [8]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation:",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								0.6156862745098, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dot animation.",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 4,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [12]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dot Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [13]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "Option 18",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 5,
							["Key"] = "option17",
							["Value"] = "Nameplate Color",
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [15]
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = false,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [16]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.1843137294054, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Health Bar Color",
						}, -- [17]
					},
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						451026, -- [1]
						452127, -- [2]
						446615, -- [3]
						433766, -- [4]
						432117, -- [5]
						448560, -- [6]
						440218, -- [7]
						441289, -- [8]
						447146, -- [9]
						438860, -- [10]
						448847, -- [11]
						449687, -- [12]
						456751, -- [13]
						449939, -- [14]
						336499, -- [15]
						322550, -- [16]
						320208, -- [17]
						321894, -- [18]
						276068, -- [19]
						423200, -- [20]
					},
					["Desc"] = "For unique abilities that are an important part of the fight against a bosses or mini bosse.",
					["Name"] = "Cast - Special Ability [P]",
					["NpcNames"] = {
					},
				}, -- [13]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not self.FrameOverlay.LeapArrow1) then\n        \n        self.FrameOverlay.LeapArrow1 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow2 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        self.FrameOverlay.LeapArrow3 = self.FrameOverlay:CreateTexture(nil, \"overlay\")\n        \n        local onPlayFunc = function()\n            --self.FrameOverlay.LeapArrow1:Show()\n            --self.FrameOverlay.LeapArrow2:Show()\n            --self.FrameOverlay.LeapArrow3:Show()            \n        end\n        local onStopFunc = function()\n            self.FrameOverlay.LeapArrow1:Hide()\n            self.FrameOverlay.LeapArrow2:Hide()\n            self.FrameOverlay.LeapArrow3:Hide()\n        end\n        \n        --first arrow animation\n        local animHub1 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow1, onPlayFunc, onStopFunc)\n        animHub1.alpha1 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub1.trans1 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub1.alpha2 = DetailsFramework:CreateAnimation (animHub1, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub1.trans2 = DetailsFramework:CreateAnimation (animHub1, \"translation\", 2, 0.3, 8, 8)        \n        \n        self.FrameOverlay.LeapArrow1.animation = animHub1\n        \n        --second arrow animation\n        local animHub2 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow2, onPlayFunc, onStopFunc)\n        animHub2.alpha1 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub2.trans1 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub2.alpha2 = DetailsFramework:CreateAnimation (animHub2, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub2.trans2 = DetailsFramework:CreateAnimation (animHub2, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow2.animation = animHub2\n        \n        --third arrow animation\n        local animHub3 = DetailsFramework:CreateAnimationHub (self.FrameOverlay.LeapArrow3, onPlayFunc, onStopFunc)\n        animHub3.alpha1 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 1, 0.3, 0, 0.8)\n        animHub3.trans1 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 1, 0.3, 8, 8)\n        \n        animHub3.alpha2 = DetailsFramework:CreateAnimation (animHub3, \"alpha\", 2, 0.3, 0.8, 0)\n        animHub3.trans2 = DetailsFramework:CreateAnimation (animHub3, \"translation\", 2, 0.3, 8, 8)\n        \n        self.FrameOverlay.LeapArrow3.animation = animHub3\n        \n        self.FrameOverlay.LeapArrowTextures = {\n            self.FrameOverlay.LeapArrow1,\n            self.FrameOverlay.LeapArrow2,\n            self.FrameOverlay.LeapArrow3\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations = {\n            alpha1Anim = {},\n            alpha2Anim = {},\n            trans1Anim = {},\n            trans2Anim = {},\n        }\n        \n        self.FrameOverlay.LeapArrowAnimations.alpha1Anim = {animHub1.alpha1, animHub2.alpha1, animHub3.alpha1}\n        self.FrameOverlay.LeapArrowAnimations.alpha2Anim = {animHub1.alpha2, animHub2.alpha2, animHub3.alpha2}\n        self.FrameOverlay.LeapArrowAnimations.trans1Anim = {animHub1.trans1, animHub2.trans1, animHub3.trans1}\n        self.FrameOverlay.LeapArrowAnimations.trans2Anim = {animHub1.trans2, animHub2.trans2, animHub3.trans2}        \n        \n    end\n    \nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Hide()\n        local animation = texture.animation\n        animation:Stop()\n    end    \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1724073562,
					["url"] = "",
					["Icon"] = 236171,
					["Enabled"] = true,
					["Revision"] = 139,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Play an animation when the cast is a Heroic Leap",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "bRenameSpell",
							["Value"] = true,
							["Name"] = "Rename Spell",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Rename the name of the spell.",
						}, -- [3]
						{
							["Type"] = 3,
							["Key"] = "spellName",
							["Value"] = "Heroic Leap",
							["Name"] = "Spell Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "Name to show in the spell cast bar.",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "blank line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 4,
							["Key"] = "bUseCastbarColor",
							["Value"] = false,
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change the cast bar color to the color selected below.",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								0.3647058904171, -- [1]
								0.10588236153126, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast Bar Color",
						}, -- [7]
					},
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.bUseCastbarColor) then\n        Plater.SetCastBarColor (unitFrame, DetailsFramework:ParseColors(scriptTable.config.castbarColor))\n    end\n    \n    \n    if (scriptTable.config.bRenameSpell) then\n        self.Text:SetText(scriptTable.config.spellName) \n    end\n    \n    ---@type texture[]\n    local leapTextures = self.FrameOverlay.LeapArrowTextures\n    for i, texture in ipairs(leapTextures) do\n        texture:SetTexture([[Interface\\AddOns\\Plater\\media\\arrow_right_64.tga]])\n        texture:ClearAllPoints()\n        texture:SetSize(self:GetHeight()*1.5, self:GetHeight()*1.5)\n        texture:SetRotation(math.pi - math.pi*0.75)        \n    end\n    \n    local startX = -10\n    leapTextures[1]:SetPoint(\"left\", self, \"left\", startX, -8)\n    leapTextures[2]:SetPoint(\"center\", self, \"center\", startX, -8)\n    leapTextures[3]:SetPoint(\"right\", self, \"right\", startX, -8)\n    \n    local animations = self.FrameOverlay.LeapArrowAnimations\n    local alpha1Animations = animations.alpha1Anim\n    local alpha2Animations = animations.alpha2Anim    \n    local trans1Animations = animations.trans1Anim\n    local trans2Animations = animations.trans2Anim    \n    \n    local castTime = envTable._Duration\n    \n    --on fade in\n    local fadeInDuration =  castTime/6\n    \n    C_Timer.After(fadeInDuration, function()\n            for i, texture in ipairs(leapTextures) do\n                texture:SetRotation(-math.pi*0.25)\n                --texture:Show()\n            end            \n    end)\n    \n    for i, alphaAnim in ipairs(alpha1Animations) do\n        alphaAnim:SetDuration(fadeInDuration)\n        alphaAnim:SetFromAlpha(0.3)\n        alphaAnim:SetToAlpha(1)\n    end\n    \n    for i, transAnim in ipairs(trans1Animations) do\n        transAnim:SetDuration(fadeInDuration)\n        transAnim:SetOffset(8, 20)\n    end\n    \n    --on fade out\n    local fadeOutDuration = castTime/2\n    \n    for i, alphaAnim in ipairs(alpha2Animations) do\n        alphaAnim:SetDuration(fadeOutDuration)\n        alphaAnim:SetFromAlpha(1)\n        alphaAnim:SetToAlpha(0.3)\n    end\n    \n    for i, transAnim in ipairs(trans2Animations) do\n        transAnim:SetDuration(fadeOutDuration)\n        transAnim:SetOffset(8, -16)\n    end    \n    \n    for i, texture in ipairs(leapTextures) do\n        texture:Show()\n        local animation = texture.animation\n        animation:Play()\n    end\n    \n    \n    --DetailsFramework:DebugVisibility(self.FrameOverlay.LeapArrow1)\nend",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						447141, -- [1]
						432967, -- [2]
					},
					["Desc"] = "Modify a cast bar when the unit casts a spell with the same effect of the Warrior's Heroic Leap spell.",
					["Name"] = "Cast - Heroic Leap [P]",
					["NpcNames"] = {
					},
				}, -- [14]
				{
					["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.Spark:SetVertexColor( unpack(Plater.db.profile.cast_statusbar_spark_color) )\n    PixelUtil.SetSize( self.Spark, Plater.db.profile.cast_statusbar_spark_width, self:GetHeight() )\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1719711134,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_spark.png",
					["Enabled"] = true,
					["Revision"] = 75,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "In the box at right, add the spell id and the color.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "To get a list of colors, use: /plater colors",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "Spark Scale",
							["Min"] = 1,
							["Key"] = "sparkWithScale",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Spark Width Scale",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 3,
							["Desc"] = "Spark Scale",
							["Min"] = 1,
							["Key"] = "sparkHeightScale",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Spark Height Scale",
						}, -- [5]
						{
							["Type"] = 7,
							["Key"] = "sparkColor",
							["Value"] = {
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "",
						}, -- [6]
					},
					["Author"] = "Tennah-These Go To Eleven",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the spark color\n    local sparkColor = scriptTable.config.sparkColor[tostring(envTable._SpellID)]\n    \n    self.Spark:SetVertexColor(DetailsFramework:ParseColors(sparkColor))\n    \n    self.Spark:SetWidth( self.Spark:GetWidth() * scriptTable.config.sparkWithScale )\n    self.Spark:SetHeight( self.Spark:GetHeight() * scriptTable.config.sparkHeightScale )\n    \nend\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						453140, -- [1]
						456713, -- [2]
						450088, -- [3]
						322614, -- [4]
						323730, -- [5]
						257348, -- [6]
						272422, -- [7]
						429427, -- [8]
					},
					["Desc"] = "Change the spark color to differentiate a cast from another.",
					["Name"] = "Cast - Spark Color [P]",
					["NpcNames"] = {
					},
				}, -- [15]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1719679972,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 551,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 20,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.95686274509804, -- [1]
								1, -- [2]
								0.98823529411765, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.85882352941176, -- [1]
								0.43137254901961, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion + 5, castBar:GetHeight() + math.random(1, 5))\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        \n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2 + math.random(-2, 2))\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(1)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration + 0.5) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(1)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						432520, -- [1]
						320822, -- [2]
					},
					["Desc"] = "Healing effect that cannot be interrupted.",
					["Name"] = "Cast - Heal Stun [P]",
					["NpcNames"] = {
					},
				}, -- [16]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1670428019,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
					["Enabled"] = false,
					["Revision"] = 162,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 0.3,
							["Desc"] = "Rotation Duration",
							["Min"] = 0.1,
							["Key"] = "rotationDuration",
							["Value"] = 0.15,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Rotation Duration",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1.5,
							["Desc"] = "Animation Start Duration",
							["Min"] = 0,
							["Key"] = "animStartDuration",
							["Value"] = 0.3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Animation Start Duration",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
							["Min"] = 0,
							["Key"] = "textureStartAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Start Alpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "Texture Scale",
							["Min"] = 0.6,
							["Key"] = "textureScale",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Scale",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "textureColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [8]
					},
					["Author"] = "Butazzul-Valdrakken",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						385916, -- [1]
						386063, -- [2]
						388822, -- [3]
						373087, -- [4]
						397785, -- [5]
						106864, -- [6]
						193660, -- [7]
						198263, -- [8]
						387910, -- [9]
						370766, -- [10]
						375591, -- [11]
						384336, -- [12]
						209404, -- [13]
						209378, -- [14]
						210875, -- [15]
						396001, -- [16]
						397899, -- [17]
						386559, -- [18]
						382555, -- [19]
						258672, -- [20]
						258777, -- [21]
						257756, -- [22]
						257784, -- [23]
						256405, -- [24]
						256589, -- [25]
						393793, -- [26]
						388046, -- [27]
						375079, -- [28]
						390290, -- [29]
						369811, -- [30]
						369703, -- [31]
						226287, -- [32]
						410999, -- [33]
						372561, -- [34]
						256882, -- [35]
						172578, -- [36]
						412063, -- [37]
					},
					["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
					["Name"] = "Cast - Circle AoE [P]",
					["NpcNames"] = {
					},
				}, -- [17]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1669324381,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
					["Enabled"] = false,
					["Revision"] = 887,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								1, -- [1]
								0.43137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Key"] = "shakeAmplitude",
							["Value"] = 25,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 30,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
					},
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						392640, -- [1]
						397888, -- [2]
						209033, -- [3]
						385029, -- [4]
						374563, -- [5]
						377341, -- [6]
						369675, -- [7]
						369365, -- [8]
						369411, -- [9]
						278961, -- [10]
						202108, -- [11]
						88186, -- [12]
						255824, -- [13]
						252781, -- [14]
						250096, -- [15]
						200248, -- [16]
						197797, -- [17]
						264520, -- [18]
						418202, -- [19]
						201839, -- [20]
						412012, -- [21]
						411958, -- [22]
					},
					["Desc"] = "Play a very fast flash when the cast start",
					["Name"] = "Cast - Quick Flash [P]",
					["NpcNames"] = {
					},
				}, -- [18]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
					["Time"] = 1669339628,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
					["Enabled"] = true,
					["Revision"] = 878,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shows the target name in a separate box",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Key"] = "flashDuration",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Key"] = "shakeAmplitude",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.56470588235294, -- [1]
								0.56470588235294, -- [2]
								0.56470588235294, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.41176470588235, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
						{
							["Type"] = 6,
							["Key"] = "option27",
							["Value"] = 0,
							["Name"] = "Option 27",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [27]
						{
							["Type"] = 5,
							["Key"] = "option28",
							["Value"] = "Target Options",
							["Name"] = "Option 28",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [28]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Key"] = "targetNameSize",
							["Value"] = 14,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Size",
						}, -- [29]
						{
							["Type"] = 4,
							["Key"] = "colorByClass",
							["Value"] = true,
							["Name"] = "Use Class Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [30]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [31]
						{
							["Type"] = 1,
							["Key"] = "targetBgColor",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								0.98467203229666, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [32]
						{
							["Type"] = 1,
							["Key"] = "targetBgBorderColor",
							["Value"] = {
								0, -- [1]
								0, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Border Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [33]
						{
							["Type"] = 2,
							["Max"] = 160,
							["Desc"] = "",
							["Min"] = 30,
							["Key"] = "targetFrameWidth",
							["Value"] = 90,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Frame Width",
						}, -- [34]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "",
							["Min"] = 8,
							["Key"] = "targetFrameHeight",
							["Value"] = 20,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Frame Height",
						}, -- [35]
					},
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Highlight the target name",
					["Name"] = "Cast - Important Target [P]",
					["NpcNames"] = {
					},
				}, -- [19]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1625793282,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = true,
					["Revision"] = 1154,
					["semver"] = "",
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Cast start animation settings",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.43137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [11]
						{
							["Type"] = 7,
							["Key"] = "timerList",
							["Value"] = {
								{
									"350421", -- [1]
									"5", -- [2]
								}, -- [1]
								{
									"355787", -- [1]
									"15", -- [2]
								}, -- [2]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [3]
								{
									"348513", -- [1]
									"14", -- [2]
								}, -- [4]
							},
							["Name"] = "Timer (Key is SpellId and Value is Time)",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
						}, -- [12]
					},
					["version"] = -1,
					["PlaterCore"] = 1,
					["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
					["SpellIds"] = {
						350421, -- [1]
						355787, -- [2]
						348513, -- [3]
					},
					["Name"] = "Cast - Alert + Timer [P]",
					["NpcNames"] = {
					},
				}, -- [20]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514190,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
					["Enabled"] = false,
					["Revision"] = 547,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.95686274509804, -- [1]
								1, -- [2]
								0.98823529411765, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.85882352941176, -- [1]
								0.43137254901961, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 7,
							["Key"] = "castColor",
							["Value"] = {
								{
									"385536", -- [1]
									"maroon", -- [2]
								}, -- [1]
								{
									"198750", -- [1]
									"midnightblue", -- [2]
								}, -- [2]
								{
									"360850", -- [1]
									"lime", -- [2]
								}, -- [3]
								{
									"212784", -- [1]
									"deepskyblue", -- [2]
								}, -- [4]
								{
									"207980", -- [1]
									"midnightblue", -- [2]
								}, -- [5]
								{
									"199033", -- [1]
									"gold", -- [2]
								}, -- [6]
								{
									"199034", -- [1]
									"gold", -- [2]
								}, -- [7]
								{
									"200969", -- [1]
									"orange", -- [2]
								}, -- [8]
								{
									"394512", -- [1]
									"indigo", -- [2]
								}, -- [9]
								{
									"397881", -- [1]
									"deepskyblue", -- [2]
								}, -- [10]
								{
									"396020", -- [1]
									"khaki", -- [2]
								}, -- [11]
							},
							["Name"] = "Cast Color by SpellID",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
						}, -- [4]
					},
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						376644, -- [1]
						386781, -- [2]
						384823, -- [3]
						385536, -- [4]
						392398, -- [5]
						375596, -- [6]
						387135, -- [7]
						360850, -- [8]
						212784, -- [9]
						199033, -- [10]
						199034, -- [11]
						200969, -- [12]
						394512, -- [13]
						397881, -- [14]
						396020, -- [15]
						374430, -- [16]
						384353, -- [17]
						265376, -- [18]
						193941, -- [19]
						411002, -- [20]
						169445, -- [21]
					},
					["Desc"] = "Show a different animation for the cast bar.",
					["Name"] = "Cast - Glowing [P]",
					["NpcNames"] = {
					},
				}, -- [21]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1673994690,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
					["Enabled"] = false,
					["Revision"] = 828,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Plays a big animation when the cast start.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Flash:",
							["Name"] = "Flash",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "How long is the flash played when the cast starts.",
							["Min"] = 0.1,
							["Key"] = "flashDuration",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [6]
						{
							["Type"] = 1,
							["Key"] = "flashColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Flash Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the Flash",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Shake:",
							["Name"] = "Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 0.5,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "How strong is the shake.",
							["Min"] = 1,
							["Key"] = "shakeAmplitude",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
						{
							["Type"] = 6,
							["Key"] = "option13",
							["Value"] = 0,
							["Name"] = "Option 13",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [13]
						{
							["Type"] = 5,
							["Key"] = "option14",
							["Value"] = "Dot Animation:",
							["Name"] = "Dot Animation",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [14]
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								0.56470588235294, -- [1]
								0.56470588235294, -- [2]
								0.56470588235294, -- [3]
								1, -- [4]
							},
							["Name"] = "Dot Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Adjust the color of the dots around the nameplate",
						}, -- [15]
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot X Offset",
						}, -- [16]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 3,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dot Y Offset",
						}, -- [17]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [18]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [19]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [20]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [21]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [22]
						{
							["Type"] = 6,
							["Key"] = "option18",
							["Value"] = 0,
							["Name"] = "blank",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [23]
						{
							["Type"] = 5,
							["Key"] = "option19",
							["Value"] = "Cast Bar",
							["Name"] = "Option 19",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [24]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Use Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Use cast bar color.",
						}, -- [25]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								0.41176470588235, -- [1]
								1, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Cast bar color.",
						}, -- [26]
					},
					["Author"] = "Bombad�o-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						373046, -- [1]
						372863, -- [2]
						164686, -- [3]
						153072, -- [4]
						153680, -- [5]
						196497, -- [6]
						388886, -- [7]
						387145, -- [8]
						384365, -- [9]
						152964, -- [10]
						398150, -- [11]
						152801, -- [12]
						397878, -- [13]
						397914, -- [14]
						183263, -- [15]
						3636, -- [16]
						376171, -- [17]
						350687, -- [18]
						372735, -- [19]
						373017, -- [20]
						350687, -- [21]
						392488, -- [22]
						257732, -- [23]
						256060, -- [24]
						257899, -- [25]
						384633, -- [26]
						374339, -- [27]
						395694, -- [28]
						391634, -- [29]
						372701, -- [30]
						369328, -- [31]
						265487, -- [32]
						413044, -- [33]
						183526, -- [34]
						88194, -- [35]
						87762, -- [36]
						413385, -- [37]
						411001, -- [38]
						378282, -- [39]
						384161, -- [40]
						259572, -- [41]
						255371, -- [42]
						427460, -- [43]
						429172, -- [44]
						426500, -- [45]
						413607, -- [46]
						412922, -- [47]
						417481, -- [48]
						201399, -- [49]
						411994, -- [50]
						415770, -- [51]
						260907, -- [52]
						260703, -- [53]
						260741, -- [54]
						265876, -- [55]
						263959, -- [56]
						266225, -- [57]
						253517, -- [58]
						377488, -- [59]
					},
					["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
					["Name"] = "Cast - Very Important [Plater]",
					["NpcNames"] = {
					},
				}, -- [22]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669325411,
					["url"] = "",
					["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
					["Enabled"] = true,
					["Revision"] = 101,
					["Options"] = {
					},
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						373688, -- [1]
						391050, -- [2]
					},
					["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
					["Name"] = "Cast - Shield Interrupt [P]",
					["NpcNames"] = {
					},
				}, -- [23]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local DF = DetailsFramework\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture2:Show()\n        unitFrame.CastSwipeAnimation2:Play()\n        unitFrame.StartSwipeAnimation2:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation2:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation2:Stop()\n                unitFrame.CastSwipeTexture2:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture2) then\n            return\n        end\n        \n        local circularTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n        circularTexture:SetPoint(\"center\", 0, 0)\n        circularTexture:SetSize(64, 64)\n        circularTexture:Hide()\n        \n        unitFrame.CastSwipeTexture2 = circularTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation2 = DF:CreateAnimationHub(circularTexture)\n        unitFrame.CastSwipeAnimation2:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation2.Rotation = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"rotation\", 1, 1, 360)\n        unitFrame.CastSwipeAnimation2.Trans = DF:CreateAnimation(unitFrame.CastSwipeAnimation2, \"TRANSLATION\", 1, 1, 2, 2)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, function()circularTexture:Show() end)\n        \n        unitFrame.StartSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.StartSwipeAnimation2, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation2 = DF:CreateAnimationHub(circularTexture, nil, function()circularTexture:Hide() end)\n        \n        unitFrame.EndSwipeAnimation2.Alpha = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"alpha\", 1, 0.2, 1, 0)\n        \n        unitFrame.EndSwipeAnimation2.Scale = DF:CreateAnimation(unitFrame.EndSwipeAnimation2, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n        \n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1719757483,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2_icon.png",
					["Enabled"] = true,
					["Revision"] = 318,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 0.3,
							["Desc"] = "How much time takes for one revolution.",
							["Min"] = 0.1,
							["Key"] = "rotationDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Rotation Duration",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1.5,
							["Desc"] = "Animation Start Duration",
							["Min"] = 0,
							["Key"] = "animStartDuration",
							["Value"] = 0.05,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Animation Start Duration",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
							["Min"] = 0,
							["Key"] = "textureStartAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Start Alpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "Texture Scale",
							["Min"] = 0.6,
							["Key"] = "textureScale",
							["Value"] = 0.9,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Scale",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "textureColor",
							["Value"] = {
								0.63921570777893, -- [1]
								0.63921570777893, -- [2]
								0.63921570777893, -- [3]
								1, -- [4]
							},
							["Name"] = "Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [8]
					},
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = options.textureScale\n    \n    local circularTexture = unitFrame.CastSwipeTexture2\n    \n    --texture settings\n    circularTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\cast_bar_circular_swipe2.png]])\n    circularTexture:SetPoint(\"center\", 0, 0)\n    circularTexture:SetSize(64, 64)    \n    circularTexture:SetBlendMode(\"ADD\")\n    circularTexture:SetVertexColor(DetailsFramework:ParseColors(options.textureColor))\n    circularTexture:SetScale(targetScale)\n    circularTexture:SetAlpha(options.textureAlpha)\n    \n    --animations    \n    unitFrame.CastSwipeAnimation2.Rotation:SetDuration(options.rotationDuration)\n    unitFrame.CastSwipeAnimation2.Trans:SetDuration(options.rotationDuration)\n    \n    local randomOffset = 5\n    unitFrame.CastSwipeAnimation2.Trans:SetOffset(math.random(-randomOffset, randomOffset), math.random(-randomOffset, randomOffset))\n    \n    \n    unitFrame.StartSwipeAnimation2.Alpha:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Alpha:SetFromAlpha(options.textureStartAlpha)\n    unitFrame.StartSwipeAnimation2.Alpha:SetToAlpha(options.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation2.Scale:SetDuration(options.animStartDuration)\n    unitFrame.StartSwipeAnimation2.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation2.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation2.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)     \n    \nend\n\n\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						451102, -- [1]
						426787, -- [2]
						448888, -- [3]
						439811, -- [4]
						434796, -- [5]
						434793, -- [6]
						438879, -- [7]
						438473, -- [8]
						434252, -- [9]
						434829, -- [10]
						440468, -- [11]
						436205, -- [12]
						436246, -- [13]
						441395, -- [14]
						437533, -- [15]
						451965, -- [16]
						456902, -- [17]
						456900, -- [18]
						451996, -- [19]
						451939, -- [20]
						450077, -- [21]
						450079, -- [22]
						324909, -- [23]
						324922, -- [24]
						460092, -- [25]
						272711, -- [26]
						269266, -- [27]
						425974, -- [28]
						424879, -- [29]
						426771, -- [30]
						426786, -- [31]
						423324, -- [32]
						428879, -- [33]
					},
					["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
					["Name"] = "Cast - AoE Hit All [P]",
					["NpcNames"] = {
					},
				}, -- [24]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1676905232,
					["url"] = "",
					["Icon"] = 4038101,
					["Enabled"] = false,
					["Revision"] = 73,
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.41662168502808, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dots Color",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dots X Offset",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dots Y Offset",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust how fast the blinking occurs",
							["Min"] = 0.2,
							["Key"] = "speed",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Speed",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Min amount of transparency the blink can have",
							["Min"] = 0,
							["Key"] = "minAlpha",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Min Alpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Max amount of transparency the blink can have",
							["Min"] = 0,
							["Key"] = "maxAlpha",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Max Alpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								0.019607843831182, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the blinking texture",
						}, -- [8]
					},
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						388886, -- [1]
						209676, -- [2]
						377912, -- [3]
					},
					["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
					["Name"] = "Cast - On Going Cast [P]",
					["NpcNames"] = {
					},
				}, -- [25]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
					["OptionsValues"] = {
					},
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    for i = 1, 40 do\n        local auraInfo = C_UnitAuras.GetBuffDataByIndex(envTable._UnitID, i)\n        if (auraInfo) then\n            local spellId = auraInfo.spellId\n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        else\n            break\n        end\n    end\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
					["Time"] = 1725033998,
					["url"] = "",
					["Icon"] = 610472,
					["Enabled"] = true,
					["Revision"] = 83,
					["semver"] = "",
					["Author"] = "Keyspell-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Options"] = {
					},
					["version"] = -1,
					["PlaterCore"] = 1,
					["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
					["SpellIds"] = {
						343470, -- [1]
						423228, -- [2]
					},
					["Name"] = "Aura is Shield [P]",
					["NpcNames"] = {
					},
				}, -- [26]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.1, 0.5)\n    \n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    if (envTable._CanInterrupt) then\n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    else        \n        local newAlpha = min(0.1 + math.sin ( normalizedPercent * math.pi  ), 1)\n        textureStretched:SetAlpha(newAlpha)\n    end    \n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1719694337,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_debuff.png",
					["Enabled"] = true,
					["Revision"] = 741,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 7,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.96862751245499, -- [1]
								0.9764706492424, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.49019610881805, -- [1]
								0, -- [2]
								0.54901963472366, -- [3]
								1, -- [4]
							},
							["Name"] = "Trail Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (IsInRaid()) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    --textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:SetTexture([[Interface\\AddOns\\Plater\\images\\tail_rounded_white.png]])\n    textureStretched:SetHeight(castBar:GetHeight() + 2)\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    \n    --trail\n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    --local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    --Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						432448, -- [1]
						431309, -- [2]
						451107, -- [3]
						451119, -- [4]
						438618, -- [5]
						436322, -- [6]
						443507, -- [7]
						443436, -- [8]
						439341, -- [9]
						447261, -- [10]
						449444, -- [11]
						451224, -- [12]
						451241, -- [13]
						450095, -- [14]
						451612, -- [15]
						451395, -- [16]
						324987, -- [17]
						327393, -- [18]
						256709, -- [19]
						268230, -- [20]
						275836, -- [21]
						426308, -- [22]
						449153, -- [23]
						427461, -- [24]
					},
					["Desc"] = "Show a different animation for the cast bar.",
					["Name"] = "Cast - Debuff [P]",
					["NpcNames"] = {
					},
				}, -- [27]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    self.simpleInterruptFlash = self.simpleInterruptFlash or  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    \n    self.simpleInterruptFlash:SetBlendMode (\"ADD\")\n    self.simpleInterruptFlash:SetDrawLayer(\"OVERLAY\", 7)\n    self.simpleInterruptFlash:SetPoint (\"center\", self, \"center\")\n    self.simpleInterruptFlash:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    self.simpleInterruptFlashAnimHub = self.simpleInterruptFlashAnimHub or Plater:CreateAnimationHub (self.simpleInterruptFlash, \n        function()\n            self.simpleInterruptFlash:Show()\n        end,\n        function()\n            self.simpleInterruptFlash:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    self.simpleInterruptFlashAnimHub.fadeIn = self.simpleInterruptFlashAnimHub.fadeIn or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    self.simpleInterruptFlashAnimHub.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    self.simpleInterruptFlashAnimHub.fadeOut = self.simpleInterruptFlashAnimHub.fadeOut or Plater:CreateAnimation (self.simpleInterruptFlashAnimHub, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    self.simpleInterruptFlashAnimHub.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    self.simpleInterruptFlashAnimHub:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1719711128,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
					["Enabled"] = true,
					["Revision"] = 958,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "castBarColor",
							["Value"] = {
								1, -- [1]
								0.43137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.1,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 200,
							["Desc"] = "How strong is the shake.",
							["Min"] = 10,
							["Key"] = "shakeAmplitude",
							["Value"] = 25,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 30,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
					},
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if ( not envTable._CanInterrupt ) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    self.simpleInterruptFlash:SetHeight(self:GetHeight() * 2.5 )\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    self.simpleInterruptFlashAnimHub:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						431333, -- [1]
						442210, -- [2]
						443430, -- [3]
						443433, -- [4]
						451871, -- [5]
						76711, -- [6]
						334748, -- [7]
						334749, -- [8]
						328667, -- [9]
						338353, -- [10]
						445207, -- [11]
					},
					["Desc"] = "Play a very fast flash when the cast start.",
					["Name"] = "Cast - Simple Interrupt [P]",
					["NpcNames"] = {
					},
				}, -- [28]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
					["Time"] = 1673726734,
					["url"] = "",
					["Icon"] = 236209,
					["Enabled"] = true,
					["Revision"] = 18,
					["Options"] = {
					},
					["Author"] = "Tiranaa-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						372743, -- [1]
						372749, -- [2]
						384933, -- [3]
					},
					["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
					["Name"] = "Aura While Casting [P]",
					["NpcNames"] = {
					},
				}, -- [29]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1670203603,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
					["Enabled"] = false,
					["Revision"] = 1194,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.43137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
					},
					["Author"] = "Tercioo-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						396640, -- [1]
						372743, -- [2]
						377389, -- [3]
						396812, -- [4]
						388392, -- [5]
						387955, -- [6]
						386546, -- [7]
						377503, -- [8]
						384808, -- [9]
						386024, -- [10]
						387615, -- [11]
						387606, -- [12]
						225100, -- [13]
						211401, -- [14]
						211470, -- [15]
						215433, -- [16]
						192563, -- [17]
						198959, -- [18]
						152818, -- [19]
						156776, -- [20]
						398206, -- [21]
						153524, -- [22]
						396073, -- [23]
						396018, -- [24]
						345202, -- [25]
						377950, -- [26]
						372223, -- [27]
						350421, -- [28]
						352158, -- [29]
						349985, -- [30]
						329239, -- [31]
						328400, -- [32]
						384194, -- [33]
						392451, -- [34]
						392924, -- [35]
						397889, -- [36]
						209413, -- [37]
						207980, -- [38]
						257397, -- [39]
						257736, -- [40]
						382787, -- [41]
						374699, -- [42]
						377402, -- [43]
						369602, -- [44]
						369465, -- [45]
						369400, -- [46]
						381593, -- [47]
						265091, -- [48]
						265433, -- [49]
						382791, -- [50]
						376780, -- [51]
						225573, -- [52]
						278444, -- [53]
						164887, -- [54]
						168082, -- [55]
						76813, -- [56]
						227913, -- [57]
						265368, -- [58]
					},
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["Name"] = "Cast - Big Alert [Plater]",
					["NpcNames"] = {
					},
				}, -- [30]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    --self.Text:Hide() \nend\n\n\n",
					["Time"] = 1723155144,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_ongoing.png",
					["Enabled"] = true,
					["Revision"] = 158,
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "dotColor",
							["Value"] = {
								1, -- [1]
								1, -- [2]
								1, -- [3]
								0.41662168502808, -- [4]
							},
							["Name"] = "Dots Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Dots Color",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots X Offset",
							["Min"] = -10,
							["Key"] = "xOffset",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dots X Offset",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Dots Y Offset",
							["Min"] = -10,
							["Key"] = "yOffset",
							["Value"] = 0,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Dots Y Offset",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Adjust how fast the blinking occurs",
							["Min"] = 0.2,
							["Key"] = "speed",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Speed",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Min amount of transparency the blink can have",
							["Min"] = 0,
							["Key"] = "minAlpha",
							["Value"] = 0,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Min Alpha",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Max amount of transparency the blink can have",
							["Min"] = 0,
							["Key"] = "maxAlpha",
							["Value"] = 0.5,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Blink Max Alpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "blinkColor",
							["Value"] = {
								1, -- [1]
								0.52549022436142, -- [2]
								0.5137255191803, -- [3]
								1, -- [4]
							},
							["Name"] = "Blink Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the blinking texture",
						}, -- [8]
					},
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.9\n    \n    envTable.dotAnimation1.dotTexture:SetVertexColor(unpack(scriptTable.config.dotColor))\n    \n    \n    envTable.dotAnimation1.dotTexture:Show()\n    \n    --envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    --envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \n    \n    \nend",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						431364, -- [1]
						423327, -- [2]
					},
					["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
					["Name"] = "Cast - Ongoing Cast [P]",
					["NpcNames"] = {
					},
				}, -- [31]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["Time"] = 1611844883,
					["url"] = "",
					["Icon"] = 135945,
					["Enabled"] = true,
					["Revision"] = 186,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option12",
							["Value"] = "Time to Die",
							["Name"] = "Time to Die",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 2,
							["Max"] = 50,
							["Desc"] = "",
							["Min"] = 10,
							["Key"] = "bgWidth",
							["Value"] = 27,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Width",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "bgColor",
							["Value"] = {
								0.50588235294118, -- [1]
								0.070588235294118, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Background Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 24,
							["Desc"] = "",
							["Min"] = 7,
							["Key"] = "textSize",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Size",
						}, -- [4]
						{
							["Type"] = 1,
							["Key"] = "textColor",
							["Value"] = {
								1, -- [1]
								0.5843137254902, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Text Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 5,
							["Key"] = "option11",
							["Value"] = "Targeting",
							["Name"] = "Targeting",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 4,
							["Key"] = "switchTargetName",
							["Value"] = true,
							["Name"] = "Show Target instead of Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "useTargetingColor",
							["Value"] = true,
							["Name"] = "Change Color if targeting You",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [9]
						{
							["Type"] = 1,
							["Key"] = "targetingColor",
							["Value"] = {
								0.070588235294118, -- [1]
								0.61960784313725, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Color if targeting You",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [10]
						{
							["Type"] = 6,
							["Key"] = "option11",
							["Value"] = 0,
							["Name"] = "Option 11",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [11]
					},
					["Author"] = "Symantec-Azralon",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Time to die Spiteful affix",
					["Name"] = "M+ Spiteful",
					["NpcNames"] = {
						"174773", -- [1]
					},
				}, -- [32]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
					["Time"] = 1722866303,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_healalert.png",
					["Enabled"] = true,
					["Revision"] = 1254,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "useCastbarColor",
							["Value"] = true,
							["Name"] = "Cast Bar Color Enabled",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "When enabled, changes the cast bar color,",
						}, -- [5]
						{
							["Type"] = 1,
							["Key"] = "castbarColor",
							["Value"] = {
								1, -- [1]
								0.43137254901961, -- [2]
								0, -- [3]
								1, -- [4]
							},
							["Name"] = "Cast Bar Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the cast bar.",
						}, -- [6]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Blank Line",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [7]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
							["Min"] = 0.05,
							["Key"] = "flashDuration",
							["Value"] = 0.4,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Flash Duration",
						}, -- [8]
						{
							["Type"] = 2,
							["Max"] = 10,
							["Desc"] = "Increases the cast bar height by this value",
							["Min"] = 0,
							["Key"] = "castBarHeight",
							["Value"] = 5,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Cast Bar Height Mod",
						}, -- [9]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
							["Min"] = 0.1,
							["Key"] = "shakeDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Duration",
						}, -- [10]
						{
							["Type"] = 2,
							["Max"] = 100,
							["Desc"] = "How strong is the shake.",
							["Min"] = 2,
							["Key"] = "shakeAmplitude",
							["Value"] = 8,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [11]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 40,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [12]
					},
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						450756, -- [1]
						452162, -- [2]
						322938, -- [3]
						322939, -- [4]
						324776, -- [5]
						324914, -- [6]
						326046, -- [7]
						340544, -- [8]
						335143, -- [9]
						327130, -- [10]
						256957, -- [11]
						275826, -- [12]
						429109, -- [13]
						451097, -- [14]
					},
					["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
					["Name"] = "Cast - Heal Cut [P]",
					["NpcNames"] = {
					},
				}, -- [33]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604357453,
					["url"] = "",
					["Icon"] = 136048,
					["Enabled"] = true,
					["Revision"] = 233,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Show the power of the unit above the nameplate.",
							["Name"] = "script desc",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option3",
							["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
							["Name"] = "add trigger",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 4,
							["Key"] = "showLater",
							["Value"] = true,
							["Name"] = "Show at 80% of Energy",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 32,
							["Desc"] = "Text size.",
							["Min"] = 8,
							["Key"] = "fontSize",
							["Value"] = 16,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Text Size",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "fontColor",
							["Value"] = {
								0.80392156862745, -- [1]
								0.80392156862745, -- [2]
								0.80392156862745, -- [3]
								1, -- [4]
							},
							["Name"] = "Font Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Color of the text.",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "outline",
							["Value"] = true,
							["Name"] = "Enable Text Outline",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the text uses outline.",
						}, -- [9]
					},
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Show the energy amount above the nameplate.",
					["Name"] = "Unit - Show Energy [Plater]",
					["NpcNames"] = {
						"164406", -- [1]
						"164407", -- [2]
						"162100", -- [3]
						"162099", -- [4]
						"162329", -- [5]
						"164558", -- [6]
					},
				}, -- [34]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
					["Time"] = 1604696441,
					["url"] = "",
					["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
					["Enabled"] = false,
					["Revision"] = 63,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Auto set a raid target Skull on the unit.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option2",
							["Value"] = 0,
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "onlyInCombat",
							["Value"] = false,
							["Name"] = "Only in Combat",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Set the mark only if the unit is in combat.",
						}, -- [3]
					},
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Auto set skull marker",
					["Name"] = "Auto Set Skull",
					["NpcNames"] = {
						"163520", -- [1]
						"163618", -- [2]
						"164506", -- [3]
					},
				}, -- [35]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
					["Time"] = 1604239880,
					["url"] = "",
					["Icon"] = 1029718,
					["Enabled"] = true,
					["Revision"] = 269,
					["Options"] = {
					},
					["Author"] = "Celian-Sylvanas",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Show above the nameplate who is the player fixated",
					["Name"] = "Fixate [Plater]",
					["NpcNames"] = {
						"165560", -- [1]
					},
				}, -- [36]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
					["Time"] = 1670427838,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/duck_64",
					["Enabled"] = true,
					["Revision"] = 111,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = false,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0.062745101749897, -- [1]
								0.062745101749897, -- [2]
								0.094117656350136, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option4",
							["Value"] = 0,
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useNameplateScale",
							["Value"] = true,
							["Name"] = "Change Nameplate Scale",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Scale",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Nameplate Scale",
							["Min"] = 0,
							["Key"] = "scale",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Nameplate Scale",
						}, -- [5]
					},
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "",
					["Name"] = "Add - Non Elite Trash [P]",
					["NpcNames"] = {
						"194622", -- [1]
						"190205", -- [2]
						"197398", -- [3]
						"77006", -- [4]
					},
				}, -- [37]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
					["Time"] = 1672514185,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
					["Enabled"] = true,
					["Revision"] = 506,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 20,
							["Desc"] = "Need a /reload",
							["Min"] = 5,
							["Key"] = "segmentsAmount",
							["Value"] = 20,
							["Fraction"] = false,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Amount of Segments",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "sparkColor",
							["Value"] = {
								0.95686274509804, -- [1]
								1, -- [2]
								0.98823529411765, -- [3]
								1, -- [4]
							},
							["Name"] = "Spark Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 1,
							["Key"] = "glowColor",
							["Value"] = {
								0.85882352941176, -- [1]
								0.43137254901961, -- [2]
								1, -- [3]
								1, -- [4]
							},
							["Name"] = "Glow Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "",
						}, -- [3]
					},
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						377004, -- [1]
						381516, -- [2]
						196543, -- [3]
						199726, -- [4]
						200291, -- [5]
						268202, -- [6]
					},
					["Desc"] = "Just stop casting",
					["Name"] = "Cast - Stop Casting [P]",
					["NpcNames"] = {
					},
				}, -- [38]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604354364,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
					["Enabled"] = true,
					["Revision"] = 206,
					["Options"] = {
					},
					["Author"] = "Aelerolor-Torghast",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
					["Name"] = "Countdown",
					["NpcNames"] = {
						"164427", -- [1]
						"164414", -- [2]
						"164185", -- [3]
						"164567", -- [4]
						"165408", -- [5]
					},
				}, -- [39]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.TextureWatchStep) then\n        \n        unitFrame.TextureWatchStep = true\n        \n        local animationFrame = CreateFrame(\"frame\", nil, unitFrame)\n        \n        \n        --> single animation group\n        local bearTrapAnimation = animationFrame:CreateAnimationGroup(\"beartrapAnimationGroup\")\n        bearTrapAnimation:SetLooping(\"NONE\")\n        \n        --> widgets:\n        \n        ----------------------------------------------\n        \n        local leftTrap  = animationFrame:CreateTexture(\"$parentleftTrapTexture\", \"ARTWORK\")\n        leftTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        leftTrap:SetDrawLayer(\"ARTWORK\", 0)\n        leftTrap:SetPoint(\"center\", animationFrame, \"center\", -48, 0)\n        leftTrap:SetSize(100, 100)\n        leftTrap:SetTexCoord(1, 0.0010000000149012, 0.0010000000149012, 1)\n        \n        --> animations for leftTrap\n        \n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(1)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetStartDelay(0.39999997615814)\n        leftTrap.rotation:SetDegrees(-90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        leftTrap.rotation:SetTarget(leftTrap)\n        leftTrap.rotation:SetOrder(6)\n        leftTrap.rotation:SetDuration(0.195999994874)\n        leftTrap.rotation:SetDegrees(90)\n        leftTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        leftTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        leftTrap.alpha:SetTarget(leftTrap)\n        leftTrap.alpha:SetOrder(6)\n        leftTrap.alpha:SetDuration(0.195999994874)\n        leftTrap.alpha:SetFromAlpha(1)\n        leftTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local rightTrap  = animationFrame:CreateTexture(\"$parentrightTrapTexture\", \"ARTWORK\")\n        rightTrap:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_beartrap_2.png]])\n        rightTrap:SetDrawLayer(\"ARTWORK\", 0)\n        rightTrap:SetPoint(\"center\", animationFrame, \"center\", 0, 0)\n        rightTrap:SetSize(100, 100)\n        \n        --> animations for rightTrap\n        \n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(1)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetStartDelay(0.39999997615814)\n        rightTrap.rotation:SetDegrees(90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        rightTrap.rotation:SetTarget(rightTrap)\n        rightTrap.rotation:SetOrder(6)\n        rightTrap.rotation:SetDuration(0.195999994874)\n        rightTrap.rotation:SetDegrees(-90)\n        rightTrap.rotation:SetOrigin(\"bottom\", 0, 0)\n        rightTrap.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        rightTrap.alpha:SetTarget(rightTrap)\n        rightTrap.alpha:SetOrder(6)\n        rightTrap.alpha:SetDuration(0.195999994874)\n        rightTrap.alpha:SetFromAlpha(1)\n        rightTrap.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        local boots  = animationFrame:CreateTexture(\"$parentbootsTexture\", \"BORDER\")\n        boots:SetTexture([[Interface\\AddOns\\Plater\\images\\icon_shoes.png]])\n        boots:SetDrawLayer(\"BORDER\", 0)\n        boots:SetPoint(\"center\", animationFrame, \"center\", -88, 35)\n        boots:SetSize(50, 50)\n        \n        --> animations for boots\n        \n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(1)\n        boots.alpha:SetDuration(0.31599998474121)\n        boots.alpha:SetFromAlpha(0)\n        boots.alpha:SetToAlpha(1)\n        boots.rotation = bearTrapAnimation:CreateAnimation(\"ROTATION\")\n        boots.rotation:SetTarget(boots)\n        boots.rotation:SetOrder(1)\n        boots.rotation:SetDuration(0.2960000038147)\n        boots.rotation:SetStartDelay(0.19999998807907)\n        boots.rotation:SetDegrees(40)\n        boots.rotation:SetOrigin(\"center\", 0, 0)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(1)\n        boots.translation:SetDuration(0.59599995613098)\n        boots.translation:SetOffset(63, -33)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(2)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(3)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(4)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(3, 3)\n        boots.translation = bearTrapAnimation:CreateAnimation(\"TRANSLATION\")\n        boots.translation:SetTarget(boots)\n        boots.translation:SetOrder(5)\n        boots.translation:SetDuration(0.046000000089407)\n        boots.translation:SetOffset(-3, -3)\n        boots.alpha = bearTrapAnimation:CreateAnimation(\"ALPHA\")\n        boots.alpha:SetTarget(boots)\n        boots.alpha:SetOrder(6)\n        boots.alpha:SetDuration(0.39599999785423)\n        boots.alpha:SetFromAlpha(1)\n        boots.alpha:SetToAlpha(0)\n        \n        ----------------------------------------------\n        \n        unitFrame.BearTrapTextures = {leftTrap, rightTrap, boots}\n        unitFrame.BearTrapAnimationFrame = animationFrame\n        unitFrame.BearTrapAnimation = bearTrapAnimation\n        \n        \n        bearTrapAnimation:SetScript(\"OnPlay\", function()\n                boots:SetAlpha(0)\n                boots:Show()\n                leftTrap:Show()\n                rightTrap:Show()            \n        end)\n        \n        bearTrapAnimation:SetScript(\"OnFinished\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)       \n        \n        bearTrapAnimation:SetScript(\"OnStop\", function()\n                boots:Hide()\n                leftTrap:Hide()\n                rightTrap:Hide()\n        end)           \n        \n        \n    end\n    \nend\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimation:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1720031975,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_voidzone.png",
					["Enabled"] = true,
					["Revision"] = 220,
					["Options"] = {
						{
							["Type"] = 5,
							["Key"] = "option1",
							["Value"] = "Settings for the animation played when the cast creates small void zones in the ground.",
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [1]
					},
					["Author"] = "Terciob",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.BearTrapAnimationFrame:SetSize(1, 1)\n    unitFrame.BearTrapAnimationFrame:ClearAllPoints()\n    unitFrame.BearTrapAnimationFrame:SetPoint(\"center\", unitFrame, \"center\", 30, 63)\n    unitFrame.BearTrapAnimationFrame:SetScale(0.5)\n    \n    unitFrame.BearTrapAnimation:Play()\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						450784, -- [1]
						451423, -- [2]
						445813, -- [3]
						445838, -- [4]
						438658, -- [5]
						433845, -- [6]
						456696, -- [7]
						451391, -- [8]
						324923, -- [9]
						323138, -- [10]
						340189, -- [11]
						326021, -- [12]
						320571, -- [13]
						321780, -- [14]
						345623, -- [15]
						333479, -- [16]
						334476, -- [17]
						320772, -- [18]
						257882, -- [19]
						424903, -- [20]
						426345, -- [21]
						422233, -- [22]
						445541, -- [23]
						428703, -- [24]
						439559, -- [25]
					},
					["Desc"] = "Play an animation when the cast creates small zones in the ground that will damage if the player doesn't move.",
					["Name"] = "Cast - Voidzone [P]",
					["NpcNames"] = {
					},
				}, -- [40]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\n    unitFrame.CastSwipeTexture:Hide()\nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1719758013,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
					["Enabled"] = true,
					["Revision"] = 281,
					["Options"] = {
						{
							["Type"] = 2,
							["Max"] = 0.3,
							["Desc"] = "Rotation Duration",
							["Min"] = 0.1,
							["Key"] = "rotationDuration",
							["Value"] = 0.15,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Rotation Duration",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 2,
							["Max"] = 1.5,
							["Desc"] = "Animation Start Duration",
							["Min"] = 0,
							["Key"] = "animStartDuration",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Animation Start Duration",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
							["Min"] = 0,
							["Key"] = "textureStartAlpha",
							["Value"] = 0.3,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Start Alpha",
						}, -- [4]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Option 5",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1.2,
							["Desc"] = "Texture Scale",
							["Min"] = 0.6,
							["Key"] = "textureScale",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Scale",
						}, -- [6]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Texture Alpha",
							["Min"] = 0,
							["Key"] = "textureAlpha",
							["Value"] = 0.8,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Texture Alpha",
						}, -- [7]
						{
							["Type"] = 1,
							["Key"] = "textureColor",
							["Value"] = {
								0.74117648601532, -- [1]
								0.74117648601532, -- [2]
								0.74117648601532, -- [3]
								1, -- [4]
							},
							["Name"] = "Texture Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Texture Color",
						}, -- [8]
					},
					["Author"] = "Terciob",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    unitFrame.CastSwipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe.png]])\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetScaleFrom(1.05, 1.05)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(1, 1)    \n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						453212, -- [1]
						451098, -- [2]
						427001, -- [3]
						438622, -- [4]
						446086, -- [5]
						447271, -- [6]
						437700, -- [7]
						439646, -- [8]
						448877, -- [9]
						451387, -- [10]
						331743, -- [11]
						320637, -- [12]
						327240, -- [13]
						257170, -- [14]
						257326, -- [15]
						257169, -- [16]
						423538, -- [17]
						428508, -- [18]
						428520, -- [19]
					},
					["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
					["Name"] = "Cast - AoE With Range [P]",
					["NpcNames"] = {
					},
				}, -- [41]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --get the reference of the arrow texture\n    local movingArrowTexture = unitFrame._movingArrowTexture\n    \n    --if it doesn't exists yet, create now\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    local mAT = movingArrowTexture\n    \n    if (not mAT.movingAnimation) then\n        local onPlay = function()\n            mAT:Show() \n        end\n        \n        local onStop =  function()\n            mAT:Hide() \n        end\n        \n        mAT.movingAnimation = Plater:CreateAnimationHub( mAT, onPlay, onStop )\n        mAT.movingAnimation:SetLooping( \"REPEAT\" )\n    end\n    \n    if (not mAT.arrowAnimation) then\n        local arrowAnimation = Plater:CreateAnimation (mAT.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n        mAT.arrowAnimation = arrowAnimation\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    mAT.movingAnimation:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 2,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    local maxAlpha = scriptTable.config.arrowAlpha\n    \n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = mAT.movingAnimation:GetProgress()\n    \n    if (percent < 0.20) then\n        local value = DetailsFramework.Math.MapRangeClamped(0, 0.20, 0, maxAlpha, percent)\n        mAT:SetAlpha(value)\n        \n    elseif (percent > 0.8) then\n        local value = DetailsFramework.Math.MapRangeClamped(0.8, 1, maxAlpha, 0, percent)\n        mAT:SetAlpha(value)\n    end\n    \n    self.ThrottleUpdate = 0\n    \n    --mAT:SetAlpha(1)\nend",
					["Time"] = 1719788095,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
					["Enabled"] = true,
					["Revision"] = 754,
					["Options"] = {
						{
							["Type"] = 6,
							["Key"] = "option1",
							["Value"] = 0,
							["Name"] = "Option 1",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 5,
							["Key"] = "option2",
							["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
							["Name"] = "Option 2",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 5,
							["Key"] = "option4",
							["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
							["Name"] = "Option 4",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 6,
							["Key"] = "option3",
							["Value"] = 0,
							["Name"] = "Option 3",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Set the alpha of the moving arrow",
							["Min"] = 0,
							["Key"] = "arrowAlpha",
							["Value"] = 0.73,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Arrow Alpha",
						}, -- [5]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "Time that takes for an arrow to travel from the to right.",
							["Min"] = 0,
							["Key"] = "animSpeed",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Animation Speed",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "desaturateArrow",
							["Value"] = false,
							["Name"] = "Use White Arrow",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "If enabled, the arrow color will be desaturated.",
						}, -- [7]
						{
							["Type"] = 6,
							["Key"] = "option8",
							["Value"] = 0,
							["Name"] = "Option 8",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [8]
						{
							["Type"] = 4,
							["Key"] = "bChangeSpellName",
							["Value"] = true,
							["Name"] = "Change Spell Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change the spell name to the text entered below",
						}, -- [9]
						{
							["Type"] = 3,
							["Key"] = "spellNameText",
							["Value"] = "Frontal",
							["Name"] = "New Spell Name",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
							["Desc"] = "The customized spell name",
						}, -- [10]
					},
					["Author"] = "Terciob",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local mAT = unitFrame._movingArrowTexture\n    \n    mAT:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    mAT:SetSize(16, self:GetHeight())\n    mAT:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    mAT:SetParent(self.FrameOverlay)\n    mAT:SetDrawLayer(\"overlay\",  7)\n    mAT:SetAlpha(scriptTable.config.arrowAlpha)\n    mAT:SetDesaturated(scriptTable.config.desaturateArrow)        \n    \n    mAT:ClearAllPoints()\n    mAT:SetPoint(\"left\", self, \"left\", -16, 0)\n    \n    local arrowAnimation = mAT.arrowAnimation\n    arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    arrowAnimation:SetOffset(self:GetWidth(), 0)\n    \n    mAT.movingAnimation:Play()\n    \n    if (scriptTable.config.bChangeSpellName) then\n        self.Text:SetText(scriptTable.config.spellNameText)\n    end\n    \n    --DetailsFramework:DebugVisibility(mAT)\n\nend\n\n\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						431494, -- [1]
						426860, -- [2]
						448213, -- [3]
						434407, -- [4]
						439789, -- [5]
						434824, -- [6]
						453161, -- [7]
						435012, -- [8]
						439506, -- [9]
						443500, -- [10]
						434779, -- [11]
						451543, -- [12]
						439621, -- [13]
						441384, -- [14]
						441381, -- [15]
						447395, -- [16]
						456711, -- [17]
						448105, -- [18]
						323137, -- [19]
						321968, -- [20]
						331718, -- [21]
						331721, -- [22]
						325223, -- [23]
						340160, -- [24]
						321834, -- [25]
						320596, -- [26]
						324323, -- [27]
						333488, -- [28]
						323496, -- [29]
						333477, -- [30]
						256627, -- [31]
						257292, -- [32]
						454438, -- [33]
						269029, -- [34]
						257862, -- [35]
						425027, -- [36]
						449130, -- [37]
						428202, -- [38]
						448640, -- [39]
						427869, -- [40]
						352833, -- [41]
						330403, -- [42]
						209495, -- [43]
						257426, -- [44]
						255952, -- [45]
						257870, -- [46]
						413147, -- [47]
						383107, -- [48]
						377559, -- [49]
						388060, -- [50]
						376170, -- [51]
						384524, -- [52]
						375351, -- [53]
						390111, -- [54]
						369791, -- [55]
						369573, -- [56]
						369563, -- [57]
						369335, -- [58]
						369061, -- [59]
						375727, -- [60]
						265016, -- [61]
						265019, -- [62]
						260793, -- [63]
						260292, -- [64]
						272457, -- [65]
						272609, -- [66]
						269843, -- [67]
						183465, -- [68]
						226296, -- [69]
						188169, -- [70]
						183088, -- [71]
						410873, -- [72]
						411012, -- [73]
						88308, -- [74]
						382708, -- [75]
						375251, -- [76]
						375439, -- [77]
						372311, -- [78]
						373742, -- [79]
						372201, -- [80]
						374533, -- [81]
						377204, -- [82]
						201226, -- [83]
						204667, -- [84]
						198379, -- [85]
						200768, -- [86]
						253239, -- [87]
						250258, -- [88]
						255567, -- [89]
						194956, -- [90]
						427510, -- [91]
						426645, -- [92]
						412505, -- [93]
						412129, -- [94]
						419351, -- [95]
						401482, -- [96]
						404916, -- [97]
						200345, -- [98]
						200261, -- [99]
						198641, -- [100]
						265372, -- [101]
						271174, -- [102]
						264694, -- [103]
						264923, -- [104]
					},
					["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
					["Name"] = "Cast - Frontal Cone [Plater]",
					["NpcNames"] = {
					},
				}, -- [42]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1669340350,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/radio_64",
					["Enabled"] = true,
					["Revision"] = 106,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useReverse",
							["Value"] = false,
							["Name"] = "Reverse Health Bar",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [1]
						{
							["Type"] = 6,
							["Key"] = "option6",
							["Value"] = 0,
							["Name"] = "Option 6",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [2]
						{
							["Type"] = 4,
							["Key"] = "useShake",
							["Value"] = false,
							["Name"] = "Enable Shake",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 2,
							["Max"] = 1,
							["Desc"] = "How strong is the shake.",
							["Min"] = 0.05,
							["Key"] = "shakeAmplitude",
							["Value"] = 0.2,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Amplitude",
						}, -- [4]
						{
							["Type"] = 2,
							["Max"] = 80,
							["Desc"] = "How fast the shake moves.",
							["Min"] = 1,
							["Key"] = "shakeFrequency",
							["Value"] = 70,
							["Fraction"] = true,
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
							["Name"] = "Shake Frequency",
						}, -- [5]
						{
							["Type"] = 6,
							["Key"] = "option7",
							["Value"] = 0,
							["Name"] = "Option 7",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [6]
						{
							["Type"] = 4,
							["Key"] = "useBackground",
							["Value"] = true,
							["Name"] = "Show Red Background",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Show Red Background",
						}, -- [7]
					},
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "",
					["Name"] = "Add - Explode on Die [P]",
					["NpcNames"] = {
						"194895", -- [1]
						"105703", -- [2]
						"59598", -- [3]
						"58319", -- [4]
						200388, -- [5]
						189299, -- [6]
						131402, -- [7]
						135052, -- [8]
					},
				}, -- [43]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
					["Time"] = 1670427654,
					["url"] = "",
					["Icon"] = "interface/addons/plater/media/exclamation_64",
					["Enabled"] = true,
					["Revision"] = 162,
					["Options"] = {
						{
							["Type"] = 4,
							["Key"] = "useNameplateColor",
							["Value"] = true,
							["Name"] = "Change Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Change Nameplate Color",
						}, -- [1]
						{
							["Type"] = 1,
							["Key"] = "healthBarColor",
							["Value"] = {
								1, -- [1]
								0.43921571969986, -- [2]
								0.4588235616684, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Nameplate Color",
						}, -- [2]
						{
							["Type"] = 6,
							["Key"] = "option5",
							["Value"] = 0,
							["Name"] = "Blank Space",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
							["Desc"] = "",
						}, -- [3]
						{
							["Type"] = 4,
							["Key"] = "useFlash",
							["Value"] = true,
							["Name"] = "Flash Nameplate",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
							["Desc"] = "Flash Nameplate",
						}, -- [4]
						{
							["Type"] = 7,
							["Key"] = "npcColor",
							["Value"] = {
								{
									"189893", -- [1]
									"olivedrab", -- [2]
								}, -- [1]
								{
									"190187", -- [1]
									"olivedrab", -- [2]
								}, -- [2]
								{
									"99922", -- [1]
									"olivedrab", -- [2]
								}, -- [3]
								{
									"153285", -- [1]
									"olivedrab", -- [2]
								}, -- [4]
								{
									"104822", -- [1]
									"olivedrab", -- [2]
								}, -- [5]
							},
							["Name"] = "NpcID to Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
							["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
						}, -- [5]
					},
					["Author"] = "Huugg-Valdrakken",
					["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["Desc"] = "Change the color of  add",
					["Name"] = "Add - Warning [P]",
					["NpcNames"] = {
						"190187", -- [1]
						"189893", -- [2]
						"99922", -- [3]
						"104822", -- [4]
						129758, -- [5]
						186696, -- [6]
						101075, -- [7]
						100818, -- [8]
						98081, -- [9]
						52019, -- [10]
					},
				}, -- [44]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend\n\n\n",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["Time"] = 1719788550,
					["url"] = "",
					["Icon"] = "Interface\\AddOns\\Plater\\images\\aura_castbar.png",
					["Enabled"] = true,
					["Revision"] = 27,
					["Options"] = {
					},
					["Author"] = "Terciob",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local auraDuration = envTable._Duration\n    local altCastId = 1\n    \n    ---@class plater_altcastbarconfig : table\n    ---@field iconTexture string\n    ---@field iconTexcoord table\n    ---@field iconAlpha number\n    ---@field text string\n    ---@field texture any\n    ---@field color any\n    ---@field isChanneling boolean\n    ---@field canInterrupt boolean\n    ---@field height number\n    ---@field iconSize number\n    ---@field textSize number\n    ---@field spellNameAnchor df_anchor\n    ---@field timerAnchor df_anchor\n    ---@field iconAnchor df_anchor\n    \n    local configTable = {\n        iconTexture = envTable._Texture,\n        text = envTable._SpellName,\n        color = \"gray\",\n        isChanneling = true,\n        canInterrupt = false,\n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        \n    }\n    \n    Plater.SetAltCastBar(unitFrame.PlateFrame, configTable, auraDuration, envTable._StartTime, altCastId)\n    \nend\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						438494, -- [1]
						335141, -- [2]
					},
					["Desc"] = "Show a castbar for the aura duration.",
					["Name"] = "Aura - Is Cast Bar [P]",
					["NpcNames"] = {
					},
				}, -- [45]
				{
					["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["ScriptType"] = 1,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1668886509,
					["url"] = "",
					["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
					["Enabled"] = true,
					["Revision"] = 33,
					["Options"] = {
						{
							["Type"] = 1,
							["Key"] = "nameplateColor",
							["Value"] = {
								0, -- [1]
								0.55686274509804, -- [2]
								0.035294117647059, -- [3]
								1, -- [4]
							},
							["Name"] = "Nameplate Color",
							["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
							["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
						}, -- [1]
					},
					["Author"] = "Ditador-Azralon",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
					["semver"] = "",
					["version"] = -1,
					["PlaterCore"] = 1,
					["SpellIds"] = {
						426662, -- [1]
						426663, -- [2]
					},
					["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
					["Name"] = "Fixate by Unit Buff [P]",
					["NpcNames"] = {
					},
				}, -- [46]
				{
					["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
					["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
					["ScriptType"] = 3,
					["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
					["Time"] = 1604087921,
					["url"] = "",
					["Icon"] = 841383,
					["Enabled"] = true,
					["Revision"] = 266,
					["Options"] = {
					},
					["Author"] = "Tecno-Azralon",
					["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
					["SpellIds"] = {
						"spawn of g'huun", -- [1]
						"smuggled crawg", -- [2]
						"sergeant bainbridge", -- [3]
						"blacktooth scrapper", -- [4]
						"irontide grenadier", -- [5]
						"feral bloodswarmer", -- [6]
						"earthrager", -- [7]
						"crawler mine", -- [8]
						"rezan", -- [9]
					},
					["version"] = -1,
					["PlaterCore"] = 1,
					["semver"] = "",
					["Name"] = "Fixate On You [Plater]",
					["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
					["NpcNames"] = {
					},
				}, -- [47]
				{
					["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["OptionsValues"] = {
					},
					["Temp_OnShowCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["ScriptType"] = 3,
					["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Time"] = 1725334829,
					["Temp_ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Icon"] = "",
					["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Revision"] = 1,
					["Options"] = {
					},
					["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["Author"] = "Raynná-Boulderfist",
					["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
					["OnShowCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Enabled"] = true,
					["Temp_UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
					["Name"] = "New Script",
					["PlaterCore"] = 1,
					["SpellIds"] = {
					},
					["UID"] = "0x66d6852d44b4858",
					["NpcNames"] = {
					},
					["Desc"] = "",
				}, -- [48]
			},
			["aura_stack_anchor"] = {
				["y"] = -7,
				["x"] = 1,
				["side"] = 1,
			},
			["extra_icon_show_stacks"] = false,
			["indicator_friendlyclass"] = true,
			["patch_version"] = 37,
			["range_check_in_range_or_target_alpha"] = 1,
			["aura_timer_text_size"] = 10,
			["indicator_friendlyspec"] = true,
			["number_region_first_run"] = true,
			["aura_grow_direction"] = 3,
			["aggro_modifies"] = {
				["actor_name_color"] = true,
			},
			["transparency_behavior_on_friendlies"] = true,
			["castbar_target_anchor"] = {
				["side"] = 4,
			},
			["hook_data_trash"] = {
				{
					["Enabled"] = true,
					["Revision"] = 1,
					["Options"] = {
					},
					["HooksTemp"] = {
					},
					["UID"] = "0x66e0968e5585ad",
					["Author"] = "Raynna-Gehennas",
					["Time"] = 1725994638,
					["Desc"] = "",
					["Hooks"] = {
					},
					["__TrashAt"] = 1725994644,
					["Name"] = "New Mod",
					["PlaterCore"] = 1,
					["LastHookEdited"] = "",
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "",
					["OptionsValues"] = {
					},
				}, -- [1]
				{
					["OptionsValues"] = {
					},
					["LastHookEdited"] = "Nameplate Created",
					["UID"] = "0x66e096ae2168b7cd",
					["Hooks"] = {
						["Nameplate Created"] = "\n\n",
					},
					["scriptId"] = "table: 00000250C4163510",
					["Time"] = 1725994726,
					["LoadConditions"] = {
						["talent"] = {
						},
						["group"] = {
						},
						["class"] = {
						},
						["map_ids"] = {
						},
						["role"] = {
						},
						["pvptalent"] = {
						},
						["race"] = {
						},
						["affix"] = {
						},
						["encounter_ids"] = {
						},
						["spec"] = {
						},
					},
					["Icon"] = "",
					["Enabled"] = true,
					["Revision"] = 7,
					["Options"] = {
					},
					["Author"] = "Raynna-Gehennas",
					["Desc"] = "",
					["Prio"] = 99,
					["Name"] = "Tja",
					["PlaterCore"] = 1,
					["HooksTemp"] = {
						["Nameplate Created"] = "\n\n",
					},
					["__TrashAt"] = 1725994729,
				}, -- [2]
			},
			["dps"] = {
				["colors"] = {
					["aggro"] = {
						nil, -- [1]
						0, -- [2]
						0.070588238537312, -- [3]
					},
					["noaggro"] = {
						1, -- [1]
						0.33725491166115, -- [2]
						0, -- [3]
					},
					["pulling"] = {
						nil, -- [1]
						0.45098042488098, -- [2]
					},
				},
			},
			["indicator_faction"] = false,
			["first_run3"] = true,
			["aura_show_only_short_dispellable_on_players"] = true,
			["cast_statusbar_spark_width"] = 4,
			["auto_toggle_stacking"] = {
				["party"] = false,
				["raid"] = false,
				["arena"] = false,
				["world"] = false,
			},
			["indicator_enemyclass"] = true,
			["auto_toggle_enemy"] = {
				["cities"] = true,
			},
		},
	},
}
PlaterLanguage = {
	["language"] = "enUS",
	["version"] = 1,
}
PlaterLogs = {
	["_general_logs"] = {
		"2024-09-20 15:31:54 | INIT | Plater-v588-Cata | Framework v569 | 4.4.0 | enUS | Raynna", -- [1]
		"2024-09-20 04:48:57 | INIT | Plater-v588-Cata | Framework v569 | 4.4.0 | enUS | Raynna", -- [2]
		"2024-09-20 04:46:22 | INIT | Plater-v588-Cata | Framework v569 | 4.4.0 | enUS | Raynna", -- [3]
		"2024-09-20 04:32:53 | INIT | Plater-v588-Cata | Framework v569 | 4.4.0 | enUS | Raynna", -- [4]
		"2024-09-20 00:09:55 | INIT | Plater-v588-Cata | Framework v569 | 4.4.0 | enUS | Raynna", -- [5]
		"2024-09-19 23:03:33 | INIT | Plater-v588-Cata | Framework v569 | 4.4.0 | enUS | Raynna", -- [6]
		"2024-09-19 22:40:40 | INIT | Plater-v588-Cata | Framework v569 | 4.4.0 | enUS | Raynna", -- [7]
		"2024-09-19 20:55:51 | INIT | Plater-v588-Cata | Framework v569 | 4.4.0 | enUS | Raynna", -- [8]
		"2024-09-19 20:55:15 | INIT | Plater-v588-Cata | Framework v569 | 4.4.0 | enUS | Raynna", -- [9]
		"2024-09-18 20:21:36 | INIT | Plater-v588-Cata | Framework v569 | 4.4.0 | enUS | Raynna", -- [10]
		"2024-09-18 20:08:51 | INIT | Plater-v588-Cata | Framework v569 | 4.4.0 | enUS | Raynná", -- [11]
		"2024-09-18 15:47:25 | INIT | Plater-v588-Cata | Framework v569 | 4.4.0 | enUS | Raynná", -- [12]
		"2024-09-18 15:46:58 | INIT | Plater-v588-Cata | Framework v569 | 4.4.0 | enUS | Raynná", -- [13]
		"2024-09-18 14:49:59 | INIT | Plater-v588-Cata | Framework v569 | 4.4.0 | enUS | Raynná", -- [14]
		"2024-09-18 01:32:40 | INIT | Plater-v588-Cata | Framework v569 | 4.4.0 | enUS | Raynná", -- [15]
		"2024-09-18 01:31:38 | INIT | Plater-v588-Cata | Framework v569 | 4.4.0 | enUS | Raynná", -- [16]
		"2024-09-18 01:19:47 | INIT | Plater-v588-Cata | Framework v569 | 4.4.0 | enUS | Raynná", -- [17]
		"2024-09-18 01:19:16 | INIT | Plater-v588-Cata | Framework v569 | 4.4.0 | enUS | Raynná", -- [18]
		"2024-09-18 01:14:44 | INIT | Plater-v588-Cata | Framework v569 | 4.4.0 | enUS | Raynná", -- [19]
	},
	["_error_logs"] = {
	},
}
PlaterBackup = {
}
